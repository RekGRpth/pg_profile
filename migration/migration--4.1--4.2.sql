ALTER TABLE sample_stat_cluster
  ADD wal_lsn                    pg_lsn,
  ADD in_recovery                boolean
;

ALTER TABLE last_stat_cluster
  ADD wal_lsn                    pg_lsn,
  ADD in_recovery                boolean,
  ALTER COLUMN server_id SET NOT NULL,
  ALTER COLUMN sample_id SET NOT NULL
;

ALTER TABLE last_stat_database
  ADD dattablespace             oid,
  ADD datallowconn              boolean
;

ALTER TABLE sample_statements
  ADD temp_blk_read_time  double precision,
  ADD temp_blk_write_time double precision
;

ALTER TABLE sample_statements_total
  ADD temp_blk_read_time  double precision,
  ADD temp_blk_write_time double precision
;

ALTER TABLE last_stat_statements
  ADD temp_blk_read_time  double precision,
  ADD temp_blk_write_time double precision
;

ALTER TABLE report_struct
  ADD sect_struct     jsonb
;

ALTER TABLE last_stat_cluster ADD CONSTRAINT pk_last_stat_cluster_samples
  PRIMARY KEY (server_id, sample_id);
ALTER TABLE last_stat_wal ADD CONSTRAINT pk_last_stat_wal_samples
  PRIMARY KEY (server_id, sample_id);
ALTER TABLE last_stat_archiver ADD CONSTRAINT pk_last_stat_archiver_samples
  PRIMARY KEY (server_id, sample_id);
CREATE INDEX ix_bl_samples_sample ON bl_samples(server_id, sample_id);

DROP VIEW v_sample_stat_tables;
CREATE VIEW v_sample_stat_tables AS
    SELECT
        server_id,
        sample_id,
        datid,
        relid,
        tablespacename,
        schemaname,
        relname,
        seq_scan,
        seq_tup_read,
        idx_scan,
        idx_tup_fetch,
        n_tup_ins,
        n_tup_upd,
        n_tup_del,
        n_tup_hot_upd,
        n_live_tup,
        n_dead_tup,
        n_mod_since_analyze,
        n_ins_since_vacuum,
        last_vacuum,
        last_autovacuum,
        last_analyze,
        last_autoanalyze,
        vacuum_count,
        autovacuum_count,
        analyze_count,
        autoanalyze_count,
        heap_blks_read,
        heap_blks_hit,
        idx_blks_read,
        idx_blks_hit,
        toast_blks_read,
        toast_blks_hit,
        tidx_blks_read,
        tidx_blks_hit,
        relsize,
        relsize_diff,
        tablespaceid,
        reltoastrelid,
        relkind,
        relpages_bytes,
        relpages_bytes_diff
    FROM sample_stat_tables
      JOIN tables_list USING (server_id, datid, relid)
      JOIN tablespaces_list tl USING (server_id, tablespaceid);
COMMENT ON VIEW v_sample_stat_tables IS 'Tables stats view with table names and schemas';


UPDATE import_queries SET query =
  'INSERT INTO funcs_list (server_id,last_sample_id,datid,funcid,schemaname,'
    'funcname,funcargs)'
  'SELECT '
    'srv_map.local_srv_id, '
    'dt.last_sample_id, '
    'dt.datid, '
    'dt.funcid, '
    'dt.schemaname, '
    'dt.funcname, '
    'dt.funcargs '
  'FROM %1$s imp '
    'CROSS JOIN json_to_record(imp.row_data) AS '
      'dt ( '
        'server_id      integer, '
        'last_sample_id integer, '
        'datid          oid, '
        'funcid         oid, '
        'schemaname     name, '
        'funcname       name, '
        'funcargs       text '
      ') '
    'JOIN tmp_srv_map srv_map ON '
      '(srv_map.imp_srv_id = dt.server_id) '
    'LEFT OUTER JOIN funcs_list ld ON '
      '(ld.server_id, ld.datid, ld.funcid, ld.schemaname, ld.funcname, ld.funcargs) = '
      '(srv_map.local_srv_id, dt.datid, dt.funcid, dt.schemaname, dt.funcname, dt.funcargs) '
      'AND ld.last_sample_id IS NOT DISTINCT FROM dt.last_sample_id '
  'WHERE ld.server_id IS NULL AND imp.section_id = $1 '
  'ON CONFLICT ON CONSTRAINT pk_funcs_list DO '
  'UPDATE SET (last_sample_id, schemaname, funcname, funcargs) = '
    '(EXCLUDED.last_sample_id, EXCLUDED.schemaname, EXCLUDED.funcname, EXCLUDED.funcargs) '
WHERE
  (from_version, exec_order, relname) = ('0.3.1', 1, 'funcs_list');

UPDATE import_queries SET query =
  'INSERT INTO indexes_list (server_id,last_sample_id,datid,indexrelid,relid,'
    'schemaname,indexrelname)'
  'SELECT '
    'srv_map.local_srv_id, '
    'dt.last_sample_id, '
    'dt.datid, '
    'dt.indexrelid, '
    'dt.relid, '
    'dt.schemaname, '
    'dt.indexrelname '
  'FROM %1$s imp '
    'CROSS JOIN json_to_record(imp.row_data) AS '
      'dt ( '
        'server_id      integer, '
        'last_sample_id integer, '
        'datid          oid, '
        'indexrelid     oid, '
        'relid          oid, '
        'schemaname     name, '
        'indexrelname   name '
      ') '
    'JOIN tmp_srv_map srv_map ON '
      '(srv_map.imp_srv_id = dt.server_id) '
    'LEFT OUTER JOIN indexes_list ld ON '
      '(ld.server_id, ld.datid, ld.indexrelid, ld.schemaname, ld.indexrelname) = '
      '(srv_map.local_srv_id, dt.datid, dt.indexrelid, dt.schemaname, dt.indexrelname) '
      'AND ld.last_sample_id IS NOT DISTINCT FROM dt.last_sample_id '
  'WHERE ld.server_id IS NULL AND imp.section_id = $1 '
  'ON CONFLICT ON CONSTRAINT pk_indexes_list DO '
  'UPDATE SET (last_sample_id, schemaname, indexrelname) = '
    ' (EXCLUDED.last_sample_id, EXCLUDED.schemaname, EXCLUDED.indexrelname)'
WHERE
  (from_version, exec_order, relname) = ('0.3.1', 1, 'indexes_list');

UPDATE import_queries SET query =
  'INSERT INTO sample_stat_cluster (server_id,sample_id,checkpoints_timed,'
    'checkpoints_req,checkpoint_write_time,checkpoint_sync_time,buffers_checkpoint,'
    'buffers_clean,maxwritten_clean,buffers_backend,buffers_backend_fsync,'
    'buffers_alloc,stats_reset,wal_size,wal_lsn,in_recovery)'
  'SELECT '
    'srv_map.local_srv_id, '
    'dt.sample_id, '
    'dt.checkpoints_timed, '
    'dt.checkpoints_req, '
    'dt.checkpoint_write_time, '
    'dt.checkpoint_sync_time, '
    'dt.buffers_checkpoint, '
    'dt.buffers_clean, '
    'dt.maxwritten_clean, '
    'dt.buffers_backend, '
    'dt.buffers_backend_fsync, '
    'dt.buffers_alloc, '
    'dt.stats_reset, '
    'dt.wal_size, '
    'dt.wal_lsn, '
    'dt.in_recovery '
  'FROM %1$s imp '
    'CROSS JOIN json_to_record(imp.row_data) AS '
      'dt ( '
        'server_id              integer, '
        'sample_id              integer, '
        'checkpoints_timed      bigint, '
        'checkpoints_req        bigint, '
        'checkpoint_write_time  double precision, '
        'checkpoint_sync_time   double precision, '
        'buffers_checkpoint     bigint, '
        'buffers_clean          bigint, '
        'maxwritten_clean       bigint, '
        'buffers_backend        bigint, '
        'buffers_backend_fsync  bigint, '
        'buffers_alloc          bigint, '
        'stats_reset            timestamp with time zone, '
        'wal_size               bigint, '
        'wal_lsn                pg_lsn, '
        'in_recovery            boolean '
      ') '
    'JOIN tmp_srv_map srv_map ON '
      '(srv_map.imp_srv_id = dt.server_id) '
    'LEFT OUTER JOIN sample_stat_cluster ld ON '
      '(ld.server_id = srv_map.local_srv_id AND ld.sample_id = dt.sample_id) '
  'WHERE ld.server_id IS NULL AND imp.section_id = $1 '
WHERE
  (from_version, exec_order, relname) = ('0.3.1', 1, 'sample_stat_cluster');

UPDATE import_queries SET query =
  'INSERT INTO sample_statements_total (server_id,sample_id,datid,plans,total_plan_time,'
    'calls,total_exec_time,rows,shared_blks_hit,shared_blks_read,'
    'shared_blks_dirtied,shared_blks_written,local_blks_hit,local_blks_read,'
    'local_blks_dirtied,local_blks_written,temp_blks_read,temp_blks_written,'
    'blk_read_time,blk_write_time,wal_records,wal_fpi,wal_bytes,statements'
    ',jit_functions,jit_generation_time,jit_inlining_count,jit_inlining_time,'
    'jit_optimization_count,jit_optimization_time,jit_emission_count,jit_emission_time,'
    'temp_blk_read_time,temp_blk_write_time'
    ')'
  'SELECT '
    'srv_map.local_srv_id, '
    'dt.sample_id, '
    'dt.datid, '
    'dt.plans, '
    'dt.total_plan_time, '
    'dt.calls, '
    'dt.total_exec_time, '
    'dt.rows, '
    'dt.shared_blks_hit, '
    'dt.shared_blks_read, '
    'dt.shared_blks_dirtied, '
    'dt.shared_blks_written, '
    'dt.local_blks_hit, '
    'dt.local_blks_read, '
    'dt.local_blks_dirtied, '
    'dt.local_blks_written, '
    'dt.temp_blks_read, '
    'dt.temp_blks_written, '
    'dt.blk_read_time, '
    'dt.blk_write_time, '
    'dt.wal_records, '
    'dt.wal_fpi, '
    'dt.wal_bytes, '
    'dt.statements, '
    'dt.jit_functions, '
    'dt.jit_generation_time, '
    'dt.jit_inlining_count, '
    'dt.jit_inlining_time, '
    'dt.jit_optimization_count, '
    'dt.jit_optimization_time, '
    'dt.jit_emission_count, '
    'dt.jit_emission_time, '
    'dt.temp_blk_read_time, '
    'dt.temp_blk_write_time '
  'FROM %1$s imp '
    'CROSS JOIN json_to_record(imp.row_data) AS '
      'dt ( '
        'server_id            integer, '
        'sample_id            integer, '
        'datid                oid, '
        'plans                bigint, '
        'total_plan_time      double precision, '
        'calls                bigint, '
        'total_exec_time      double precision, '
        'rows                 bigint, '
        'shared_blks_hit      bigint, '
        'shared_blks_read     bigint, '
        'shared_blks_dirtied  bigint, '
        'shared_blks_written  bigint, '
        'local_blks_hit       bigint, '
        'local_blks_read      bigint, '
        'local_blks_dirtied   bigint, '
        'local_blks_written   bigint, '
        'temp_blks_read       bigint, '
        'temp_blks_written    bigint, '
        'blk_read_time        double precision, '
        'blk_write_time       double precision, '
        'wal_records          bigint, '
        'wal_fpi              bigint, '
        'wal_bytes            numeric, '
        'statements           bigint, '
        'jit_functions        bigint, '
        'jit_generation_time  double precision, '
        'jit_inlining_count   bigint, '
        'jit_inlining_time    double precision, '
        'jit_optimization_count  bigint, '
        'jit_optimization_time   double precision, '
        'jit_emission_count   bigint, '
        'jit_emission_time    double precision, '
        'temp_blk_read_time   double precision, '
        'temp_blk_write_time  double precision '
      ') '
    'JOIN tmp_srv_map srv_map ON '
      '(srv_map.imp_srv_id = dt.server_id) '
    'LEFT OUTER JOIN sample_statements_total ld ON '
      '(ld.server_id = srv_map.local_srv_id AND ld.sample_id = dt.sample_id AND ld.datid = dt.datid) '
  'WHERE ld.server_id IS NULL AND imp.section_id = $1 '
WHERE
  (from_version, exec_order, relname) = ('0.3.1', 1, 'sample_statements_total');

UPDATE import_queries SET query =
  'INSERT INTO tables_list (server_id,last_sample_id,datid,relid,relkind,'
    'reltoastrelid,schemaname,relname)'
  'SELECT '
    'srv_map.local_srv_id, '
    'dt.last_sample_id, '
    'dt.datid, '
    'dt.relid, '
    'dt.relkind, '
    'dt.reltoastrelid, '
    'dt.schemaname, '
    'dt.relname '
  'FROM %1$s imp '
    'CROSS JOIN json_to_record(imp.row_data) AS '
      'dt ( '
        'server_id      integer, '
        'last_sample_id integer, '
        'datid          oid, '
        'relid          oid, '
        'relkind        character(1), '
        'reltoastrelid  oid, '
        'schemaname     name, '
        'relname        name '
      ') '
    'JOIN tmp_srv_map srv_map ON '
      '(srv_map.imp_srv_id = dt.server_id) '
    'LEFT OUTER JOIN tables_list ld ON '
      '(ld.server_id, ld.datid, ld.relid, ld.schemaname, ld.relname) = '
      '(srv_map.local_srv_id, dt.datid, dt.relid, dt.schemaname, dt.relname) '
      'AND ld.last_sample_id IS NOT DISTINCT FROM dt.last_sample_id '
  'WHERE ld.server_id IS NULL AND imp.section_id = $1 '
  'ON CONFLICT ON CONSTRAINT pk_tables_list DO '
  'UPDATE SET (last_sample_id, schemaname, relname) = '
    '(EXCLUDED.last_sample_id, EXCLUDED.schemaname, EXCLUDED.relname)'
WHERE
  (from_version, exec_order, relname) = ('0.3.1', 1, 'tables_list');

UPDATE import_queries SET query =
  'INSERT INTO stmt_list (server_id,last_sample_id,queryid_md5,query)'
  'SELECT '
    'srv_map.local_srv_id, '
    'dt.last_sample_id, '
    'dt.queryid_md5, '
    'dt.query '
  'FROM %1$s imp '
    'CROSS JOIN json_to_record(imp.row_data) AS '
      'dt ( '
        'server_id      integer, '
        'last_sample_id integer, '
        'queryid_md5    character(32), '
        'query          text '
      ') '
    'JOIN tmp_srv_map srv_map ON '
      '(srv_map.imp_srv_id = dt.server_id) '
    'LEFT OUTER JOIN stmt_list ld ON '
      '(ld.server_id, ld.queryid_md5) = '
      '(srv_map.local_srv_id, dt.queryid_md5) '
      'AND ld.last_sample_id IS NOT DISTINCT FROM dt.last_sample_id '
  'WHERE ld.server_id IS NULL AND imp.section_id = $1 '
  'ON CONFLICT ON CONSTRAINT pk_stmt_list '
  'DO UPDATE SET last_sample_id = EXCLUDED.last_sample_id'
WHERE
  (from_version, exec_order, relname) = ('3.9', 1, 'stmt_list');

UPDATE import_queries SET query =
  'INSERT INTO last_stat_statements (server_id,sample_id,userid,username,datid,queryid,queryid_md5,'
    'plans,total_plan_time,min_plan_time,max_plan_time,mean_plan_time,'
    'stddev_plan_time,calls,total_exec_time,min_exec_time,max_exec_time,mean_exec_time,'
    'stddev_exec_time,rows,shared_blks_hit,shared_blks_read,shared_blks_dirtied,'
    'shared_blks_written,local_blks_hit,local_blks_read,local_blks_dirtied,'
    'local_blks_written,temp_blks_read,temp_blks_written,blk_read_time,blk_write_time,'
    'wal_records,wal_fpi,wal_bytes,toplevel,in_sample'
    ',jit_functions,jit_generation_time,jit_inlining_count,jit_inlining_time,'
    'jit_optimization_count,jit_optimization_time,jit_emission_count,jit_emission_time,'
    'temp_blk_read_time,temp_blk_write_time'
    ')'
  'SELECT '
    'srv_map.local_srv_id, '
    'dt.sample_id, '
    'dt.userid, '
    'dt.username, '
    'dt.datid, '
    'dt.queryid, '
    'dt.queryid_md5, '
    'dt.plans, '
    'dt.total_plan_time, '
    'dt.min_plan_time, '
    'dt.max_plan_time, '
    'dt.mean_plan_time, '
    'dt.stddev_plan_time, '
    'dt.calls, '
    'dt.total_exec_time, '
    'dt.min_exec_time, '
    'dt.max_exec_time, '
    'dt.mean_exec_time, '
    'dt.stddev_exec_time, '
    'dt.rows, '
    'dt.shared_blks_hit, '
    'dt.shared_blks_read, '
    'dt.shared_blks_dirtied, '
    'dt.shared_blks_written, '
    'dt.local_blks_hit, '
    'dt.local_blks_read, '
    'dt.local_blks_dirtied, '
    'dt.local_blks_written, '
    'dt.temp_blks_read, '
    'dt.temp_blks_written, '
    'dt.blk_read_time, '
    'dt.blk_write_time, '
    'dt.wal_records, '
    'dt.wal_fpi, '
    'dt.wal_bytes, '
    'dt.toplevel, '
    'dt.in_sample, '
    'dt.jit_functions, '
    'dt.jit_generation_time, '
    'dt.jit_inlining_count, '
    'dt.jit_inlining_time, '
    'dt.jit_optimization_count, '
    'dt.jit_optimization_time, '
    'dt.jit_emission_count, '
    'dt.jit_emission_time, '
    'dt.temp_blk_read_time, '
    'dt.temp_blk_write_time '
  'FROM %1$s imp '
    'CROSS JOIN json_to_record(imp.row_data) AS '
      'dt ( '
        'server_id            integer, '
        'sample_id            integer, '
        'userid               oid, '
        'username             name, '
        'datid                oid, '
        'queryid              bigint, '
        'queryid_md5          character(32), '
        'plans                bigint, '
        'total_plan_time      double precision, '
        'min_plan_time        double precision, '
        'max_plan_time        double precision, '
        'mean_plan_time       double precision, '
        'stddev_plan_time     double precision, '
        'calls                bigint, '
        'total_exec_time      double precision, '
        'min_exec_time        double precision, '
        'max_exec_time        double precision, '
        'mean_exec_time       double precision, '
        'stddev_exec_time     double precision, '
        'rows                 bigint, '
        'shared_blks_hit      bigint, '
        'shared_blks_read     bigint, '
        'shared_blks_dirtied  bigint, '
        'shared_blks_written  bigint, '
        'local_blks_hit       bigint, '
        'local_blks_read      bigint, '
        'local_blks_dirtied   bigint, '
        'local_blks_written   bigint, '
        'temp_blks_read       bigint, '
        'temp_blks_written    bigint, '
        'blk_read_time        double precision, '
        'blk_write_time       double precision, '
        'wal_records          bigint, '
        'wal_fpi              bigint, '
        'wal_bytes            numeric, '
        'toplevel             boolean, '
        'in_sample            boolean, '
        'jit_functions        bigint, '
        'jit_generation_time  double precision, '
        'jit_inlining_count   bigint, '
        'jit_inlining_time    double precision, '
        'jit_optimization_count  bigint, '
        'jit_optimization_time   double precision, '
        'jit_emission_count   bigint, '
        'jit_emission_time    double precision, '
        'temp_blk_read_time   double precision, '
        'temp_blk_write_time  double precision '
      ') '
    'JOIN tmp_srv_map srv_map ON '
      '(srv_map.imp_srv_id = dt.server_id) '
    'LEFT OUTER JOIN last_stat_statements ld ON '
      '(ld.server_id, ld.sample_id, ld.datid, ld.userid, ld.queryid, ld.toplevel) = '
      '(srv_map.local_srv_id, dt.sample_id, dt.datid, dt.userid, dt.queryid, dt.toplevel) '
  'WHERE ld.server_id IS NULL AND imp.section_id = $1 '
WHERE
  (from_version, exec_order, relname) = ('4.0', 1, 'last_stat_statements');

UPDATE import_queries SET query =
  'INSERT INTO sample_statements (server_id,sample_id,userid,datid,queryid,queryid_md5,'
    'plans,total_plan_time,min_plan_time,max_plan_time,mean_plan_time,'
    'stddev_plan_time,calls,total_exec_time,min_exec_time,max_exec_time,mean_exec_time,'
    'stddev_exec_time,rows,shared_blks_hit,shared_blks_read,shared_blks_dirtied,'
    'shared_blks_written,local_blks_hit,local_blks_read,local_blks_dirtied,'
    'local_blks_written,temp_blks_read,temp_blks_written,blk_read_time,blk_write_time,'
    'wal_records,wal_fpi,wal_bytes,toplevel'
    ',jit_functions,jit_generation_time,jit_inlining_count,jit_inlining_time,'
    'jit_optimization_count,jit_optimization_time,jit_emission_count,jit_emission_time,'
    'temp_blk_read_time,temp_blk_write_time'
    ')'
  'SELECT '
    'srv_map.local_srv_id, '
    'dt.sample_id, '
    'dt.userid, '
    'dt.datid, '
    'dt.queryid, '
    'dt.queryid_md5, '
    'dt.plans, '
    'dt.total_plan_time, '
    'dt.min_plan_time, '
    'dt.max_plan_time, '
    'dt.mean_plan_time, '
    'dt.stddev_plan_time, '
    'dt.calls, '
    'dt.total_exec_time, '
    'dt.min_exec_time, '
    'dt.max_exec_time, '
    'dt.mean_exec_time, '
    'dt.stddev_exec_time, '
    'dt.rows, '
    'dt.shared_blks_hit, '
    'dt.shared_blks_read, '
    'dt.shared_blks_dirtied, '
    'dt.shared_blks_written, '
    'dt.local_blks_hit, '
    'dt.local_blks_read, '
    'dt.local_blks_dirtied, '
    'dt.local_blks_written, '
    'dt.temp_blks_read, '
    'dt.temp_blks_written, '
    'dt.blk_read_time, '
    'dt.blk_write_time, '
    'dt.wal_records, '
    'dt.wal_fpi, '
    'dt.wal_bytes, '
    'dt.toplevel, '
    'dt.jit_functions, '
    'dt.jit_generation_time, '
    'dt.jit_inlining_count, '
    'dt.jit_inlining_time, '
    'dt.jit_optimization_count, '
    'dt.jit_optimization_time, '
    'dt.jit_emission_count, '
    'dt.jit_emission_time, '
    'dt.temp_blk_read_time, '
    'dt.temp_blk_write_time '
  'FROM %1$s imp '
    'CROSS JOIN json_to_record(imp.row_data) AS '
      'dt ( '
        'server_id            integer, '
        'sample_id            integer, '
        'userid               oid, '
        'datid                oid, '
        'queryid              bigint, '
        'queryid_md5          character(32), '
        'plans                bigint, '
        'total_plan_time      double precision, '
        'min_plan_time        double precision, '
        'max_plan_time        double precision, '
        'mean_plan_time       double precision, '
        'stddev_plan_time     double precision, '
        'calls                bigint, '
        'total_exec_time      double precision, '
        'min_exec_time        double precision, '
        'max_exec_time        double precision, '
        'mean_exec_time       double precision, '
        'stddev_exec_time     double precision, '
        'rows                 bigint, '
        'shared_blks_hit      bigint, '
        'shared_blks_read     bigint, '
        'shared_blks_dirtied  bigint, '
        'shared_blks_written  bigint, '
        'local_blks_hit       bigint, '
        'local_blks_read      bigint, '
        'local_blks_dirtied   bigint, '
        'local_blks_written   bigint, '
        'temp_blks_read       bigint, '
        'temp_blks_written    bigint, '
        'blk_read_time        double precision, '
        'blk_write_time       double precision, '
        'wal_records          bigint, '
        'wal_fpi              bigint, '
        'wal_bytes            numeric, '
        'toplevel             boolean, '
        'jit_functions        bigint, '
        'jit_generation_time  double precision, '
        'jit_inlining_count   bigint, '
        'jit_inlining_time    double precision, '
        'jit_optimization_count  bigint, '
        'jit_optimization_time   double precision, '
        'jit_emission_count   bigint, '
        'jit_emission_time    double precision, '
        'temp_blk_read_time   double precision, '
        'temp_blk_write_time  double precision '
      ') '
    'JOIN tmp_srv_map srv_map ON '
      '(srv_map.imp_srv_id = dt.server_id) '
    'LEFT OUTER JOIN sample_statements ld ON '
      '(ld.server_id, ld.sample_id, ld.datid, ld.userid, ld.queryid, ld.toplevel) = '
      '(srv_map.local_srv_id, dt.sample_id, dt.datid, dt.userid, dt.queryid, dt.toplevel) '
  'WHERE ld.server_id IS NULL AND imp.section_id = $1 '
WHERE
  (from_version, exec_order, relname) = ('4.0', 1, 'sample_statements');

UPDATE import_queries SET query =
  'INSERT INTO sample_kcache (server_id,sample_id,userid,datid,queryid,queryid_md5,'
    'plan_user_time,plan_system_time,plan_minflts,plan_majflts,'
    'plan_nswaps,plan_reads,plan_writes,plan_msgsnds,plan_msgrcvs,plan_nsignals,'
    'plan_nvcsws,plan_nivcsws,exec_user_time,exec_system_time,exec_minflts,'
    'exec_majflts,exec_nswaps,exec_reads,exec_writes,exec_msgsnds,exec_msgrcvs,'
    'exec_nsignals,exec_nvcsws,exec_nivcsws,toplevel'
    ')'
  'SELECT '
    'srv_map.local_srv_id, '
    'dt.sample_id, '
    'dt.userid, '
    'dt.datid, '
    'dt.queryid, '
    'q_map.queryid_md5_new, '
    'dt.plan_user_time, '
    'dt.plan_system_time, '
    'dt.plan_minflts, '
    'dt.plan_majflts, '
    'dt.plan_nswaps, '
    'dt.plan_reads, '
    'dt.plan_writes, '
    'dt.plan_msgsnds, '
    'dt.plan_msgrcvs, '
    'dt.plan_nsignals, '
    'dt.plan_nvcsws, '
    'dt.plan_nivcsws, '
    'dt.exec_user_time, '
    'dt.exec_system_time, '
    'dt.exec_minflts, '
    'dt.exec_majflts, '
    'dt.exec_nswaps, '
    'dt.exec_reads, '
    'dt.exec_writes, '
    'dt.exec_msgsnds, '
    'dt.exec_msgrcvs, '
    'dt.exec_nsignals, '
    'dt.exec_nvcsws, '
    'dt.exec_nivcsws, '
    'COALESCE(dt.toplevel, true) AS toplevel '
  'FROM %1$s imp '
    'CROSS JOIN json_to_record(imp.row_data) AS '
      'dt ( '
        'server_id         integer, '
        'sample_id         integer, '
        'userid            oid, '
        'datid             oid, '
        'queryid           bigint, '
        'queryid_md5       character(10), '
        'plan_user_time    double precision, '
        'plan_system_time  double precision, '
        'plan_minflts      bigint, '
        'plan_majflts      bigint, '
        'plan_nswaps       bigint, '
        'plan_reads        bigint, '
        'plan_writes       bigint, '
        'plan_msgsnds      bigint, '
        'plan_msgrcvs      bigint, '
        'plan_nsignals     bigint, '
        'plan_nvcsws       bigint, '
        'plan_nivcsws      bigint, '
        'exec_user_time    double precision, '
        'exec_system_time  double precision, '
        'exec_minflts      bigint, '
        'exec_majflts      bigint, '
        'exec_nswaps       bigint, '
        'exec_reads        bigint, '
        'exec_writes       bigint, '
        'exec_msgsnds      bigint, '
        'exec_msgrcvs      bigint, '
        'exec_nsignals     bigint, '
        'exec_nvcsws       bigint, '
        'exec_nivcsws      bigint, '
        'toplevel          boolean'
      ') '
    'JOIN tmp_srv_map srv_map ON '
      '(srv_map.imp_srv_id = dt.server_id) '
    'JOIN queryid_map q_map ON (srv_map.local_srv_id, dt.queryid_md5) = (q_map.server_id, q_map.queryid_md5_old) '
    'LEFT OUTER JOIN sample_kcache ld ON '
      '(ld.server_id, ld.sample_id, ld.datid, ld.userid, ld.queryid, ld.toplevel) = '
      '(srv_map.local_srv_id, dt.sample_id, dt.datid, dt.userid, dt.queryid, '
      'COALESCE(dt.toplevel, true)) '
  'WHERE ld.server_id IS NULL AND imp.section_id = $1 '
WHERE
  (from_version, exec_order, relname) = ('0.3.1', 1, 'sample_kcache');

INSERT INTO import_queries_version_order VALUES
('pg_profile','4.2','pg_profile','4.1')
;

DELETE FROM report_struct;
DELETE FROM report;
DELETE FROM report_static;
