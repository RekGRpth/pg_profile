/* === report_struct table data === */
-- Regular report
INSERT INTO report_struct (
  report_id, sect_id, parent_sect_id, s_ord, toc_cap, tbl_cap, feature, function_name,
  content, sect_struct)
VALUES
(1, 'rep_details', NULL, 10, 'Report details', 'Report details', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "properties",'
    '"columns": ['
        '{"id": "pgprofile_version", "class": "table_obj_value", "caption": "Version"},'
        '{"id": "server_name", "class": "table_obj_value", "caption": "Server name"},'
        '{"caption": "Interval (sample)", "class": "table_obj_value", "columns": ['
          '{"id": "start1_id", "class": "table_obj_value", "caption": "start"},'
          '{"id": "end1_id", "class": "table_obj_value", "caption": "end"}'
        ']},'
        '{"caption": "Interval (time)", "class": "table_obj_value", "columns": ['
          '{"id": "report_start1", "class": "table_obj_value", "caption": "start"},'
          '{"id": "report_end1", "class": "table_obj_value", "caption": "end"}'
        ']}'
    ']}'
  ']'::jsonb),
(1, 'rep_settings', NULL, 11, NULL, NULL, NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "settings",'
    '"filter": {"type": "exists", "field": "h_ord"},'
    '"ordering": "h_ord",'
    '"columns": ['
      '{"caption": "Setting", "id": "name", "class": "table_obj_name"},'
      '{"caption": "Value", "id": "reset_val", "class": "table_obj_value"}'
    ']'
  '}]'::jsonb),
(1, 'stmt_cmt1', NULL, 100, NULL, NULL, 'stmt_cnt_range', NULL,
  '{"class": "warning", "text": "This interval contains sample(s) with captured statements count more than 90% of pg_stat_statements.max parameter. '
  'Consider increasing pg_stat_statements.max parameter"}',
  '[{'
  '"type": "row_table", '
  '"source": "stmt_cnt_range",'
  '"ordering": "sample_id",'
  '"columns": ['
      '{"id": "sample_id", "class": "table_obj_value", "caption": "Sample ID"}, '
      '{"id": "sample_time", "class": "table_obj_value", "caption": "Sample Time"}, '
      '{"id": "stmt_cnt", "class": "table_obj_value", "caption": "Stmts Captured"}, '
      '{"id": "max_cnt", "class": "table_obj_value", "caption": "pg_stat_statements.max"}'
  ']}]'::jsonb),
(1, 'srvstat', NULL, 200, 'Server statistics', 'Server statistics', NULL, NULL, NULL, NULL),
(1, 'actsesshdr', NULL, 250, 'Session states', 'Session states observed by subsamples', 'act_backend', NULL,
  '{"class": "notice", "text": "Statistics about session states exceeding capturing thresholds."}', NULL),
(1, 'sqlsthdr', NULL, 300, 'SQL query statistics', 'SQL query statistics', 'statstatements', NULL, NULL, NULL),
(1, 'objects', NULL, 400, 'Schema object statistics', 'Schema object statistics', NULL, NULL, NULL, NULL),
(1, 'funchdr', NULL, 500, 'User function statistics', 'User function statistics', 'function_stats', NULL, NULL, NULL),
(1, 'vachdr', NULL, 600, 'Vacuum-related statistics', 'Vacuum-related statistics', NULL, NULL, NULL, NULL),
(1, 'settings', NULL, 700, 'Cluster settings', 'Cluster settings during the report interval', NULL, NULL, NULL, NULL),
(1, 'extensions', NULL, 750, 'Extension versions', 'Extension versions during the report interval', NULL, NULL, NULL, NULL),
(1, 'stmt_warn', NULL, 800, NULL, 'Warning!', 'stmt_cnt_all', NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "stmt_cnt_all",'
    '"ordering": "sample_id",'
    '"columns": ['
        '{"id": "sample_id", "class": "table_obj_value", "caption": "Sample ID"}, '
        '{"id": "sample_time", "class": "table_obj_value", "caption": "Sample Time"}, '
        '{"id": "stmt_cnt", "class": "table_obj_value", "caption": "Stmts Captured"}, '
        '{"id": "max_cnt", "class": "table_obj_value", "caption": "pg_stat_statements.max"}'
    ']}]'::jsonb)
;

-- Server section of regular report
INSERT INTO report_struct (
  report_id, sect_id, parent_sect_id, s_ord, toc_cap, tbl_cap, feature, function_name,
  content, sect_struct)
VALUES
(1, 'dbstat', 'srvstat', 100, 'Database statistics', 'Database statistics', NULL, NULL, NULL, NULL),
(1, 'dbstatreset', 'dbstat', 200, NULL, NULL, 'dbstats_reset', NULL,
  '{"class": "warning", "text": "Database statistics reset detected during report interval! Statistics for listed databases and contained objects might be affected"}',
  '[{'
    '"type": "row_table",'
    '"source": "dbstats_reset",'
    '"ordering": "sample_id",'
    '"columns": ['
      '{"caption": "Database", "id": "dbname", "class": "table_obj_name"},'
      '{"caption": "Sample", "id": "sample_id", "class": "table_obj_value"},'
      '{"caption": "Reset time", "id": "stats_reset", "class": "table_obj_value"}'
    ']'
  '}]'::jsonb),
(1, 'dbstatmain', 'dbstat', 300, NULL, NULL, NULL, NULL, NULL,
'[{'
    '"type": "row_table",'
    '"source": "dbstat",'
    '"ordering": "ord_db",'
    '"highlight": ['
      '{"id": "dbname", "index": 0}'
    '],'
    '"columns": ['
      '{"caption": "Database", "id": "dbname", "class": "table_obj_name"},'
      '{"caption": "Transactions", "columns": ['
        '{"caption": "Commits", "id": "xact_commit", "class": "table_obj_value", '
          '"title": "Number of transactions in this database that have been committed"},'
        '{"caption": "Rollbacks", "id": "xact_rollback", "class": "table_obj_value", '
          '"title": "Number of transactions in this database that have been rolled back"},'
        '{"caption": "Deadlocks", "id": "deadlocks", "class": "table_obj_value", '
          '"title": "Number of deadlocks detected in this database"}'
     ']},'
      '{"caption": "Checksums", "condition": "checksum_fail_detected", "columns": ['
        '{"caption": "Failures", "id": "checksum_failures", "class": "table_obj_value", '
          '"title": "Number of block checksum failures detected"},'
        '{"caption": "Last", "id": "checksum_last_failure", "class": "table_obj_value", '
          '"title": "Last checksum failure detected"}'
     ']},'
      '{"caption": "Block statistics", "columns": ['
        '{"caption": "Hit(%)", "id": "blks_hit_pct", "class": "table_obj_value", '
          '"title": "Buffer cache hit ratio"},'
        '{"caption": "Read", "id": "blks_read", "class": "table_obj_value", '
          '"title": "Number of disk blocks read in this database"},'
        '{"caption": "Hit", "id": "blks_hit", "class": "table_obj_value", '
          '"title": "Number of times disk blocks were found already in the buffer cache"}'
     ']},'
      '{"caption": "Block I/O times", "condition": "io_times", "columns": ['
        '{"caption": "Read", "id": "blk_read_time", "class": "table_obj_value", '
          '"title": "Time spent reading data file blocks by backends, in seconds"},'
        '{"caption": "Write", "id": "blk_write_time", "class": "table_obj_value", '
          '"title": "Time spent writing data file blocks by backends, in seconds"}'
     ']},'
      '{"caption": "Tuples", "columns": ['
        '{"caption": "Ret", "id": "tup_returned", "class": "table_obj_value", '
          '"title": "Number of rows returned by queries in this database"},'
        '{"caption": "Fet", "id": "tup_fetched", "class": "table_obj_value", '
          '"title": "Number of rows fetched by queries in this database"},'
        '{"caption": "Ins", "id": "tup_inserted", "class": "table_obj_value", '
          '"title": "Number of rows inserted by queries in this database"},'
        '{"caption": "Upd", "id": "tup_updated", "class": "table_obj_value", '
          '"title": "Number of rows updated by queries in this database"},'
        '{"caption": "Del", "id": "tup_deleted", "class": "table_obj_value", '
          '"title": "Number of rows deleted"}'
     ']},'
     '{"caption": "Parallel workers", "condition": "db_parallel_workers", "columns": ['
        '{"caption": "Planned", "id": "parallel_workers_to_launch", "class": "table_obj_value", '
          '"title": "Number of parallel workers planned to be launched by queries on this database"},'
        '{"caption": "Launched", "id": "parallel_workers_launched", "class": "table_obj_value", '
          '"title": "Number of parallel workers launched by queries on this database"}'
     ']},'
      '{"caption": "Temp files", "columns": ['
        '{"caption": "Size", "id": "temp_bytes", "class": "table_obj_value", '
          '"title": "Total amount of data written to temporary files by queries in this database"},'
        '{"caption": "Files", "id": "temp_files", "class": "table_obj_value", '
          '"title": "Number of temporary files created by queries in this database"}'
     ']},'
     '{"caption": "Size", "id": "datsize", "class": "table_obj_value", '
       '"title": "Database size as is was at the moment of last sample in report interval"},'
     '{"caption": "Growth", "id": "datsize_delta", "class": "table_obj_value", '
       '"title": "Database size increment during report interval"}'
    ']'
  '}]'::jsonb),
(1, 'iostat', 'srvstat', 328, 'Cluster I/O statistics', 'Cluster I/O statistics', 'stat_io', NULL, NULL, NULL),
(1, 'iostatrst', 'srvstat', 329, NULL, NULL, 'stat_io_reset', NULL,
  '{"class": "warning", "text": "IO stats reset was detected during report interval. Statistic values may be affected"}',
  '[{'
    '"type": "row_table",'
    '"source": "stat_io_reset",'
    '"columns": ['
      '{"caption": "Sample ID", "id": "sample_id", "class": "table_obj_name", '
        '"title": "Sample identifier with detected reset"},'
      '{"caption": "Object", "id": "object", "class": "table_obj_name", '
        '"title": "Target object of an I/O operation"},'
      '{"caption": "Backend", "id": "backend_type", "class": "table_obj_name", '
        '"title": "Type of backend (see stat_activity)"},'
      '{"caption": "Context", "id": "context", "class": "table_obj_name", '
        '"title": "The context of an I/O operation"},'
      '{"caption": "Reset time", "id": "stats_reset", "class": "table_obj_value", '
        '"title": "Date and time of the last reset performed in sample"}'
    ']'
    '}]'::jsonb),
(1, 'iostatmain', 'srvstat', 330, NULL, NULL, 'stat_io', NULL, NULL,
'[{'
    '"type": "row_table",'
    '"source": "stat_io",'
    '"columns": ['
      '{"caption": "Object", "id": "object", "class": "table_obj_name", '
        '"title": "Target object of an I/O operation"},'
      '{"caption": "Backend", "id": "backend_type", "class": "table_obj_name", '
        '"title": "Type of backend (see stat_activity)"},'
      '{"caption": "Context", "id": "context", "class": "table_obj_name", '
        '"title": "The context of an I/O operation"},'
      '{"caption": "Reads", "columns": ['
        '{"caption": "Count", "id": "reads", "class": "table_obj_value", '
          '"title": "Number of read operations"},'
        '{"caption": "Bytes", "id": "read_sz", "class": "table_obj_value", '
          '"title": "Read data amount"},'
        '{"caption": "Time", "id": "read_time", "class": "table_obj_value", '
          '"condition": "io_times", '
          '"title": "Time spent in reading operation (seconds)"}'
     ']},'
      '{"caption": "Writes", "columns": ['
        '{"caption": "Count", "id": "writes", "class": "table_obj_value", '
          '"title": "Number of write operations"},'
        '{"caption": "Bytes", "id": "write_sz", "class": "table_obj_value", '
          '"title": "Written data amount"},'
        '{"caption": "Time", "id": "write_time", "class": "table_obj_value", '
          '"condition": "io_times", '
          '"title": "Time spent in writing operations (seconds)"}'
     ']},'
      '{"caption": "Writebacks", "columns": ['
        '{"caption": "Count", "id": "writebacks", "class": "table_obj_value", '
          '"title": "Number of blocks which the process requested the kernel write out to permanent storage"},'
        '{"caption": "Bytes", "id": "writeback_sz", "class": "table_obj_value", '
          '"title": "The amount of data requested for write out to permanent storage"},'
        '{"caption": "Time", "id": "writeback_time", "class": "table_obj_value", '
          '"condition": "io_times", '
          '"title": "Time spent in writeback operations (seconds)"}'
     ']},'
      '{"caption": "Extends", "columns": ['
        '{"caption": "Count", "id": "extends", "class": "table_obj_value", '
          '"title": "Number of relation extend operations"},'
        '{"caption": "Bytes", "id": "extend_sz", "class": "table_obj_value", '
          '"title": "The amount of space used by extend operations"},'
        '{"caption": "Time", "id": "extend_time", "class": "table_obj_value", '
          '"condition": "io_times", '
          '"title": "Time spent in extend operations (seconds)"}'
     ']},'
     '{"caption": "Hits", "id": "hits", "class": "table_obj_value", '
       '"title": "The number of times a desired block was found in a shared buffer"},'
     '{"caption": "Evictions", "id": "evictions", "class": "table_obj_value", '
       '"title": "Number of times a block has been written out from a shared or local buffer in order to make it available for another use"},'
     '{"caption": "Reuses", "id": "reuses", "class": "table_obj_value", '
       '"title": "The number of times an existing buffer in a size-limited ring buffer outside of shared buffers was reused as part of an I/O operation in the bulkread, bulkwrite, or vacuum contexts"},'
      '{"caption": "Fsyncs", "columns": ['
        '{"caption": "Count", "id": "fsyncs", "class": "table_obj_value", '
          '"title": "Number of fsync calls. These are only tracked in context normal"},'
        '{"caption": "Time", "id": "fsync_time", "class": "table_obj_value", '
          '"condition": "io_times", '
          '"title": "Time spent in fsync operations (seconds)"}'
     ']}'
    ']'
    '}]'::jsonb),
(1, 'slrustat', 'srvstat', 358, 'Cluster SLRU statistics', 'Cluster SLRU statistics', 'stat_slru', NULL, NULL, NULL),
(1, 'slrustatrst', 'slrustat', 359, NULL, NULL, 'stat_slru_reset', NULL,
    '{"class": "warning", "text": "SLRU stats reset was detected during report interval. Statistic values may be affected"}',
    '[{'
    '"type": "row_table",'
    '"source": "stat_slru_reset",'
    '"columns": ['
      '{"caption": "Sample ID", "id": "sample_id", "class": "table_obj_name", '
        '"title": "Sample identifier with detected reset"},'
      '{"caption": "Name", "id": "name", "class": "table_obj_name", '
        '"title": "Name of the SLRU"},'
      '{"caption": "Reset time", "id": "stats_reset", "class": "table_obj_value", '
        '"title": "Date and time of the last reset performed in sample"}'
    ']'
    '}]'::jsonb),
(1, 'slrustatmain', 'slrustat', 360, NULL, NULL, 'stat_slru', NULL, NULL,
'[{'
    '"type": "row_table",'
    '"source": "stat_slru",'
    '"columns": ['
      '{"caption": "Name", "id": "name", "class": "table_obj_name", '
        '"title": "Name of the SLRU"},'
      '{"caption": "Zeroed", "id": "blks_zeroed", "class": "table_obj_value", '
        '"title": "Number of blocks zeroed during initializations"},'
      '{"caption": "Hits", "id": "blks_hit", "class": "table_obj_value", '
        '"title": "Number of times disk blocks were found already in the SLRU, so that a '
        'read was not necessary (this only includes hits in the SLRU, not the operating '
        'system''s file system cache)"},'
      '{"caption": "Reads", "id": "blks_read", "class": "table_obj_value", '
        '"title": "Number of disk blocks read for this SLRU"},'
      '{"caption": "%Hit", "id": "hit_pct", "class": "table_obj_value", '
        '"title": "Number of disk blocks hits for this SLRU as a percentage of reads + hits"},'
      '{"caption": "Writes", "id": "blks_written", "class": "table_obj_value", '
        '"title": "Number of disk blocks written for this SLRU"},'
      '{"caption": "Checked", "id": "blks_exists", "class": "table_obj_value", '
        '"title": "Number of blocks checked for existence for this SLRU (blks_exists field)"},'
      '{"caption": "Flushes", "id": "flushes", "class": "table_obj_value", '
        '"title": "Number of flushes of dirty data for this SLRU"},'
      '{"caption": "Truncates", "id": "truncates", "class": "table_obj_value", '
        '"title": "Number of truncates for this SLRU"}'
    ']'
    '}]'::jsonb),
(1, 'sesstat', 'srvstat', 400, 'Session statistics by database', 'Session statistics by database', 'sess_stats', NULL, NULL,
'[{'
    '"type": "row_table",'
    '"source": "dbstat",'
    '"ordering": "ord_db",'
    '"highlight": ['
      '{"id": "dbname", "index": 0}'
    '],'
    '"columns": ['
      '{"caption": "Database", "id": "dbname", "class": "table_obj_name"},'
      '{"caption": "Timings", "columns": ['
        '{"caption": "Total", "id": "session_time", "class": "table_obj_value", '
          '"title": "Time spent by database sessions in this database (note that statistic are only updated when the state of a session changes, so if sessions have been idle for a long time, this idle time will not be included)"},'
        '{"caption": "Active", "id": "active_time", "class": "table_obj_value", '
          '"title": "Time spent executing SQL statements in this database (this corresponds to the states active and fastpath function call in pg_stat_activity)"},'
        '{"caption": "Idle", "id": "idle_in_transaction_time", "class": "table_obj_value", '
          '"title": "Time spent idling while in a transaction in this database (this corresponds to the states idle in transaction and idle in transaction (aborted) in pg_stat_activity)"}'
     ']},'
     '{"caption": "Sessions", "columns": ['
        '{"caption": "Established", "id": "sessions", "class": "table_obj_value", '
          '"title": "Total number of sessions established to this database"},'
        '{"caption": "Abondoned", "id": "sessions_abandoned", "class": "table_obj_value", '
          '"title": "Number of database sessions to this database that were terminated because connection to the client was lost"},'
        '{"caption": "Fatal", "id": "sessions_fatal", "class": "table_obj_value", '
          '"title": "Number of database sessions to this database that were terminated by fatal errors"},'
        '{"caption": "Killed", "id": "sessions_killed", "class": "table_obj_value", '
          '"title": "Number of database sessions to this database that were terminated by operator intervention"}'
     ']}'
    ']'
    '}]'::jsonb),
(1, 'stmtstat', 'srvstat', 500, 'Statement statistics by database', 'Statement statistics by database', 'statstatements', NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "statements_dbstats",'
    '"ordering": "ord_db",'
    '"highlight": ['
      '{"id": "dbname", "index": 0}'
    '],'
    '"columns": ['
        '{"id": "dbname", "class": "table_obj_name", "caption": "Database"}, '
        '{"id": "calls", "class": "table_obj_value", "title": "Number of query executions", "caption": "Calls"}, '
        '{"caption": "Time (s)", "columns": ['
            '{"id": "total_plan_time", "class": "table_obj_value", "title": "Time spent planning queries", "caption": "Plan", "condition": "planning_times"}, '
            '{"id": "total_exec_time", "class": "table_obj_value", "title": "Time spent executing queries", "caption": "Exec"}, '
            '{"id": "shared_blk_read_time", "class": "table_obj_value", "title": "Time spent reading blocks", "caption": "Read"}, '
            '{"id": "shared_blk_write_time", "class": "table_obj_value", "title": "Time spent writing blocks", "caption": "Write"}, '
            '{"id": "trg_fn_total_time", "class": "table_obj_value", "title": "Time spent in trigger functions", "caption": "Trg"}'
            ']}, '
        '{"caption": "Temp I/O Time", "condition": "statements_temp_io_times", "columns": ['
            '{"id": "temp_blk_read_time", "class": "table_obj_value", "title": "Time spent reading temporary file blocks, in seconds", "caption": "Read"}, '
            '{"id": "temp_blk_write_time", "class": "table_obj_value", "title": "Time spent writing temporary file blocks, in seconds", "caption": "Write"} '
            ']}, '
        '{"title": "Number of blocks fetched (hit + read)", "caption": "Fetched (blk)", "columns": ['
            '{"id": "shared_gets", "class": "table_obj_value", "caption": "Shared"}, '
            '{"id": "local_gets", "class": "table_obj_value", "caption": "Local"}'
            ']}, '
        '{"title": "Number of blocks read", "caption": "Read (blk)", "columns": ['
            '{"id": "shared_reads", "class": "table_obj_value", "caption": "Shared"}, '
            '{"id": "local_reads", "class": "table_obj_value", "caption": "Local"}'
            ']}, '
        '{"title": "Number of blocks dirtied", "caption": "Dirtied (blk)", "columns": ['
            '{"id": "shared_blks_dirtied", "class": "table_obj_value", "caption": "Shared"}, '
            '{"id": "local_blks_dirtied", "class": "table_obj_value", "caption": "Local"}'
            ']}, '
        '{"title": "Number of blocks, used in operations (like sorts and joins)", "caption": "Temp (blk)", "columns": ['
            '{"id": "temp_blks_read", "class": "table_obj_value", "caption": "Read"}, '
            '{"id": "temp_blks_written", "class": "table_obj_value", "caption": "Write"}'
            ']}, '
        '{"title": "Number of blocks, used for temporary tables", "caption": "Local (blk)", "columns": ['
            '{"id": "local_blks_read", "class": "table_obj_value", "caption": "Read"}, '
            '{"id": "local_blks_written", "class": "table_obj_value", "caption": "Write"}'
            ']}, '
        '{"id": "statements", "class": "table_obj_value", "caption": "Statements"}, '
        '{"id": "wal_bytes_fmt", "class": "table_obj_value", "caption": "WAL size", "condition": "statement_wal_bytes"}, '
        '{"id": "wal_buffers_full", "class": "table_obj_value", "title": "Number of times the WAL buffers became full", "caption": "WAL buffers full", "condition": "wal_buffers_full"}'
    ']}]'::jsonb),
(1, 'stmtminmax', 'srvstat', 520, 'Statement average min/max timings', 'Statement average min/max timings', 'mean_mm_times', NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "statements_dbstats",'
    '"ordering": "ord_db",'
    '"highlight": ['
      '{"id": "dbname", "index": 0}'
    '],'
    '"columns": ['
      '{"id": "dbname", "class": "table_obj_name", "caption": "Database"}, '
      '{"caption": "Average planning times (ms)", "condition": "planning_times", "columns": ['
          '{"id": "mean_min_plan_time", "class": "table_obj_value", "title": "The average value of min_plan_time for all statements", "caption": "Min (ms.)"}, '
          '{"id": "mean_max_plan_time", "class": "table_obj_value", "title": "The average value of max_plan_time for all statements", "caption": "Max (ms.)"}, '
          '{"id": "min_max_plan_delta", "class": "table_obj_value", "title": "Mean max planning time to mean min planning time delta as a percentage of mean min planning time", "caption": "Delta%"} '
      ']}, '
      '{"caption": "Average execution times (ms)", "columns": ['
          '{"id": "mean_min_exec_time", "class": "table_obj_value", "title": "The average value of min_exec_time for all statements", "caption": "Min (ms.)"}, '
          '{"id": "mean_max_exec_time", "class": "table_obj_value", "title": "The average value of max_exec_time for all statements", "caption": "Max (ms.)"}, '
          '{"id": "min_max_exec_delta", "class": "table_obj_value", "title": "Mean max exec time to mean min exec time delta as a percentage of mean min exec time", "caption": "Delta%"} '
      ']}, '
      '{"id": "statements", "class": "table_obj_value", "caption": "Statements"} '
    ']}]'::jsonb),
(1, 'dbjitstat', 'srvstat', 550, 'JIT statistics by database', 'JIT statistics by database', 'statements_jit_stats', NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "statements_dbstats",'
    '"ordering": "ord_db",'
    '"highlight": ['
      '{"id": "dbname", "index": 0}'
    '],'
    '"columns": ['
      '{"id": "dbname", "class": "table_obj_name", "caption": "Database"}, '
      '{"id": "calls", "class": "table_obj_value", "title": "Number of query executions", "caption": "Calls"}, '
      '{"caption": "Time", "columns": ['
          '{"id": "total_plan_time", "class": "table_obj_value", "title": "Time spent planning queries", "caption": "Plan"}, '
          '{"id": "total_exec_time", "class": "table_obj_value", "title": "Time spent executing queries", "caption": "Exec"}'
          ']}, '
      '{"caption": "Generation", "columns": ['
          '{"id": "jit_functions", "class": "table_obj_value", "title": "Total number of functions JIT-compiled by the statements", "caption": "Count"}, '
          '{"id": "jit_generation_time", "class": "table_obj_value", "title": "Time spent by the statements on generating JIT code", "caption": "Time"}'
          ']}, '
      '{"caption": "Inlining", "columns": ['
          '{"id": "jit_inlining_count", "class": "table_obj_value", "title": "Number of times functions have been inlined", "caption": "Count"}, '
          '{"id": "jit_inlining_time", "class": "table_obj_value", "title": "Time spent by statements on inlining functions", "caption": "Time"}'
          ']}, '
      '{"caption": "Optimization", "columns": ['
          '{"id": "jit_optimization_count", "class": "table_obj_value", "title": "Number of times statements hasbeen optimized", "caption": "Count"}, '
          '{"id": "jit_optimization_time", "class": "table_obj_value", "title": "Time spent by statements on optimizing", "caption": "Time"}'
          ']}, '
      '{"caption": "Emission", "columns": ['
          '{"id": "jit_emission_count", "class": "table_obj_value", "title": "Number of times code has been emitted", "caption": "Count"}, '
          '{"id": "jit_emission_time", "class": "table_obj_value", "title": "Time spent by the statement on emitting code", "caption": "Time"}'
          ']}, '
      '{"caption": "Deform", "condition": "statements_jit_deform", "columns": ['
          '{"id": "jit_deform_count", "class": "table_obj_value", "caption": "Count", "title": "Number of tuple deform functions JIT-compiled by the statement of the database."}, '
          '{"id": "jit_deform_time", "class": "table_obj_value", "caption": "Time", "title": "Total time spent by the statements of the databse on JIT-compiling tuple deform functions, in seconds."}'
          ']}'
      ']'
    '}]'::jsonb),
(1, 'clusthdr', 'srvstat', 700, 'Cluster statistics', 'Cluster statistics', NULL, NULL, NULL, NULL),
(1, 'clustrst', 'srvstat', 800, NULL, NULL, 'cluster_stats_reset', NULL,
  '{"class": "warning", "text": "Cluster statistics reset detected during report interval! Cluster statistics might be affected"}',
  '[{'
    '"type": "row_table",'
    '"source": "cluster_stats_reset",'
    '"columns": ['
        '{"id": "sample_id", "class": "table_obj_value", "caption": "Sample"}, '
        '{"id": "bgwriter_stats_reset", "class": "table_obj_value", "caption": "BGWriter reset time"}, '
        '{"id": "checkpoint_stats_reset", "class": "table_obj_value", "caption": "Checkpointer reset time"}, '
        '{"id": "archiver_stats_reset", "class": "table_obj_value", "caption": "Archiver reset time"}'
        ']'
    '}]'::jsonb),
(1, 'clust', 'srvstat', 900, NULL, NULL, NULL, NULL, NULL,
  '[{'
    '"type": "column_table", '
    '"source": "cluster_stats",'
    '"columns": ['
        '{"caption": "Metric", "class": "table_obj_name"}, '
        '{"caption": "Value", "class": "table_obj_value"}'
    '],'
    '"rows": ['
        '{"caption": "Scheduled checkpoints", "cells": ['
            '{"id": "checkpoints_timed"}'
        ']}, '
        '{"caption": "Requested checkpoints", "cells": ['
            '{"id": "checkpoints_req"}'
        ']}, '
        '{"caption": "Checkpoints done", "condition": "checkpoints_done_and_slru", "cells": ['
            '{"id": "checkpoints_done"}'
        ']}, '
        '{"caption": "Checkpoint write time (s)", "cells": ['
            '{"id": "checkpoint_write_time"}'
        ']}, '
        '{"caption": "Checkpoint sync time (s)", "cells": ['
            '{"id": "checkpoint_sync_time"}'
        ']}, '
        '{"caption": "Checkpoint buffers written", "cells": ['
            '{"id": "buffers_checkpoint"}'
        ']}, '
        '{"caption": "SLRU buffers written by checkpoint", "condition": "checkpoints_done_and_slru", "cells": ['
            '{"id": "slru_checkpoint"}'
        ']}, '
        '{"caption": "Background buffers written", "cells": ['
            '{"id": "buffers_clean"}'
        ']}, '
        '{"caption": "Backend buffers written", "condition": "buffers_backend", "cells": ['
            '{"id": "buffers_backend"}'
        ']}, '
        '{"caption": "Backend fsync count", "condition": "buffers_backend", "cells": ['
            '{"id": "buffers_backend_fsync"}'
        ']}, '
        '{"caption": "Bgwriter interrupts (too many buffers)", "cells": ['
            '{"id": "maxwritten_clean"}'
        ']}, '
        '{"caption": "Number of buffers allocated", "cells": ['
            '{"id": "buffers_alloc"}'
        ']}, '
        '{"caption": "WAL generated", "cells": ['
            '{"id": "wal_size_pretty"}'
        ']}, '
        '{"caption": "Start LSN", "cells": ['
            '{"id": "start_lsn"}'
        ']}, '
        '{"caption": "End LSN", "cells": ['
            '{"id": "end_lsn"}'
        ']}, '
        '{"caption": "WAL segments archived", "cells": ['
            '{"id": "archived_count"}'
        ']}, '
        '{"caption": "WAL segments archive failed", "cells": ['
            '{"id": "failed_count"}'
        ']}'
    ']'
  '}]'::jsonb),
(1, 'walsthdr', 'srvstat', 1000, 'WAL statistics', 'WAL statistics', 'wal_stats', NULL, NULL, NULL),
(1, 'walstrst', 'srvstat', 1100, NULL, NULL, 'wal_stats_reset', NULL,
  '{"class": "warning", "text": "WAL statistics reset detected during report interval! WAL statistics might be affected"}',
  '[{'
    '"type": "row_table",'
    '"source": "wal_stats_reset",'
    '"columns": ['
        '{"id": "sample_id", "class": "table_obj_value", "caption": "Sample"},'
        '{"id": "wal_stats_reset", "class": "table_obj_value", "caption": "WAL stats reset time"}'
    ']}]'::jsonb),
(1, 'walst', 'srvstat', 1200, NULL, NULL, 'wal_stats', NULL, NULL,
  '[{'
    '"type": "column_table",'
    '"source": "wal_stats",'
    '"columns": ['
        '{"caption": "Metric", "class": "table_obj_name"},'
        '{"caption": "Value", "class": "table_obj_value"}'
    '],'
    '"rows": ['
        '{"caption": "WAL generated", "title": "Total amount of WAL generated", "cells": ['
            '{"id": "wal_bytes_text"}'
        ']},'
        '{"caption": "WAL per second", "title": "Average amount of WAL generated per second", "cells": ['
            '{"id": "wal_bytes_per_sec"}'
        ']},'
        '{"caption": "WAL records", "title": "Total number of WAL records generated", "cells": ['
            '{"id": "wal_records"}'
        ']},'
        '{"caption": "WAL FPI", "title": "Total number of WAL full page images generated", "cells": ['
            '{"id": "wal_fpi"}'
        ']},'
        '{"caption": "WAL buffers full", "title": "Number of times WAL data was written to disk because WAL buffers became full", "cells": ['
            '{"id": "wal_buffers_full"}'
        ']},'
        '{"caption": "WAL writes", "title": "Number of times WAL buffers were written out to disk via XLogWrite request", "cells": ['
            '{"id": "wal_write"}'
        ']},'
        '{"caption": "WAL writes per second", "title": "Average number of times WAL buffers were written out to disk via XLogWrite request per second", "cells": ['
            '{"id": "wal_write_per_sec"}'
        ']},'
        '{"caption": "WAL sync", "title": "Number of times WAL files were synced to disk via issue_xlog_fsync request (if fsync is on and wal_sync_method is either fdatasync, fsync or fsync_writethrough, otherwise zero)", "cells": ['
            '{"id": "wal_sync"}'
        ']},'
        '{"caption": "WAL syncs per second", "title": "Average number of times WAL files were synced to disk via issue_xlog_fsync request per second", "cells": ['
            '{"id": "wal_sync_per_sec"}'
        ']},'
        '{"caption": "WAL write time (s)", "title": "Total amount of time spent writing WAL buffers to disk via XLogWrite request, in seconds (if track_wal_io_timing is enabled, otherwise zero). This includes the sync time when wal_sync_method is either open_datasync or open_sync", "cells": ['
            '{"id": "wal_write_time"}'
        ']},'
        '{"caption": "WAL write duty", "title": "WAL write time as a percentage of the report duration time", "cells": ['
            '{"id": "wal_write_time_per_sec"}'
        ']},'
        '{"caption": "WAL sync time (s)", "title": "Total amount of time spent syncing WAL files to disk via issue_xlog_fsync request, in seconds (if track_wal_io_timing is enabled, fsync is on, and wal_sync_method is either fdatasync, fsync or fsync_writethrough, otherwise zero)", "cells": ['
            '{"id": "wal_sync_time"}'
        ']},'
        '{"caption": "WAL sync duty", "title": "WAL sync time as a percentage of the report duration time", "cells": ['
            '{"id": "wal_sync_time_per_sec"}'
        ']}'
    ']'
  '}]'::jsonb),
(1, 'tbspst', 'srvstat', 1400, 'Tablespace statistics', 'Tablespace statistics', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "tablespace_stats",'
    '"ordering": "tablespacename",'
    '"columns": ['
      '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name"},'
      '{"caption": "Path", "id": "tablespacepath", "class": "table_obj_value"},'
      '{"caption": "Size", "id": "size", "class": "table_obj_value", '
      '"title": "Tablespace size as it was at the moment of last sample in report interval"},'
      '{"caption": "Growth", "id": "size_delta", "class": "table_obj_value", '
      '"title": "Tablespace size increment during report interval"}'
    ']'
  '}]'::jsonb),
(1, 'wait_sampling_srvstats', 'srvstat', 1500, 'Wait sampling', 'Wait sampling', 'wait_sampling_tot', NULL, NULL, NULL),
(1, 'wait_sampling_total', 'wait_sampling_srvstats', 100, 'Wait events types', 'Wait events types', 'wait_sampling_tot', NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "wait_sampling_total_stats",'
    '"ordering": "event_type_order",'
    '"columns": ['
      '{"id": "event_type", "class": "table_obj_name", "caption": "Wait event type"}, '
      '{"id": "stmt_waited", "class": "table_obj_value", "title": "Time, waited in events of wait event type executing statements in seconds", "caption": "Statements Waited (s)"}, '
      '{"id": "stmt_waited_pct", "class": "table_obj_value", "title": "Time, waited in events of wait event type as a percentage of total time waited in a cluster executing statements", "caption": "%Total"}, '
      '{"id": "tot_waited", "class": "table_obj_value", "title": "Time, waited in events of wait event type by all backends (including background activity) in seconds", "caption": "All Waited (s)"}, '
      '{"id": "tot_waited_pct", "class": "table_obj_value", "title": "Time, waited in events of wait event type as a percentage of total time waited in a cluster by all backends (including background activity)", "caption": "%Total"}'
    ']}]'::jsonb),
(1, 'wait_sampling_statements', 'wait_sampling_srvstats', 200, 'Top wait events (statements)', 'Top wait events (statements)', 'wait_sampling_tot', NULL,
 '{"class": "notice", "text": "Top wait events detected in statements execution"}',
  '[{'
    '"type": "row_table", '
    '"source": "wait_sampling_events",'
    '"filter": {"type": "exists", "field": "stmt_filter"},'
    '"ordering": "-stmt_waited",'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "event_type", "class": "table_obj_name", "caption": "Wait event type"}, '
      '{"id": "event", "class": "table_obj_name", "caption": "Wait event"}, '
      '{"id": "stmt_waited", "class": "table_obj_value", "title": "Time, waited in event executing statements in seconds", "caption": "Waited (s)"}, '
      '{"id": "stmt_waited_pct", "class": "table_obj_value", "title": "Time, waited in event as a percentage of total time waited in a cluster executing statements", "caption": "%Total"}'
  ']}]'::jsonb),
(1, 'wait_sampling_all', 'wait_sampling_srvstats', 300, 'Top wait events (All)', 'Top wait events (All)', 'wait_sampling_tot', NULL,
 '{"class": "notice", "text": "Top wait events detected in all backends"}',
  '[{'
    '"type": "row_table", '
    '"source": "wait_sampling_events",'
    '"filter": {"type": "exists", "field": "total_filter"},'
    '"ordering": "-tot_waited",'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "event_type", "class": "table_obj_name", "caption": "Wait event type"}, '
      '{"id": "event", "class": "table_obj_name", "caption": "Wait event"}, '
      '{"id": "tot_waited", "class": "table_obj_value", "title": "Time, waited in event by all backends (including background activity) in seconds", "caption": "Waited (s)"}, '
      '{"id": "tot_waited_pct", "class": "table_obj_value", "title": "Time, waited in event by all backends as a percentage of total time waited in a cluster by all backends (including background activity)", "caption": "%Total"}'
  ']}]'::jsonb)
;

-- Subsamples-based section of regular reports
INSERT INTO report_struct (
  report_id, sect_id, parent_sect_id, s_ord, toc_cap, tbl_cap, feature, function_name,
  content, sect_struct)
VALUES
(1, 'act_chart', 'actsesshdr', 50, 'Chart with session state', 'Chart with session state', 'act_backend', NULL,
  NULL,
'[{'
    '"type": "chart",'
    '"source": "act_top_states",'
    '"class": "act_chart"'
    '}]'::jsonb),
(1, 'db_activity_agg', 'actsesshdr', 100, 'Session state statistics by database', 'Session state statistics by database', 'act_backend', NULL,
  NULL,
'[{'
    '"type": "row_table",'
    '"source": "db_activity_agg",'
    '"ordering": "ord_db",'
    '"highlight": ['
      '{"id": "dbname", "index": 0}'
    '],'
    '"columns": ['
      '{"caption": "Database", "id": "dbname", "class": "table_obj_name"},'
      '{"caption": "Summary", "columns": ['
        '{"caption": "Active", "id": "active_dur", "class": "table_obj_value", '
          '"title": "Summary time in ''active'' state"},'
        '{"caption": "Idle in xact", "id": "idle_xact_dur", "class": "table_obj_value", '
          '"title": "Summary time in ''idle in transaction'' state"},'
        '{"caption": "Idle in xact (A)", "id": "idle_xact_a_dur", "class": "table_obj_value", '
          '"title": "Summary time in ''idle in transaction (aborted)'' state"}'
     ']},'
      '{"caption": "Maximal", "columns": ['
        '{"caption": "Active", "id": "max_active_dur", "class": "table_obj_value", '
          '"title": "Longest detected ''active'' state"},'
        '{"caption": "Idle in xact", "id": "max_idle_xact_d", "class": "table_obj_value", '
          '"title": "Longest detected ''idle in xact'' state"},'
        '{"caption": "Idle in xact (A)", "id": "max_idle_xact_a_d", "class": "table_obj_value", '
          '"title": "Longest detected ''idle in transaction (aborted)'' state"},'
        '{"caption": "xact age", "id": "max_xact_age", "class": "table_obj_value", '
          '"title": "Maximal detected backend_xid age"}'
     ']}'
    ']'
    '}]'::jsonb),
(1, 'act_ix', 'actsesshdr', 200, 'Top ''idle in transaction'' states', 'Top ''idle in transaction'' session states by duration', 'act_ix', NULL,
  NULL,
'[{'
    '"type": "row_table",'
    '"source": "act_top_states",'
    '"ordering": "ord_dur",'
    '"limit": "topn",'
    '"highlight": ['
      '{"id": "pid", "index": 0},'
      '{"id": "state_change", "index": 0}'
    '],'
    '"preview": ['
      '{"id": "act_query_md5", "dataset": "act_queries"}'
    '],'
    '"scroll": ['
      '"pid", "xact_start_ut", "state_change_ut"'
    '],'
    '"filter": {"type": "equal", "field": "flt_state_code", "value": 1},'
    '"columns": ['
      '{"caption": "Database", "id": "dbname", "class": "table_obj_name"},'
      '{"caption": "User", "id": "username", "class": "table_obj_name"},'
      '{"caption": "App", "id": "application_name", "class": "table_obj_name", '
        '"title": "application_name"},'
      '{"caption": "Addr", "id": "client_addr", "class": "table_obj_name", '
        '"title": "client_addr"},'
      '{"caption": "Pid", "id": "pid", "class": "table_obj_name"},'
      '{"caption": "Xact start", "id": "xact_start_format", "class": "table_obj_value"},'
      '{"caption": "State change", "id": "state_change_format", "class": "table_obj_value"},'
      '{"caption": "State duration", "id": "state_duration_format", "class": "table_obj_value"}'
    ']}]'::jsonb),
(1, 'act_ixa', 'actsesshdr', 300, 'Top ''idle in transaction (aborted)'' states', 'Top ''idle in transaction (aborted)'' session states by duration', 'act_ixa', NULL,
  NULL,
'[{'
    '"type": "row_table",'
    '"source": "act_top_states",'
    '"ordering": "ord_dur",'
    '"limit": "topn",'
    '"highlight": ['
      '{"id": "pid", "index": 0},'
      '{"id": "state_change", "index": 0}'
    '],'
    '"preview": ['
      '{"id": "act_query_md5", "dataset": "act_queries"}'
    '],'
    '"scroll": ['
      '"pid", "xact_start_ut", "state_change_ut"'
    '],'
    '"filter": {"type": "equal", "field": "flt_state_code", "value": 2},'
    '"columns": ['
      '{"caption": "Database", "id": "dbname", "class": "table_obj_name"},'
      '{"caption": "User", "id": "username", "class": "table_obj_name"},'
      '{"caption": "App", "id": "application_name", "class": "table_obj_name", '
        '"title": "application_name"},'
      '{"caption": "Addr", "id": "client_addr", "class": "table_obj_name", '
        '"title": "client_addr"},'
      '{"caption": "Pid", "id": "pid", "class": "table_obj_name"},'
      '{"caption": "State change", "id": "state_change_format", "class": "table_obj_value"},'
      '{"caption": "State duration", "id": "state_duration_format", "class": "table_obj_value"}'
    ']}]'::jsonb),
(1, 'act_active', 'actsesshdr', 400, 'Top ''active'' states', 'Top ''active'' session states by duration', 'act_active', NULL,
  NULL,
'[{'
    '"type": "row_table",'
    '"source": "act_top_states",'
    '"ordering": "ord_dur",'
    '"limit": "topn",'
    '"highlight": ['
      '{"id": "pid", "index": 0},'
      '{"id": "state_change", "index": 0}'
    '],'
    '"preview": ['
      '{"id": "act_query_md5", "dataset": "act_queries"}'
    '],'
    '"scroll": ['
      '"pid", "xact_start_ut", "state_change_ut"'
    '],'
    '"filter": {"type": "equal", "field": "flt_state_code", "value": 3},'
    '"columns": ['
      '{"caption": "Database", "id": "dbname", "class": "table_obj_name"},'
      '{"caption": "User", "id": "username", "class": "table_obj_name"},'
      '{"caption": "App", "id": "application_name", "class": "table_obj_name", '
        '"title": "application_name"},'
      '{"caption": "Addr", "id": "client_addr", "class": "table_obj_name", '
        '"title": "client_addr"},'
      '{"caption": "Pid", "id": "pid", "class": "table_obj_name"},'
      '{"caption": "Xact start", "id": "xact_start_format", "class": "table_obj_value"},'
      '{"caption": "State change", "id": "state_change_format", "class": "table_obj_value"},'
      '{"caption": "State duration", "id": "state_duration_format", "class": "table_obj_value"}'
    ']}]'::jsonb),
(1, 'act_age', 'actsesshdr', 500, 'Top states by transaction age', 'Top states by transaction age', 'act_backend', NULL,
  NULL,
'[{'
    '"type": "row_table",'
    '"source": "act_top_states",'
    '"ordering": "ord_age",'
    '"limit": "topn",'
    '"highlight": ['
      '{"id": "pid", "index": 0},'
      '{"id": "state_change", "index": 0}'
    '],'
    '"preview": ['
      '{"id": "act_query_md5", "dataset": "act_queries"}'
    '],'
    '"scroll": ['
      '"pid", "xact_start_ut", "state_change_ut"'
    '],'
    '"filter": {"type": "equal", "field": "flt_age", "value": true},'
    '"columns": ['
      '{"caption": "Database", "id": "dbname", "class": "table_obj_name"},'
      '{"caption": "User", "id": "username", "class": "table_obj_name"},'
      '{"caption": "App", "id": "application_name", "class": "table_obj_name", '
        '"title": "application_name"},'
      '{"caption": "Addr", "id": "client_addr", "class": "table_obj_name", '
        '"title": "client_addr"},'
      '{"caption": "Pid", "id": "pid", "class": "table_obj_name"},'
      '{"caption": "Xact start", "id": "xact_start_format", "class": "table_obj_value"},'
      '{"caption": "Xact duration", "id": "xact_duration_format", "class": "table_obj_value"},'
      '{"caption": "Age", "id": "xmin_age", "class": "table_obj_value", '
        '"title": "Last detected age of backend_xmin"},'
      '{"caption": "State", "id": "state", "class": "table_obj_value"},'
      '{"caption": "State change", "id": "state_change_format", "class": "table_obj_value"},'
      '{"caption": "State duration", "id": "state_duration_format", "class": "table_obj_value"}'
    ']}]'::jsonb),
(1, 'act_xact_dur', 'actsesshdr', 600, 'Top states by transaction duration', 'Top states by transaction duration', 'act_backend', NULL,
  NULL,
'[{'
    '"type": "row_table",'
    '"source": "act_top_states",'
    '"ordering": "ord_xact",'
    '"limit": "topn",'
    '"highlight": ['
      '{"id": "pid", "index": 0},'
      '{"id": "state_change", "index": 0}'
    '],'
    '"preview": ['
      '{"id": "act_query_md5", "dataset": "act_queries"}'
    '],'
    '"scroll": ['
      '"pid", "xact_start_ut", "state_change_ut"'
    '],'
    '"filter": {"type": "equal", "field": "flt_age", "value": true},'
    '"columns": ['
      '{"caption": "Database", "id": "dbname", "class": "table_obj_name"},'
      '{"caption": "User", "id": "username", "class": "table_obj_name"},'
      '{"caption": "App", "id": "application_name", "class": "table_obj_name", '
        '"title": "application_name"},'
      '{"caption": "Addr", "id": "client_addr", "class": "table_obj_name", '
        '"title": "client_addr"},'
      '{"caption": "Pid", "id": "pid", "class": "table_obj_name"},'
      '{"caption": "Xact start", "id": "xact_start_format", "class": "table_obj_value"},'
      '{"caption": "Xact duration", "id": "xact_duration_format", "class": "table_obj_value"},'
      '{"caption": "Age", "id": "xmin_age", "class": "table_obj_value", '
        '"title": "Last detected age of backend_xmin"},'
      '{"caption": "State", "id": "state", "class": "table_obj_value"},'
      '{"caption": "State change", "id": "state_change_format", "class": "table_obj_value"},'
      '{"caption": "State duration", "id": "state_duration_format", "class": "table_obj_value"}'
    ']}]'::jsonb)
;

-- Query section of regular report
INSERT INTO report_struct (
  report_id, sect_id, parent_sect_id, s_ord, toc_cap, tbl_cap, feature, function_name,
  content, sect_struct)
VALUES
(1, 'sqlela', 'sqlsthdr', 100, 'Top SQL by elapsed time', 'Top SQL by elapsed time', 'planning_times', NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"ordering": "ord_total_time",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"filter": {"type": "exists", "field": "total_time"},'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "table_obj_name queryId", "caption": "Query ID"}, '
      '{"id": "dbname", "class": "table_obj_name", "caption": "Database"}, '
      '{"id": "username", "class": "table_obj_name", "caption": "User"}, '
      '{"id": "total_time_pct", "class": "table_obj_value", "title": "Elapsed time as a percentage of total cluster elapsed time", "caption": "%Total"}, '
      '{"caption": "Time (s)", "columns": ['
        '{"id": "total_time", "class": "table_obj_value", "title": "Time spent by the statement", "caption": "Elapsed"}, '
        '{"id": "total_plan_time", "class": "table_obj_value", "title": "Time spent planning statement", "caption": "Plan"}, '
        '{"id": "total_exec_time", "class": "table_obj_value", "title": "Time spent executing statement", "caption": "Exec"}'
        ']}, '
      '{"id": "jit_total_time", "class": "jitTimeCell", "caption": "JIT, time (s)", "condition": "statements_jit_stats"}, '
      '{"class": "table_obj_name", "caption": "I/O time (s)", "condition": "io_times", "columns": ['
        '{"id": "shared_blk_read_time", "class": "table_obj_value", "title": "Time spent reading blocks by statement", "caption": "Read"}, '
        '{"id": "shared_blk_write_time", "class": "table_obj_value", "title": "Time spent writing blocks by statement", "caption": "Write"}'
        ']}, '
      '{"class": "table_obj_name", "caption": "CPU time (s)", "condition": "kcachestatements", "columns": ['
        '{"id": "user_time", "class": "table_obj_value", "caption": "Usr"}, '
        '{"id": "system_time", "class": "table_obj_value", "caption": "Sys"}'
        ']}, '
      '{"id": "plans", "class": "table_obj_value", "caption": "Plans", "title": "Number of times the statement was planned"}, '
      '{"id": "calls", "class": "table_obj_value", "caption": "Executions", "title": "Number of times the statement was executed"}, '
      '{"id": "stmt_cover", "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']'
  '}]'::jsonb),
(1, 'sqlplan', 'sqlsthdr', 200, 'Top SQL by planning time', 'Top SQL by planning time', 'planning_times', NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"ordering": "ord_plan_time",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"filter": {"type": "exists", "field": "total_plan_time"},'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "table_obj_name queryId", "caption": "Query ID"}, '
      '{"id": "dbname", "class": "table_obj_name", "caption": "Database"}, '
      '{"id": "username", "class": "table_obj_name", "caption": "User"}, '
      '{"id": "total_plan_time", "class": "table_obj_value", "title": "Time spent planning statement", "caption": "Plan elapsed (s)"}, '
      '{"id": "plan_time_pct", "class": "table_obj_value", "title": "Plan elapsed as a percentage of statement elapsed time", "caption": "%Elapsed"}, '
      '{"title": "Planning time statistics", "caption": "Plan times (ms)", "columns": ['
        '{"id": "mean_plan_time", "class": "table_obj_value", "caption": "Mean"}, '
        '{"id": "min_plan_time", "class": "table_obj_value", "caption": "Min"}, '
        '{"id": "max_plan_time", "class": "table_obj_value", "caption": "Max"}, '
        '{"id": "stddev_plan_time", "class": "table_obj_value", "caption": "StdErr"}'
      ']}, '
      '{"id": "plans", "class": "table_obj_value", "title": "Number of times the statement was planned", "caption": "Plans"}, '
      '{"id": "calls", "class": "table_obj_value", "title": "Number of times the statement was executed", "caption": "Executions"}, '
      '{"id": "stmt_cover", "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
      ']'
    '}]'::jsonb),
(1, 'sqlexec', 'sqlsthdr', 300, 'Top SQL by execution time', 'Top SQL by execution time', NULL, NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"ordering": "ord_exec_time",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"filter": {"type": "exists", "field": "total_exec_time"},'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "caption": "Query ID", "class": "table_obj_name queryId"}, '
      '{"id": "dbname", "class": "table_obj_name", "caption": "Database"}, '
      '{"id": "username", "class": "table_obj_name", "caption": "User"}, '
      '{"id": "total_exec_time", "class": "table_obj_value", "title": "Time spent executing statement", "caption": "Exec (s)"}, '
      '{"id": "exec_time_pct", "class": "table_obj_value", "title": "Exec time as a percentage of statement elapsed time", "caption": "%Elapsed", "condition": "planning_times"}, '
      '{"id": "total_exec_time_pct", "class": "table_obj_value", "title": "Exec time as a percentage of total cluster elapsed time", "caption": "%Total"}, '
      '{"id": "jit_total_time", "class": "jitTimeCell", "title": "Exec time as a percentage of statement elapsed time", "caption": "JIT time (s)", "condition": "statements_jit_stats"}, '
      '{"caption": "I/O time (s)", "condition": "io_times", "columns": ['
        '{"id": "shared_blk_read_time", "class": "table_obj_value", "caption": "Read"}, '
        '{"id": "shared_blk_write_time", "class": "table_obj_value", "caption": "Write"}'
      ']}, '
      '{"caption": "CPU time (s)", "condition": "kcachestatements", "columns": ['
        '{"id": "user_time", "class": "table_obj_value", "caption": "Usr"}, '
        '{"id": "system_time", "class": "table_obj_value", "caption": "Sys"}'
      ']}, '
      '{"id": "rows", "class": "table_obj_value", "caption": "Rows"}, '
      '{"title": "Execution time statistics", "caption": "Execution times (ms)", "columns": ['
        '{"id": "mean_exec_time", "class": "table_obj_value", "caption": "Mean"}, '
        '{"id": "min_exec_time", "class": "table_obj_value", "caption": "Min"}, '
        '{"id": "max_exec_time", "class": "table_obj_value", "caption": "Max"}, '
        '{"id": "stddev_exec_time", "class": "table_obj_value", "caption": "StdErr"}'
      ']}, '
      '{"id": "calls", "title": "Number of times the statement was executed", "caption": "Executions", "class": "table_obj_value"}, '
      '{"id": "stmt_cover", "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']'
  '}]'::jsonb),
(1, 'sqlmeanexec', 'sqlsthdr', 350, 'Top SQL by mean time', 'Top SQL by mean execution time', NULL, NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"ordering": "ord_mean_exec_time",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"filter": {"type": "exists", "field": "mean_exec_time"},'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "caption": "Query ID", "class": "table_obj_name queryId"}, '
      '{"id": "dbname", "class": "table_obj_name", "caption": "Database"}, '
      '{"id": "username", "class": "table_obj_name", "caption": "User"}, '
      '{"title": "Execution time statistics", "caption": "Execution times (ms)", "columns": ['
        '{"id": "mean_exec_time", "class": "table_obj_value", "caption": "Mean"}, '
        '{"id": "min_exec_time", "class": "table_obj_value", "caption": "Min"}, '
        '{"id": "max_exec_time", "class": "table_obj_value", "caption": "Max"}, '
        '{"id": "stddev_exec_time", "class": "table_obj_value", "caption": "StdErr"}'
      ']}, '
      '{"id": "total_exec_time", "class": "table_obj_value", "title": "Time spent executing statement", "caption": "Exec (s)"}, '
      '{"id": "exec_time_pct", "class": "table_obj_value", "title": "Exec time as a percentage of statement elapsed time", "caption": "%Elapsed", "condition": "planning_times"}, '
      '{"id": "total_exec_time_pct", "class": "table_obj_value", "title": "Exec time as a percentage of total cluster elapsed time", "caption": "%Total"}, '
      '{"id": "jit_total_time", "class": "jitTimeCell", "title": "Exec time as a percentage of statement elapsed time", "caption": "JIT time (s)", "condition": "statements_jit_stats"}, '
      '{"caption": "I/O time (s)", "condition": "io_times", "columns": ['
        '{"id": "shared_blk_read_time", "class": "table_obj_value", "caption": "Read"}, '
        '{"id": "shared_blk_write_time", "class": "table_obj_value", "caption": "Write"}'
      ']}, '
      '{"caption": "CPU time (s)", "condition": "kcachestatements", "columns": ['
        '{"id": "user_time", "class": "table_obj_value", "caption": "Usr"}, '
        '{"id": "system_time", "class": "table_obj_value", "caption": "Sys"}'
      ']}, '
      '{"id": "rows", "class": "table_obj_value", "caption": "Rows"}, '
      '{"id": "calls", "title": "Number of times the statement was executed", "caption": "Executions", "class": "table_obj_value"}, '
      '{"id": "stmt_cover", "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']'
  '}]'::jsonb),
(1, 'sqlcalls', 'sqlsthdr', 400, 'Top SQL by executions', 'Top SQL by executions', NULL, NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"ordering": "ord_calls",'
    '"filter": {"type": "exists", "field": "ord_calls"},'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "table_obj_name queryId", "caption": "Query ID"}, '
      '{"id": "dbname", "class": "table_obj_name", "caption": "Database"}, '
      '{"id": "username", "class": "table_obj_name", "caption": "User"}, '
      '{"id": "calls", "class": "table_obj_value", "title": "Number of times the statement was executed", "caption": "Executions"}, '
      '{"id": "calls_pct", "class": "table_obj_value", "title": "Executions of this statement as a percentage of total executions of all statements in a cluster", "caption": "%Total"}, '
      '{"id": "rows", "class": "table_obj_value", "title": "Total number of rows retrieved or affected by the statement", "caption": "Rows"}, '
      '{"id": "mean_exec_time", "class": "table_obj_value", "caption": "Mean(ms)"}, '
      '{"id": "min_exec_time", "class": "table_obj_value", "caption": "Min(ms)"}, '
      '{"id": "max_exec_time", "class": "table_obj_value", "caption": "Max(ms)"}, '
      '{"id": "stddev_exec_time", "class": "table_obj_value", "caption": "StdErr(ms)"}, '
      '{"id": "total_exec_time", "class": "table_obj_value", "title": "Time spent by the statement", "caption": "Elapsed(s)"},'
      '{"id": "stmt_cover", "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']'
  '}]'::jsonb),
(1, 'sqlio', 'sqlsthdr', 500, 'Top SQL by I/O wait time', 'Top SQL by I/O wait time', 'io_times', NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"ordering": "ord_io_time",'
    '"filter": {"type": "exists", "field": "io_time"},'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "table_obj_name queryId", "caption": "Query ID"}, '
      '{"id": "dbname", "class": "table_obj_name", "caption": "Database"}, '
      '{"id": "username", "class": "table_obj_name", "caption": "User"}, '
      '{"id": "io_time", "class": "table_obj_value", "title": "Time spent by the statement reading and writing blocks", "caption": "IO(s)"}, '
      '{"id": "shared_blk_read_time", "class": "table_obj_value", "title": "Time spent by the statement reading blocks", "caption": "R(s)"}, '
      '{"id": "shared_blk_write_time", "class": "table_obj_value", "title": "Time spent by the statement writing blocks", "caption": "W(s)"}, '
      '{"id": "io_time_pct", "class": "table_obj_value", "title": "I/O time of this statement as a percentage of total I/O time for all statements in a cluster", "caption": "%Total"}, '
      '{"title": "Number of blocks read by the statement", "caption": "Reads", "columns": ['
        '{"id": "shared_blks_read", "title": "Number of shared blocks read by the statement", "caption": "Shr", "class": "table_obj_value"}, '
        '{"id": "local_blks_read", "title": "Number of local blocks read by the statement (usually used for temporary tables)", "caption": "Loc", "class": "table_obj_value"}, '
        '{"id": "temp_blks_read", "title": "Number of temp blocks read by the statement (usually used for operations like sorts and joins)", "caption": "Tmp", "class": "table_obj_value"}'
      ']}, '
      '{"title": "Number of blocks written by the statement", "caption": "Writes", "columns": ['
        '{"id": "shared_blks_written", "title": "Number of shared blocks written by the statement", "caption": "Shr", "class": "table_obj_value"}, '
        '{"id": "local_blks_written", "title": "Number of local blocks written by the statement (usually used for temporary tables)", "caption": "Loc", "class": "table_obj_value"}, '
        '{"id": "temp_blks_written", "title": "Number of temp blocks written by the statement (usually used for operations like sorts and joins)", "caption": "Tmp", "class": "table_obj_value"}'
      ']}, '
      '{"id": "total_time", "class": "table_obj_value", "title": "Time spent by the statement", "caption": "Elapsed(s)"}, '
      '{"id": "calls", "class": "table_obj_value", "title": "Number of blocks written by the statement", "caption": "Executions"}, '
      '{"id": "stmt_cover", "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']}]'::jsonb),
(1, 'sqlfetch', 'sqlsthdr', 600, 'Top SQL by shared blocks fetched', 'Top SQL by shared blocks fetched', NULL, NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"ordering": "ord_shared_blocks_fetched",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"filter": {"type": "exists", "field": "shared_blks_fetched"},'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "table_obj_name queryId", "caption": "Query ID"}, '
      '{"id": "dbname", "class": "table_obj_name", "caption": "Database"}, '
      '{"id": "username", "class": "table_obj_name", "caption": "User"}, '
      '{"id": "shared_blks_fetched", "class": "table_obj_value", "title": "Shared blocks fetched (read and hit) by the statement", "caption": "blks fetched"}, '
      '{"id": "shared_blks_fetched_pct", "class": "table_obj_value", "title": "Shared blocks fetched by this statement as a percentage of all shared blocks fetched in a cluster", "caption": "%Total"}, '
      '{"id": "shared_hit_pct", "class": "table_obj_value", "title": "Shared blocks hits as a percentage of shared blocks fetched (read + hit)", "caption": "Hits(%)"}, '
      '{"id": "total_time", "class": "table_obj_value", "title": "Time spent by the statement", "caption": "Elapsed(s)"}, '
      '{"id": "rows", "class": "table_obj_value", "title": "Total number of rows retrieved or affected by the statement", "caption": "Rows"}, '
      '{"id": "calls", "class": "table_obj_value", "title": "Number of times the statement was executed", "caption": "Executions"}, '
      '{"id": "stmt_cover", "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']}]'::jsonb),
(1, 'sqlshrd', 'sqlsthdr', 700, 'Top SQL by shared blocks read', 'Top SQL by shared blocks read', NULL, NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"filter": {"type": "exists", "field": "shared_blks_read"},'
    '"ordering": "ord_shared_blocks_read",'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "table_obj_name queryId", "caption": "Query ID"}, '
      '{"id": "dbname", "class": "table_obj_name", "caption": "Database"}, '
      '{"id": "username", "class": "table_obj_name", "caption": "User"}, '
      '{"id": "shared_blks_read", "class": "table_obj_value", "title": "Total number of shared blocks read by the statement", "caption": "Reads"}, '
      '{"id": "read_pct", "class": "table_obj_value", "title": "Shared blocks read by this statement as a percentage of all shared blocks read in a cluster", "caption": "%Total"}, '
      '{"id": "shared_hit_pct", "class": "table_obj_value", "title": "Shared blocks hits as a percentage of shared blocks fetched (read + hit)", "caption": "Hits(%)"}, '
      '{"id": "total_time", "class": "table_obj_value", "title": "Time spent by the statement", "caption": "Elapsed(s)"}, '
      '{"id": "rows", "class": "table_obj_value", "title": "Total number of rows retrieved or affected by the statement", "caption": "Rows"}, '
      '{"id": "calls", "class": "table_obj_value", "title": "Number of times the statement was executed", "caption": "Executions"}, '
      '{"id": "stmt_cover", "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']}]'::jsonb),
(1, 'sqlshdir', 'sqlsthdr', 800, 'Top SQL by shared blocks dirtied', 'Top SQL by shared blocks dirtied', NULL, NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"filter": {"type": "exists", "field": "shared_blks_dirtied"},'
    '"ordering": "ord_shared_blocks_dirt",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "table_obj_name queryId", "caption": "Query ID"}, '
      '{"id": "dbname", "class": "table_obj_name", "caption": "Database"}, '
      '{"id": "username", "class": "table_obj_name", "caption": "User"}, '
      '{"id": "shared_blks_dirtied", "class": "table_obj_value", "title": "Total number of shared blocks dirtied by the statement", "caption": "Dirtied"}, '
      '{"id": "dirtied_pct", "class": "table_obj_value", "title": "Shared blocks dirtied by this statement as a percentage of all shared blocks dirtied in a cluster", "caption": "%Total"}, '
      '{"id": "shared_blks_hit", "class": "table_obj_value", "title": "Total number of shared blocks dirtied by the statement", "caption": "Hits"}, '
      '{"id": "shared_hit_pct", "class": "table_obj_value", "title": "Shared blocks hits as a percentage of shared blocks fetched (read + hit)", "caption": "%Total"}, '
      '{"id": "wal_bytes_fmt", "class": "table_obj_value", "title": "Total amount of WAL bytes generated by the statement", "caption": "WAL", "condition": "statement_wal_bytes"}, '
      '{"id": "wal_bytes_pct", "class": "table_obj_value", "title": "WAL bytes of this statement as a percentage of total WAL bytes generated by a cluster", "caption": "%Total", "condition": "statement_wal_bytes"}, '
      '{"id": "total_time", "class": "table_obj_value", "title": "Time spent by the statement", "caption": "Elapsed(s)"}, '
      '{"id": "rows", "class": "table_obj_value", "title": "Total number of rows retrieved or affected by the statement", "caption": "Rows"}, '
      '{"id": "calls", "class": "table_obj_value", "title": "Number of times the statement was executed", "caption": "Executions"}, '
      '{"id": "stmt_cover", "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']'
  '}]'::jsonb),
(1, 'sqlshwr', 'sqlsthdr', 900, 'Top SQL by shared blocks written', 'Top SQL by shared blocks written', NULL, NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"filter": {"type": "exists", "field": "shared_blks_written"},'
    '"ordering": "ord_shared_blocks_written",'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "table_obj_name queryId", "caption": "Query ID"}, '
      '{"id": "dbname", "class": "table_obj_name", "caption": "Database"}, '
      '{"id": "username", "class": "table_obj_name", "caption": "User"}, '
      '{"id": "shared_blks_written", "class": "table_obj_value", "title": "Total number of shared blocks written by the statement", "caption": "Written"}, '
      '{"id": "tot_written_pct", "class": "table_obj_value", "title": "Shared blocks written by this statement as a percentage of all shared blocks written in a cluster (sum of pg_stat_bgwriter fields buffers_checkpoint, buffers_clean and buffers_backend)", "caption": "%Total"}, '
      '{"id": "backend_written_pct", "class": "table_obj_value", "title": "Shared blocks written by this statement as a percentage total buffers written directly by a backends (buffers_backend of pg_stat_bgwriter view)", "caption": "%BackendW"}, '
      '{"id": "shared_hit_pct", "class": "table_obj_value", "title": "Shared blocks hits as a percentage of shared blocks fetched (read + hit)", "caption": "Hits(%)"}, '
      '{"id": "total_time", "class": "table_obj_value", "title": "Time spent by the statement", "caption": "Elapsed(s)"}, '
      '{"id": "rows", "class": "table_obj_value", "title": "Total number of rows retrieved or affected by the statement", "caption": "Rows"}, '
      '{"id": "calls", "class": "table_obj_value", "title": "Number of times the statement was executed", "caption": "Executions"}, '
      '{"id": "stmt_cover", "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']'
  '}]'::jsonb),
(1, 'sqlwalsz', 'sqlsthdr', 1000, 'Top SQL by WAL size', 'Top SQL by WAL size', 'statement_wal_bytes', NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"filter": {"type": "exists", "field": "wal_bytes"},'
    '"ordering": "ord_wal",'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "table_obj_name queryId", "caption": "Query ID"}, '
      '{"id": "dbname", "class": "table_obj_name", "caption": "Database"}, '
      '{"id": "username", "class": "table_obj_name", "caption": "User"}, '
      '{"id": "wal_bytes_fmt", "class": "table_obj_value", "title": "Total amount of WAL bytes generated by the statement", "caption": "WAL"}, '
      '{"id": "wal_bytes_pct", "class": "table_obj_value", "title": "WAL bytes of this statement as a percentage of total WAL bytes generated by a cluster", "caption": "%Total"}, '
      '{"id": "wal_buffers_full", "class": "table_obj_value", "title": "Number of times the WAL buffers became full", "caption": "WAL buffers full", "condition": "wal_buffers_full"}, '
      '{"id": "shared_blks_dirtied", "class": "table_obj_value", "title": "Total number of shared blocks dirtied by the statement", "caption": "Dirtied"}, '
      '{"id": "wal_fpi", "class": "table_obj_value", "title": "Total number of WAL full page images generated by the statement", "caption": "WAL FPI"}, '
      '{"id": "wal_records", "class": "table_obj_value", "title": "Total number of WAL records generated by the statement", "caption": "WAL records"}, '
      '{"id": "stmt_cover", "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']'
  '}]'::jsonb),
(1, 'sqltmp', 'sqlsthdr', 1100, 'Top SQL by temp usage', 'Top SQL by temp usage', 'statements_top_temp', NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"filter": {"type": "exists", "field": "sum_tmp_blks"},'
    '"ordering": "ord_temp",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "table_obj_name queryId", "caption": "Query ID"}, '
      '{"id": "dbname", "class": "table_obj_name", "caption": "Database"}, '
      '{"id": "username", "class": "table_obj_name", "caption": "User"}, '
      '{"id": "local_blks_fetched", "class": "table_obj_value", "title": "Number of local blocks fetched (hit + read)", "caption": "Local fetched"}, '
      '{"id": "local_hit_pct", "class": "table_obj_value", "title": "Local blocks hit percentage", "caption": "Hits(%)"}, '
      '{"title": "Number of blocks, used for temporary tables", "caption": "Local (blk)", "columns": ['
        '{"id": "local_blks_written", "class": "table_obj_value", "title": "Number of written local blocks", "caption": "Write"}, '
        '{"id": "local_write_total_pct", "class": "table_obj_value", "title": "Percentage of all local blocks written", "caption": "%Total"}, '
        '{"id": "local_blks_read", "class": "table_obj_value", "title": "Number of read local blocks", "caption": "Read"}, '
        '{"id": "local_read_total_pct", "class": "table_obj_value", "title": "Percentage of all local blocks read", "caption": "%Total"}'
      ']}, '
      '{"title": "Number of blocks, used in operations (like sorts and joins)", "caption": "Temp (blk)", "columns": ['
        '{"id": "temp_blks_written", "class": "table_obj_value", "title": "Number of written temp blocks", "caption": "Write"}, '
        '{"id": "temp_write_total_pct", "class": "table_obj_value", "title": "Percentage of all temp blocks written", "caption": "%Total"}, '
        '{"id": "temp_blks_read", "class": "table_obj_value", "title": "Number of read temp blocks", "caption": "Read"}, '
        '{"id": "temp_read_total_pct", "class": "table_obj_value", "title": "Percentage of all temp blocks read", "caption": "%Total"}'
      ']}, '
      '{"id": "total_time", "class": "table_obj_value", "title": "Time spent by the statement", "caption": "Elapsed(s)"}, '
      '{"id": "rows", "class": "table_obj_value", "title": "Total number of rows retrieved or affected by the statement", "caption": "Rows"}, '
      '{"id": "calls", "class": "table_obj_value", "title": "Number of times the statement was executed", "caption": "Executions"}, '
      '{"id": "stmt_cover", "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']'
  '}]'::jsonb),
(1, 'sqltmpiotime', 'sqlsthdr', 1125, 'Top SQL by temp I/O time', 'Top SQL by temp I/O time', 'statements_temp_io_times', NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"filter": {"type": "exists", "field": "ord_temp_io_time"},'
    '"ordering": "ord_temp_io_time",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "table_obj_name queryId", "caption": "Query ID"}, '
      '{"id": "dbname", "class": "table_obj_name", "caption": "Database"}, '
      '{"id": "username", "class": "table_obj_name", "caption": "User"}, '
      '{"title": "Time the statement spent on temporary file blocks I/O", "caption": "Temp I/O time (s)", "columns": ['
        '{"id": "temp_blk_read_time", "class": "table_obj_value", "title": "Time the statement spent reading temporary file blocks, in seconds", "caption": "Read"}, '
        '{"id": "temp_blk_write_time", "class": "table_obj_value", "title": "Time the statement spent reading temporary file blocks, in seconds", "caption": "Write"}, '
        '{"id": "temp_io_time_pct", "class": "table_obj_value", "title": "Time spent on temporary file blocks I/O of this statement as a percentage of total time spent on temporary file blocks I/O by all statements", "caption": "%Total"} '
      ']}, '
      '{"title": "Number of blocks, used in operations (like sorts and joins)", "caption": "Temp (blk)", "columns": ['
        '{"id": "temp_blks_written", "class": "table_obj_value", "title": "Number of written temp blocks", "caption": "Write"}, '
        '{"id": "temp_write_total_pct", "class": "table_obj_value", "title": "Percentage of all temp blocks written", "caption": "%Total"}, '
        '{"id": "temp_blks_read", "class": "table_obj_value", "title": "Number of read temp blocks", "caption": "Read"}, '
        '{"id": "temp_read_total_pct", "class": "table_obj_value", "title": "Percentage of all temp blocks read", "caption": "%Total"}'
      ']}, '
      '{"id": "total_time", "class": "table_obj_value", "title": "Time spent by the statement", "caption": "Elapsed(s)"}, '
      '{"id": "rows", "class": "table_obj_value", "title": "Total number of rows retrieved or affected by the statement", "caption": "Rows"}, '
      '{"id": "calls", "class": "table_obj_value", "title": "Number of times the statement was executed", "caption": "Executions"}, '
      '{"id": "stmt_cover", "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']'
  '}]'::jsonb),
(1, 'sqljit', 'sqlsthdr', 1150, 'Top SQL by JIT elapsed time', 'Top SQL by JIT elapsed time', 'statements_jit_stats', NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"filter": {"type": "exists", "field": "sum_jit_time"},'
    '"ordering": "ord_jit",'
    '"limit": "topn",'
    '"columns": ['
        '{"id": "hexqueryid", "class": "table_obj_name jitCellId", "caption": "Query ID"}, '
        '{"id": "dbname", "class": "table_obj_name", "caption": "Database"}, '
        '{"id": "username", "class": "table_obj_name", "caption": "User"}, '
        '{"id": "jit_total_time", "class": "table_obj_value", "title": "Time spent on JIT in seconds", "caption": "JIT total (s)"}, '
        '{"caption": "Generation", "columns": ['
          '{"id": "jit_functions", "class": "table_obj_value", "title": "Total number of functions JIT-compiled by the statement.", "caption": "Count"}, '
          '{"id": "jit_generation_time", "class": "table_obj_value", "title": "Time spent by the statement on generating JIT code, in seconds.", "caption": "Time (s)"}'
          ']}, '
        '{"class": "table_obj_name", "caption": "Inlining", "columns": ['
          '{"id": "jit_inlining_count", "class": "table_obj_value", "title": "Number of times functions have been inlined.", "caption": "Count"}, '
          '{"id": "jit_inlining_time", "class": "table_obj_value", "title": "Time spent by the statement on inlining functions, in seconds.", "caption": "Time (s)"}'
          ']}, '
        '{"class": "table_obj_name", "caption": "Optimization", "columns": ['
          '{"id": "jit_optimization_count", "class": "table_obj_value", "title": "Number of times the statement has been optimized.", "caption": "Count"}, '
          '{"id": "jit_optimization_time", "class": "table_obj_value", "title": "Time spent by the statement on optimizing, in seconds.", "caption": "Time (s)"}'
        ']}, '
        '{"class": "table_obj_name", "caption": "Emission", "columns": ['
          '{"id": "jit_emission_count", "class": "table_obj_value", "title": "Number of times code has been emitted.", "caption": "Count"}, '
          '{"id": "jit_emission_time", "class": "table_obj_value", "title": "Total time spent by the statement on emitting code, in seconds.", "caption": "Time (s)"}'
        ']}, '
        '{"class": "table_obj_name", "caption": "Deform", "condition": "statements_jit_deform", "columns": ['
          '{"id": "jit_deform_count", "class": "table_obj_value", "title": "Number of tuple deform functions JIT-compiled by the statement.", "caption": "Count"}, '
          '{"id": "jit_deform_time", "class": "table_obj_value", "title": "Total time spent by the statement on JIT-compiling tuple deform functions, in seconds.", "caption": "Time (s)"}'
        ']}, '
        '{"class": "table_obj_name", "caption": "Time (s)", "columns": ['
          '{"id": "total_plan_time", "class": "table_obj_value", "title": "Time spent planning statement", "condition": "planning_times", "caption": "Plan"}, '
          '{"id": "total_exec_time", "class": "table_obj_value", "title": "Time spent executing statement", "caption": "Exec"}'
        ']}, '
        '{"class": "table_obj_name", "caption": "I/O time (s)", "condition": "io_times", "columns": ['
          '{"id": "shared_blk_read_time", "class": "table_obj_value", "title": "Time spent reading blocks by statement", "caption": "Read"}, '
          '{"id": "shared_blk_write_time", "class": "table_obj_value", "title": "Time spent writing blocks by statement", "caption": "Write"}, '
      '{"id": "stmt_cover", "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
        ']}'
    ']}]'::jsonb),
(1, 'sqlworkers', 'sqlsthdr', 1175, 'Top SQL by parallel workers usage', 'Top SQL by parallel workers usage', 'statements_workers_stats', NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"filter": {"type": "exists", "field": "ord_wrkrs_cnt"},'
    '"ordering": "ord_wrkrs_cnt",'
    '"limit": "topn",'
    '"columns": ['
        '{"id": "hexqueryid", "class": "table_obj_name queryId", "caption": "Query ID"}, '
        '{"id": "dbname", "class": "table_obj_name", "caption": "Database"}, '
        '{"id": "username", "class": "table_obj_name", "caption": "User"}, '
        '{"class": "table_obj_name", "caption": "Parallel workers", "columns": ['
          '{"id": "parallel_workers_to_launch", "class": "table_obj_value", "caption": "Planned", "title": "Number of parallel workers planned to be launched by queries on this database"},'
          '{"id": "parallel_workers_launched", "class": "table_obj_value", "caption": "Launched", "title": "Number of parallel workers launched by queries on this database"}'
        ']},'
        '{"id": "total_exec_time", "class": "table_obj_value", "title": "Time spent executing statement", "caption": "Exec (s)"}, '
        '{"id": "shared_blks_fetched", "class": "table_obj_value", "title": "Shared blocks fetched (read and hit) by the statement", "caption": "blks fetched"}, '
        '{"title": "Number of blocks read by the statement", "caption": "Reads", "columns": ['
          '{"id": "shared_blks_read", "title": "Number of shared blocks read by the statement", "caption": "Shr", "class": "table_obj_value"}, '
          '{"id": "local_blks_read", "title": "Number of local blocks read by the statement (usually used for temporary tables)", "caption": "Loc", "class": "table_obj_value"}, '
          '{"id": "temp_blks_read", "title": "Number of temp blocks read by the statement (usually used for operations like sorts and joins)", "caption": "Tmp", "class": "table_obj_value"}'
        ']}, '
        '{"caption": "I/O time (s)", "condition": "io_times", "columns": ['
          '{"id": "shared_blk_read_time", "class": "table_obj_value", "caption": "Read"}, '
          '{"id": "shared_blk_write_time", "class": "table_obj_value", "caption": "Write"}'
        ']}'
    ']}]'::jsonb),
(1, 'sqlkcachehdr', 'sqlsthdr', 1200, 'Rusage statistics', 'Rusage statistics', 'kcachestatements', NULL, NULL, NULL),
(1, 'sqlrusgcpu', 'sqlkcachehdr', 100, 'Top SQL by system and user time', 'Top SQL by system and user time', NULL, NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_rusage_statements",'
    '"filter": {"type": "exists", "field": "sum_cpu_time"},'
    '"ordering": "ord_cpu_time",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "table_obj_name queryId", "caption": "Query ID"}, '
      '{"id": "dbname", "class": "table_obj_name", "caption": "Database"}, '
      '{"id": "username", "class": "table_obj_name", "caption": "User"}, '
      '{"title": "Userspace CPU", "caption": "User Time", "columns": ['
        '{"id": "plan_user_time", "class": "table_obj_value", "title": "User CPU time elapsed during planning", "caption": "Plan (s)", "condition": "rusage_planstats"}, '
        '{"id": "exec_user_time", "class": "table_obj_value", "title": "User CPU time elapsed during execution", "caption": "Exec (s)"}, '
        '{"id": "user_time_pct", "class": "table_obj_value", "title": "User CPU time elapsed by this statement as a percentage of total user CPU time", "caption": "%Total"}'
        ']}, '
      '{"title": "Kernelspace CPU", "caption": "System Time", "columns": ['
        '{"id": "plan_system_time", "class": "table_obj_value", "title": "System CPU time elapsed during planning", "caption": "Plan (s)", "condition": "rusage_planstats"}, '
        '{"id": "exec_system_time", "class": "table_obj_value", "title": "System CPU time elapsed during execution", "caption":"Exec (s)"}, '
        '{"id": "system_time_pct", "class": "table_obj_value", "title": "System CPU time elapsed by this statement as a percentage of total system CPU time", "caption": "%Total"}'
        ']}, '
      '{"id": "rusage_cover", "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
      ']'
    '}]'::jsonb),
(1, 'sqlrusgio', 'sqlkcachehdr', 200, 'Top SQL by reads/writes done by filesystem layer', 'Top SQL by reads/writes done by filesystem layer', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_rusage_statements",'
    '"filter": {"type": "exists", "field": "sum_io_bytes"},'
    '"ordering": "ord_io_bytes",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "table_obj_name queryId", "caption": "Query ID"},'
      '{"id": "dbname", "class": "table_obj_name", "caption": "Database"},'
      '{"id": "username", "class": "table_obj_name", "caption": "User"},'
      '{"title": "Filesystem reads", "caption": "Read Bytes", "columns": ['
          '{"id": "plan_reads", "class": "table_obj_value", "title": "Filesystem read amount during planning", "caption": "Plan", "condition": "rusage_planstats"},'
          '{"id": "exec_reads", "class": "table_obj_value", "title": "Filesystem read amount during execution", "caption": "Bytes"},'
          '{"id": "reads_total_pct", "class": "table_obj_value", "title": "Filesystem read amount of this statement as a percentage of all statements FS read amount", "caption": "%Total"}'
      ']},'
      '{"title": "Filesystem writes", "caption": "Write Bytes", "columns": ['
          '{"id": "plan_writes", "class": "table_obj_value", "title": "Filesystem write amount during planning", "caption": "Plan", "condition": "rusage_planstats"},'
          '{"id": "exec_writes", "class": "table_obj_value", "title": "Filesystem write amount during execution", "caption": "Bytes"},'
          '{"id": "writes_total_pct", "class": "table_obj_value", "title": "Filesystem write amount of this statement as a percentage of all statements FS read amount", "caption": "%Total"}'
      ']}, '
      '{"id": "rusage_cover", "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']'
  '}]'::jsonb),
(1, 'sqllist', 'sqlsthdr', 1300, 'Complete list of SQL texts', 'Complete list of SQL texts', NULL, NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "queries",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0}'
    '],'
    '"columns": ['
      '{"id": "hexqueryid", "class": "table_obj_name queryTextId", "caption": "Query ID", "rowspan": true}, '
      '{"id": "query_texts", "class": "table_obj_name queryText", "caption": "Query Text"}'
    ']'
  '}]'::jsonb)
;

-- Schema objects section of a regular report
INSERT INTO report_struct (
  report_id, sect_id, parent_sect_id, s_ord, toc_cap, tbl_cap, feature, function_name,
  content, sect_struct)
VALUES
(1, 'tblscan', 'objects', 100, 'Top tables by estimated sequentially scanned volume', 'Top tables by estimated sequentially scanned volume', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_tables",'
    '"filter": {"type": "exists", "field": "ord_seq_scan"},'
    '"ordering": "ord_seq_scan",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Table", "id": ["relname", "toastrelname"], "class": "table_obj_name"},'
     '{"caption": "~SeqBytes", "id": ["seqscan_bytes_pretty", "t_seqscan_bytes_pretty"], '
       '"class": "table_obj_value", '
       '"title": "Estimated number of bytes, fetched by sequential scans"}, '
     '{"caption": "SeqScan", "id": ["seq_scan", "toastseq_scan"], '
       '"class": "table_obj_value", '
       '"title": "Number of sequential scans initiated on this table"},'
     '{"caption": "IxScan", "id": ["idx_scan", "toastidx_scan"], '
       '"class": "table_obj_value", '
       '"title": "Number of index scans initiated on this table"},'
     '{"caption": "IxFet", "id": ["idx_tup_fetch", "toastidx_tup_fetch"], '
       '"class": "table_obj_value", '
       '"title": "Number of live rows fetched by index scans"},'
     '{"caption": "Ins", "id": ["n_tup_ins", "toastn_tup_ins"], '
       '"class": "table_obj_value", '
       '"title": "Number of rows inserted"},'
     '{"caption": "Upd", "id": ["n_tup_upd", "toastn_tup_upd"], '
       '"class": "table_obj_value", '
       '"title": "Number of rows updated (includes HOT updated rows)"},'
     '{"caption": "Del", "id": ["n_tup_del", "toastn_tup_del"], '
       '"class": "table_obj_value", '
       '"title": "Number of rows deleted"},'
     '{"caption": "Upd(HOT)", "id": ["n_tup_hot_upd", "toastn_tup_hot_upd"], '
       '"class": "table_obj_value", '
       '"title": "Number of rows HOT updated (i.e., with no separate index update required)"}'
    ']'
  '}]'::jsonb),
(1, 'tblfetch', 'objects', 200, 'Top tables by blocks fetched', 'Top tables by blocks fetched', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_io_tables",'
    '"filter": {"type": "exists", "field": "ord_fetch"},'
    '"ordering": "ord_fetch",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
    '{"caption": "DB", "id": "dbname", "class": "table_obj_name"},'
    '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name"},'
    '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name"},'
    '{"caption": "Table", "id": "relname", "class": "table_obj_name"},'
    '{"caption": "Heap", "columns": ['
         '{"caption": "Blks", "id": "heap_blks_fetch", "title": "Number of blocks fetched (read+hit) from this table", "class": "table_obj_value"},'
         '{"caption": "%Total", "id": "heap_blks_proc_pct", "title": "Heap blocks fetched for this table as a percentage of all blocks fetched in a cluster", "class": "table_obj_value"}'
    ']},'
    '{"caption": "Ix", "columns": ['
         '{"caption": "Blks", "id": "idx_blks_fetch", "title": "Number of blocks fetched (read+hit) from all indexes on this table", "class": "table_obj_value"},'
         '{"caption": "%Total", "id": "idx_blks_fetch_pct", "title": "Indexes of blocks fetched for this table as a percentage of all blocks fetched in a cluster", "class": "table_obj_value"}'
    ']},'
    '{"caption": "TOAST", "columns": ['
         '{"caption": "Blks", "id": "toast_blks_fetch", "title": "Number of blocks fetched (read+hit) from this table''s TOAST table (if any)", "class": "table_obj_value"},'
         '{"caption": "%Total", "id": "toast_blks_fetch_pct", "title": "TOAST blocks fetched for this table as a percentage of all blocks fetched in a cluster", "class": "table_obj_value"}'
    ']},'
    '{"caption": "TOAST-Ix", "columns": ['
         '{"caption": "Blks", "id": "tidx_blks_fetch", "title": "Number of blocks fetched (read+hit) from this table''s TOAST table indexes (if any)", "class": "table_obj_value"},'
         '{"caption": "%Total", "id": "tidx_blks_fetch_pct", "title": "TOAST table index blocks fetched for this table as a percentage of all blocks fetched in a cluster", "class": "table_obj_value"}'
    ']}'
   ']'
  '}]'::jsonb),
(1, 'tblrd', 'objects', 300, 'Top tables by blocks read', 'Top tables by blocks read', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_io_tables",'
    '"filter": {"type": "exists", "field": "ord_read"},'
    '"ordering": "ord_read",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name"},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name"},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name"},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name"},'
     '{"caption": "Heap", "columns": ['
          '{"caption": "Blks", "id": "heap_blks_read", "title": "Number of blocks read from this table", "class": "table_obj_value"},'
          '{"caption": "%Total", "id": "heap_blks_read_pct", "title": "Heap blocks read for this table as a percentage of all blocks fetched in a cluster", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Ix", "columns": ['
          '{"caption": "Blks", "id": "idx_blks_read", "title": "Number of blocks read from all indexes on this table", "class": "table_obj_value"},'
          '{"caption": "%Total", "id": "idx_blks_read_pct", "title": "Indexes of blocks read for this table as a percentage of all blocks fetched in a cluster", "class": "table_obj_value"}'
     ']},'
     '{"caption": "TOAST", "columns": ['
          '{"caption": "Blks", "id": "toast_blks_read", "title": "Number of blocks read from this table''s TOAST table (if any)", "class": "table_obj_value"},'
          '{"caption": "%Total", "id": "toast_blks_read_pct", "title": "TOAST blocks read for this table as a percentage of all blocks fetched in a cluster", "class": "table_obj_value"}'
     ']},'
     '{"caption": "TOAST-Ix", "columns": ['
          '{"caption": "Blks", "id": "tidx_blks_read", "title": "Number of blocks read from this table''s TOAST table indexes (if any)", "class": "table_obj_value"},'
          '{"caption": "%Total", "id": "tidx_blks_read_pct", "title": "TOAST table index blocks read for this table as a percentage of all blocks fetched in a cluster", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Hit(%)", "id": "hit_pct", "class": "table_obj_value", "title": "Number of heap, indexes, toast and toast index blocks fetched from shared buffers as a percentage of all their blocks fetched from shared buffers and file system"}'
    ']'
  '}]'::jsonb),
(1, 'tbldml', 'objects', 400, 'Top DML tables', 'Top DML tables', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_tables",'
    '"filter": {"type": "exists", "field": "ord_dml"},'
    '"ordering": "ord_dml",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1},'
      '{"id": "toastrelname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Table", "id": ["relname", "toastrelname"], "class": "table_obj_name"},'
     '{"caption": "Ins", "id": ["n_tup_ins", "toastn_tup_ins"], "title": "Number of rows inserted", "class": "table_obj_value"},'
     '{"caption": "Upd", "id": ["n_tup_upd", "toastn_tup_upd"], "title": "Number of rows updated (includes HOT updated rows)", "class": "table_obj_value"},'
     '{"caption": "Del", "id": ["n_tup_del", "toastn_tup_del"], "title": "Number of rows deleted", "class": "table_obj_value"},'
     '{"caption": "Upd(HOT)", "id": ["n_tup_hot_upd", "toastn_tup_hot_upd"], "title": "Number of rows HOT updated (i.e., with no separate index update required)", "class": "table_obj_value"},'
     '{"caption": "SeqScan", "id": ["seq_scan", "toastseq_scan"], "title": "Number of live rows fetched by sequential scans", "class": "table_obj_value"},'
     '{"caption": "SeqFet", "id": ["seq_tup_read", "toastseq_tup_read"], "title": "Number of live rows fetched by sequential scans", "class": "table_obj_value"},'
     '{"caption": "IxScan", "id": ["idx_scan", "toastidx_scan"], "title": "Number of index scans initiated on this table", "class": "table_obj_value"},'
     '{"caption": "IxFet", "id": ["idx_tup_fetch", "toastidx_tup_fetch"], "title": "Number of live rows fetched by index scans", "class": "table_obj_value"}'
    ']'
  '}]'::jsonb),
(1, 'tblud', 'objects', 500, 'Top tables by updated/deleted tuples', 'Top tables by updated/deleted tuples', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_tables",'
    '"filter": {"type": "exists", "field": "ord_upd"},'
    '"ordering": "ord_upd",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1},'
      '{"id": "toastrelname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Table", "id": ["relname", "toastrelname"], "class": "table_obj_name"},'
     '{"caption": "Upd", "id": ["n_tup_upd", "toastn_tup_upd"], "title": "Number of rows updated (includes HOT updated rows)", "class": "table_obj_value"},'
     '{"caption": "Upd(HOT)", "id": ["n_tup_hot_upd", "toastn_tup_hot_upd"], "title": "Number of rows HOT updated (i.e., with no separate index update required)", "class": "table_obj_value"},'
     '{"caption": "Del", "id": ["n_tup_del", "toastn_tup_del"], "title": "Number of rows deleted", "class": "table_obj_value"},'
     '{"caption": "Vacuum count", "title": "Number of times vacuum operation was performed on the underlying table", "columns": ['
          '{"caption": "Vacuum", "id": ["vacuum_count", "toastvacuum_count"], "title": "Number of times this table has been manually vacuumed (not counting VACUUM FULL)", "class": "table_obj_value"},'
          '{"caption": "AutoVacuum", "id": ["autovacuum_count", "toastautovacuum_count"], "title": "Number of times this table has been vacuumed by the autovacuum daemon", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Analyze count", "title": "Number of times vacuum operation was performed on the underlying table", "columns": ['
          '{"caption": "Analyze", "id": ["analyze_count", "toastanalyze_count"], "title": "Number of times this table has been manually analyzed", "class": "table_obj_value"},'
          '{"caption": "AutoAnalyze", "id": ["autoanalyze_count", "toastautoanalyze_count"], "title": "Number of times this table has been analyzed by the autovacuum daemon", "class": "table_obj_value"}'
     ']}'
    ']'
  '}]'::jsonb),
(1, 'tblupd_np', 'objects', 550, 'Top tables by new-page updated tuples', 'Top tables by new-page updated tuples', 'table_new_page_updates', NULL,
  '{"class": "notice", "text": "Top tables by number of rows updated where the successor version goes onto a new heap page, '
  'leaving behind an original version with a t_ctid field that points to a different heap page. '
  'These are always non-HOT updates"}',
  '[{'
    '"type": "row_table",'
    '"source": "top_tables",'
    '"filter": {"type": "exists", "field": "ord_upd_np"},'
    '"ordering": "ord_upd_np",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1},'
      '{"id": "toastrelname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Table", "id": ["relname", "toastrelname"], "class": "table_obj_name"},'
     '{"caption": "NP Upd", "id": ["n_tup_newpage_upd", "toastn_tup_newpage_upd"], "title": "Number of rows updated to a new heap page", "class": "table_obj_value"},'
     '{"caption": "%Upd", "id": ["np_upd_pct", "toastnp_upd_pct"], "title": "Number of new-page updated rows as a percentage of all rows updated", "class": "table_obj_value"},'
     '{"caption": "Upd", "id": ["n_tup_upd", "toastn_tup_upd"], "title": "Number of rows updated (includes HOT updated rows)", "class": "table_obj_value"},'
     '{"caption": "Upd(HOT)", "id": ["n_tup_hot_upd", "toastn_tup_hot_upd"], "title": "Number of rows HOT updated (i.e., with no separate index update required)", "class": "table_obj_value"}'
    ']'
  '}]'::jsonb),
(1, 'tblgrw', 'objects', 600, 'Top growing tables', 'Top growing tables', NULL, NULL,
  '{"class": "notice", "text": "Sizes in square brackets are based on pg_class.relpages data instead of pg_relation_size() function"}',
  '[{'
    '"type": "row_table",'
    '"source": "top_tables",'
    '"filter": {"type": "exists", "field": "ord_growth"},'
    '"ordering": "ord_growth",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1},'
      '{"id": "toastrelname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Table", "id": ["relname", "toastrelname"], "class": "table_obj_name"},'
     '{"caption": "Size", "id": ["relsize_pretty", "t_relsize_pretty"], "title": "Table size, as it was at the moment of last sample in report interval", "class": "table_obj_value"},'
     '{"caption": "Growth", "id": ["growth_pretty", "toastgrowth_pretty"], "title": "Table size increment during report interval", "class": "table_obj_value"},'
     '{"caption": "Ins", "id": ["n_tup_ins", "toastn_tup_ins"], "title": "Number of rows inserted", "class": "table_obj_value"},'
     '{"caption": "Upd", "id": ["n_tup_upd", "toastn_tup_upd"], "title": "Number of rows updated (includes HOT updated rows)", "class": "table_obj_value"},'
     '{"caption": "Del", "id": ["n_tup_del", "toastn_tup_del"], "title": "Number of rows deleted", "class": "table_obj_value"},'
     '{"caption": "Upd(HOT)", "id": ["n_tup_hot_upd", "toastn_tup_hot_upd"], "title": "Number of rows HOT updated (i.e., with no separate index update required)", "class": "table_obj_value"}'
    ']'
  '}]'::jsonb),
(1, 'ixfetch', 'objects', 700, 'Top indexes by blocks fetched', 'Top indexes by blocks fetched', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_io_indexes",'
    '"filter": {"type": "exists", "field": "ord_fetch"},'
    '"ordering": "ord_fetch",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1},'
      '{"id": "indexrelname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "indexrelid", "dataset": "index_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name"},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name"},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name"},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name"},'
     '{"caption": "Index", "id": "indexrelname", "class": "table_obj_name"},'
     '{"caption": "Scans", "id": "idx_scan", "title": "Number of scans performed on index", "class": "table_obj_value"},'
     '{"caption": "Blks", "id": "idx_blks_fetch", "title": "Number of blocks fetched (read+hit) from this index", "class": "table_obj_value"},'
     '{"caption": "%Total", "id": "idx_blks_fetch_pct", "title": "Blocks fetched from this index as a percentage of all blocks fetched in a cluster", "class": "table_obj_value"}'
    ']'
  '}]'::jsonb),
(1, 'ixrd', 'objects', 800, 'Top indexes by blocks read', 'Top indexes by blocks read', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_io_indexes",'
    '"filter": {"type": "exists", "field": "ord_read"},'
    '"ordering": "ord_read",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1},'
      '{"id": "indexrelname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "indexrelid", "dataset": "index_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name"},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name"},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name"},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name"},'
     '{"caption": "Index", "id": "indexrelname", "class": "table_obj_name"},'
     '{"caption": "Scans", "id": "idx_scan", "title": "Number of scans performed on index", "class": "table_obj_value"},'
     '{"caption": "Blks Reads", "id": "idx_blks_read", "title": "Number of disk blocks read from this index", "class": "table_obj_value"},'
     '{"caption": "%Total", "id": "idx_blks_read_pct", "title": "Blocks fetched from this index as a percentage of all blocks read in a cluster", "class": "table_obj_value"}, '
     '{"caption": "Hits(%)", "id": "idx_blks_hit_pct", "title": "Index blocks buffer cache hit percentage", "class": "table_obj_value"}'
    ']'
  '}]'::jsonb),
(1, 'ixgrw', 'objects', 900, 'Top growing indexes', 'Top growing indexes', NULL, NULL,
  '{"class": "notice", "text": "Sizes in square brackets are based on pg_class.relpages data instead of pg_relation_size() function"}',
  '[{'
    '"type": "row_table",'
    '"source": "top_indexes",'
    '"filter": {"type": "exists", "field": "ord_growth"},'
    '"ordering": "ord_growth",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1},'
      '{"id": "indexrelname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "indexrelid", "dataset": "index_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name"},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name"},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name"},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name"},'
     '{"caption": "Index", "id": "indexrelname", "class": "table_obj_name"},'
     '{"caption": "Index", "columns": ['
          '{"id": "indexrelsize_pretty", "caption": "Size", "title": "Index size, as it was at the moment of last sample in report interval", "class": "table_obj_value"},'
          '{"id": "growth_pretty", "caption": "Growth", "title": "Index size increment during report interval", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Table", "columns": ['
          '{"id": "tbl_n_tup_ins", "caption": "Ins", "title": "Number of rows inserted", "class": "table_obj_value"},'
          '{"id": "tbl_n_tup_upd", "caption": "Upd", "title": "Number of rows updated (without HOT updated rows)", "class": "table_obj_value"},'
          '{"id": "tbl_n_tup_del", "caption": "Del", "title": "Number of rows deleted", "class": "table_obj_value"}'
     ']}'
    ']'
  '}]'::jsonb),
(1, 'ixunused', 'objects', 1000, 'Unused indexes', 'Unused indexes', NULL, NULL,
  '{"class": "notice", "text": "This table contains non-scanned indexes (during report interval), ordered by number of DML '
  'operations on underlying tables. Constraint indexes are excluded"}',
  '[{'
    '"type": "row_table",'
    '"source": "top_indexes",'
    '"filter": {"type": "exists", "field": "ord_unused"},'
    '"ordering": "ord_unused",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1},'
      '{"id": "indexrelname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "indexrelid", "dataset": "index_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name"},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name"},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name"},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name"},'
     '{"caption": "Index", "id": "indexrelname", "class": "table_obj_name"},'
     '{"caption": "Index", "columns": ['
          '{"id": "indexrelsize_pretty", "caption": "Size", "title": "Index size, as it was at the moment of last sample in report interval", "class": "table_obj_value"},'
          '{"id": "growth_pretty", "caption": "Growth", "title": "Index size increment during report interval", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Table", "columns": ['
          '{"id": "tbl_n_tup_ins", "caption": "Ins", "title": "Number of rows inserted", "class": "table_obj_value"},'
          '{"id": "tbl_n_tup_upd", "caption": "Upd", "title": "Number of rows updated (without HOT updated rows)", "class": "table_obj_value"},'
          '{"id": "tbl_n_tup_del", "caption": "Del", "title": "Number of rows deleted", "class": "table_obj_value"}'
     ']}'
    ']'
  '}]'::jsonb)
;

-- Functions section of a regular report
INSERT INTO report_struct (
  report_id, sect_id, parent_sect_id, s_ord, toc_cap, tbl_cap, feature, function_name,
  content, sect_struct)
VALUES
(1, 'func_time', 'funchdr', 100, 'Top functions by total time', 'Top functions by total time', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_functions",'
    '"filter": {"type": "exists", "field": "ord_time"},'
    '"ordering": "ord_time",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "funcname", "index": 1}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name"},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name"},'
     '{"caption": "Function", "id": "funcname", "class": "table_obj_name"},'
     '{"caption": "Executions", "id": "calls", "title": "Number of times this function has been called", "class": "table_obj_value"},'
     '{"caption": "Time (s)", "title": "Function execution timing statistics", "columns": ['
          '{"caption": "Total", "id": "total_time", "class": "table_obj_value", "title": "Time spent in this function and all other functions called by it"},'
          '{"caption": "Self", "id": "self_time", "class": "table_obj_value", "title": "Time spent in this function itself, not including other functions called by it"},'
          '{"caption": "Mean", "id": "m_time", "class": "table_obj_value", "title": "Mean total time per execution"},'
          '{"caption": "Mean self", "id": "m_stime", "class": "table_obj_value", "title": "Mean self time per execution"}'
     ']}'
    ']'
  '}]'::jsonb),
(1, 'func_calls', 'funchdr', 200, 'Top functions by executions', 'Top functions by executions', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_functions",'
    '"filter": {"type": "exists", "field": "ord_calls"},'
    '"ordering": "ord_calls",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "funcname", "index": 1}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name"},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name"},'
     '{"caption": "Function", "id": "funcname", "class": "table_obj_name"},'
     '{"caption": "Executions", "id": "calls", "title": "Number of times this function has been called", "class": "table_obj_value"},'
     '{"caption": "Time (s)", "title": "Function execution timing statistics", "columns": ['
          '{"caption": "Total", "id": "total_time", "class": "table_obj_value", "title": "Time spent in this function and all other functions called by it"},'
          '{"caption": "Self", "id": "self_time", "class": "table_obj_value", "title": "Time spent in this function itself, not including other functions called by it"},'
          '{"caption": "Mean", "id": "m_time", "class": "table_obj_value", "title": "Mean total time per execution"},'
          '{"caption": "Mean self", "id": "m_stime", "class": "table_obj_value", "title": "Mean self time per execution"}'
     ']}'
    ']'
  '}]'::jsonb),
(1, 'func_trg', 'funchdr', 300, 'Top trigger functions by total time', 'Top trigger functions by total time', 'trigger_function_stats', NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_functions",'
    '"filter": {"type": "exists", "field": "ord_trgtime"},'
    '"ordering": "ord_trgtime",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "funcname", "index": 1}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr"},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr"},'
     '{"caption": "Function", "id": "funcname", "class": "table_obj_name hdr"},'
     '{"caption": "Executions", "id": "calls", "title": "Number of times this function has been called", "class": "table_obj_value"},'
     '{"caption": "Time (s)", "title": "Function execution timing statistics", "columns": ['
          '{"caption": "Total", "id": "total_time", "class": "table_obj_value", "title": "Time spent in this function and all other functions called by it"},'
          '{"caption": "Self", "id": "self_time", "class": "table_obj_value", "title": "Time spent in this function itself, not including other functions called by it"},'
          '{"caption": "Mean", "id": "m_time", "class": "table_obj_value", "title": "Mean total time per execution"},'
          '{"caption": "Mean self", "id": "m_stime", "class": "table_obj_value", "title": "Mean self time per execution"}'
     ']}'
    ']'
  '}]'::jsonb)
;

-- Vacuum section of a regular report
INSERT INTO report_struct (
  report_id, sect_id, parent_sect_id, s_ord, toc_cap, tbl_cap, feature, function_name,
  content, sect_struct)
VALUES
(1, 'vacops', 'vachdr', 100, 'Top tables by vacuum operations', 'Top tables by vacuum operations', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_tables",'
    '"filter": {"type": "exists", "field": "ord_vac_cnt"},'
    '"ordering": "ord_vac_cnt",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name"},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name"},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name"},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name"},'
     '{"caption": "Vacuum count", "title": "Number of times vacuum operation was performed on the underlying table", "columns": ['
          '{"caption": "Vacuum", "id": "vacuum_count", "title": "Number of times this table has been manually vacuumed (not counting VACUUM FULL)", "class": "table_obj_value"},'
          '{"caption": "AutoVacuum", "id": "autovacuum_count", "title": "Number of times this table has been vacuumed by the autovacuum daemon", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Vacuum time (s)", "title": "Time spent by vacuum operations on a table", "condition": "vacuum_time", "columns": ['
          '{"caption": "Vacuum", "id": "total_vacuum_time", "title": "Total time this table has been manually vacuumed, in seconds. (This includes the time spent sleeping due to cost-based delays.)", "class": "table_obj_value"},'
          '{"caption": "AutoVacuum", "id": "total_autovacuum_time", "title": "Total time this table has been vacuumed by the autovacuum daemon, in seconds. (This includes the time spent sleeping due to cost-based delays.)", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Ins", "id": "n_tup_ins", "class": "table_obj_value", "title": "Number of rows inserted"},'
     '{"caption": "Upd", "id": "n_tup_upd", "class": "table_obj_value", "title": "Number of rows updated (includes HOT updated rows)"},'
     '{"caption": "Del", "id": "n_tup_del", "class": "table_obj_value", "title": "Number of rows deleted"},'
     '{"caption": "Upd(HOT)", "id": "n_tup_hot_upd", "class": "table_obj_value", "title": "Number of rows HOT updated (i.e., with no separate index update required)"}'
    ']'
  '}]'::jsonb),
(1, 'anops', 'vachdr', 150, 'Top tables by analyze operations', 'Top tables by analyze operations', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_tables",'
    '"filter": {"type": "exists", "field": "ord_anl_cnt"},'
    '"ordering": "ord_anl_cnt",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name"},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name"},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name"},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name"},'
     '{"caption": "Analyze count", "title": "Number of times vacuum operation was performed on the underlying table", "columns": ['
          '{"caption": "Analyze", "id": "analyze_count", "title": "Number of times this table has been manually analyzed", "class": "table_obj_value"},'
          '{"caption": "AutoAnalyze", "id": "autoanalyze_count", "title": "Number of times this table has been analyzed by the autovacuum daemon", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Analyze time (s)", "title": "Time spent by analyze operations on a table", "condition": "analyze_time", "columns": ['
          '{"caption": "Analyze", "id": "total_analyze_time", "title": "Total time this table has been manually analyzed, in seconds. (This includes the time spent sleeping due to cost-based delays.)", "class": "table_obj_value"},'
          '{"caption": "AutoAnalyze", "id": "total_autoanalyze_time", "title": "Total time this table has been analyzed by the autovacuum daemon, in seconds. (This includes the time spent sleeping due to cost-based delays.)", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Ins", "id": "n_tup_ins", "class": "table_obj_value", "title": "Number of rows inserted"},'
     '{"caption": "Upd", "id": "n_tup_upd", "class": "table_obj_value", "title": "Number of rows updated (includes HOT updated rows)"},'
     '{"caption": "Del", "id": "n_tup_del", "class": "table_obj_value", "title": "Number of rows deleted"},'
     '{"caption": "Upd(HOT)", "id": "n_tup_hot_upd", "class": "table_obj_value", "title": "Number of rows HOT updated (i.e., with no separate index update required)"}'
    ']}]'::jsonb),
(1, 'vactime', 'vachdr', 200, 'Top tables by vacuum time spent', 'Top tables by vacuum time spent', 'vacuum_time', NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_tables",'
    '"filter": {"type": "exists", "field": "ord_vac_time"},'
    '"ordering": "ord_vac_time",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name"},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name"},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name"},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name"},'
     '{"caption": "Vacuum time (s)", "title": "Time spent by vacuum operations on a table", "columns": ['
          '{"caption": "Vacuum", "id": "total_vacuum_time", "title": "Total time this table has been manually vacuumed, in seconds. (This includes the time spent sleeping due to cost-based delays.)", "class": "table_obj_value"},'
          '{"caption": "AutoVacuum", "id": "total_autovacuum_time", "title": "Total time this table has been vacuumed by the autovacuum daemon, in seconds. (This includes the time spent sleeping due to cost-based delays.)", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Vacuum count", "title": "Number of times vacuum operation was performed on the underlying table", "columns": ['
          '{"caption": "Vacuum", "id": "vacuum_count", "title": "Number of times this table has been manually vacuumed (not counting VACUUM FULL)", "class": "table_obj_value"},'
          '{"caption": "AutoVacuum", "id": "autovacuum_count", "title": "Number of times this table has been vacuumed by the autovacuum daemon", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Ins", "id": "n_tup_ins", "class": "table_obj_value", "title": "Number of rows inserted"},'
     '{"caption": "Upd", "id": "n_tup_upd", "class": "table_obj_value", "title": "Number of rows updated (includes HOT updated rows)"},'
     '{"caption": "Del", "id": "n_tup_del", "class": "table_obj_value", "title": "Number of rows deleted"},'
     '{"caption": "Upd(HOT)", "id": "n_tup_hot_upd", "class": "table_obj_value", "title": "Number of rows HOT updated (i.e., with no separate index update required)"}'
    ']'
  '}]'::jsonb),
(1, 'antime', 'vachdr', 250, 'Top tables by analyze time spent', 'Top tables by analyze time spent', 'analyze_time', NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_tables",'
    '"filter": {"type": "exists", "field": "ord_anl_time"},'
    '"ordering": "ord_anl_time",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name"},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name"},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name"},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name"},'
     '{"caption": "Analyze time (s)", "title": "Time spent by analyze operations on a table", "columns": ['
          '{"caption": "Analyze", "id": "total_analyze_time", "title": "Total time this table has been manually analyzed, in seconds. (This includes the time spent sleeping due to cost-based delays.)", "class": "table_obj_value"},'
          '{"caption": "AutoAnalyze", "id": "total_autoanalyze_time", "title": "Total time this table has been analyzed by the autovacuum daemon, in seconds. (This includes the time spent sleeping due to cost-based delays.)", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Analyze count", "title": "Number of times vacuum operation was performed on the underlying table", "columns": ['
          '{"caption": "Analyze", "id": "analyze_count", "title": "Number of times this table has been manually analyzed", "class": "table_obj_value"},'
          '{"caption": "AutoAnalyze", "id": "autoanalyze_count", "title": "Number of times this table has been analyzed by the autovacuum daemon", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Ins", "id": "n_tup_ins", "class": "table_obj_value", "title": "Number of rows inserted"},'
     '{"caption": "Upd", "id": "n_tup_upd", "class": "table_obj_value", "title": "Number of rows updated (includes HOT updated rows)"},'
     '{"caption": "Del", "id": "n_tup_del", "class": "table_obj_value", "title": "Number of rows deleted"},'
     '{"caption": "Upd(HOT)", "id": "n_tup_hot_upd", "class": "table_obj_value", "title": "Number of rows HOT updated (i.e., with no separate index update required)"}'
    ']}]'::jsonb),
(1, 'ixvacest', 'vachdr', 300, 'Top indexes by estimated vacuum load', 'Top indexes by estimated vacuum load', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_indexes",'
    '"filter": {"type": "exists", "field": "ord_vac"},'
    '"ordering": "ord_vac",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1},'
      '{"id": "indexrelname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "indexrelid", "dataset": "index_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name"},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name"},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name"},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name"},'
     '{"caption": "Index", "id": "indexrelname", "class": "table_obj_name"},'
     '{"id": "vacuum_bytes_pretty", "caption": "Vacuum bytes", "class": "table_obj_value", "title": "Estimated implicit vacuum load caused by table indexes"},'
     '{"caption": "Vacuum count", "title": "Number of times vacuum operation was performed on the underlying table", "columns": ['
          '{"caption": "Vacuum", "id": "vacuum_count", "title": "Number of times this table has been manually vacuumed (not counting VACUUM FULL)", "class": "table_obj_value"},'
          '{"caption": "AutoVacuum", "id": "autovacuum_count", "title": "Number of times this table has been vacuumed by the autovacuum daemon", "class": "table_obj_value"}'
     ']},'
     '{"id": "avg_indexrelsize_pretty", "caption": "IX size", "class": "table_obj_value", "title": "Average index size during report interval"},'
     '{"id": "avg_relsize_pretty", "caption": "Relsize", "class": "table_obj_value", "title": "Average relation size during report interval"}'
    ']'
  '}]'::jsonb),
(1, 'tblbydead', 'vachdr', 400, 'Top tables by dead tuples ratio', 'Top tables by dead tuples ratio', 'top_tables_dead', NULL,
  '{"class": "notice", "text": "Data in this section is not differential. This data is valid for last report sample only"}',
  '[{'
    '"type": "row_table",'
    '"source": "top_tbl_last_sample",'
    '"filter": {"type": "exists", "field": "ord_dead"},'
    '"ordering": "ord_dead",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name"},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name"},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name"},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name"},'
     '{"caption": "Live", "id": "n_live_tup", "class": "table_obj_value", "title": "Estimated number of live rows"},'
     '{"caption": "Dead", "id": "n_dead_tup", "class": "table_obj_value", "title": "Estimated number of dead rows"},'
     '{"caption": "%Dead", "id": "dead_pct", "class": "table_obj_value", "title": "Dead rows count as a percentage of total rows count"},'
     '{"caption": "Last AV", "id": "last_autovacuum", "class": "table_obj_value", "title": "Last autovacuum ran time"},'
     '{"caption": "Size", "id": "relsize_pretty", "class": "table_obj_value", "title": "Table size without indexes and TOAST"}'
    ']'
  '}]'::jsonb),
(1, 'tblbymod', 'vachdr', 500, 'Top tables by modified tuples ratio', 'Top tables by modified tuples ratio', 'top_tables_mods', NULL,
  '{"class": "notice", "text": "Data in this section is not differential. This data is valid for last report sample only"}',
  '[{'
    '"type": "row_table",'
    '"source": "top_tbl_last_sample",'
    '"filter": {"type": "exists", "field": "ord_mod"},'
    '"ordering": "ord_mod",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name"},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name"},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name"},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name"},'
     '{"caption": "Live", "id": "n_live_tup", "class": "table_obj_value", "title": "Estimated number of live rows"},'
     '{"caption": "Dead", "id": "n_dead_tup", "class": "table_obj_value", "title": "Estimated number of dead rows"},'
     '{"caption": "Mod", "id": "n_mod_since_analyze", "class": "table_obj_value", "title": "Estimated number of rows modified since this table was last analyzed"},'
     '{"caption": "%Mod", "id": "mods_pct", "class": "table_obj_value", "title": "Modified rows of the table as a percentage of all rows in the table"},'
     '{"caption": "Last AA", "id": "last_autoanalyze", "class": "table_obj_value", "title": "Last autoanalyze ran time"},'
     '{"caption": "Size", "id": "relsize_pretty", "class": "table_obj_value", "title": "Table size without indexes and TOAST"}'
    ']'
  '}]'::jsonb)
;

-- Settings sections
INSERT INTO report_struct(
    report_id, sect_id, parent_sect_id, s_ord, toc_cap, tbl_cap, feature, function_name,
    content, sect_struct)
VALUES
(1, 'definedset', 'settings', 800, NULL, NULL, NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "settings",'
    '"filter": {"type": "exists", "field": "defined_val"},'
    '"columns": ['
     '{"caption": "Defined settings", "columns": ['
          '{"caption": "Setting", "id": "name", "class": "table_obj_value"},'
          '{"caption": "reset_val", "id": "reset_val", "class": "table_obj_value switch_bold"},'
          '{"caption": "Unit", "id": "unit", "class": "table_obj_value"},'
          '{"caption": "Source", "id": "source", "class": "table_obj_value"},'
          '{"caption": "Notes", "id": "notes", "class": "table_obj_value switch_bold"}'
     ']}'
    ']'
  '},'
  '{'
    '"type": "row_table",'
    '"source": "settings",'
    '"filter": {"type": "exists", "field": "default_val"},'
    '"columns": ['
     '{"caption": "Default settings", "columns": ['
          '{"caption": "Setting", "id": "name", "class": "table_obj_value"},'
          '{"caption": "reset_val", "id": "reset_val", "class": "table_obj_value switch_bold"},'
          '{"caption": "Unit", "id": "unit", "class": "table_obj_value"},'
          '{"caption": "Source", "id": "source", "class": "table_obj_value"},'
          '{"caption": "Notes", "id": "notes", "class": "table_obj_value switch_bold"}'
     ']}'
    ']'
  '}]'::jsonb)
;

-- Extension sections
INSERT INTO report_struct(
    report_id, sect_id, parent_sect_id, s_ord, toc_cap, tbl_cap, feature, function_name,
    content, sect_struct)
VALUES
(1, 'extension_versions', 'extensions', 900, NULL, NULL, NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "extension_versions",'
    '"ordering": "ord_ext",'
    '"columns": ['
     '{"caption": "Name", "id": "extname", "class": "table_obj_name", "title": "Name of the extension"},'
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name", "title": "Name of the database"},'
     '{"caption": "First seen", "condition": "extension_versions_show_date_columns", "id": "first_seen", "class": "table_obj_value", "title": " The first appearance this extension version"},'
     '{"caption": "Last seen", "condition": "extension_versions_show_date_columns", "id": "last_seen", "class": "table_obj_value", "title": "The last appearance of the extension version"},'
     '{"caption": "Version", "id": "extversion", "class": "table_obj_value", "title": "Version name for the extension"}'
    ']'
  '}]'::jsonb)
;

-- Schema objects section of a differential report
INSERT INTO report_struct (
  report_id, sect_id, parent_sect_id, s_ord, toc_cap, tbl_cap, feature, function_name,
  content, sect_struct)
VALUES
(2, 'rep_details', NULL, 10, 'Report details', 'Report details', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "properties",'
    '"columns": ['
        '{"id": "pgprofile_version", "class": "hdr table_obj_value", "caption": "Version", "rowspan": true},'
        '{"id": "server_name", "class": "hdr table_obj_value", "caption": "Server name", "rowspan": true},'
        '{"id": ["1", "2"], "class": "interval", "title":["properties.timePeriod1", "properties.timePeriod2"], "caption": "I"},'
        '{"caption": "Interval (sample)", "columns": ['
          '{"id": ["start1_id", "start2_id"], "class": "table_obj_value", "caption": "start"},'
          '{"id": ["end1_id", "end2_id"], "class": "table_obj_value", "caption": "end"}'
        ']},'
        '{"caption": "Interval (time)", "columns": ['
          '{"id": ["report_start1", "report_start2"], "class": "table_obj_value", "caption": "start"},'
          '{"id": ["report_end1", "report_end2"], "class": "table_obj_value", "caption": "end"}'
        ']}'
    ']}]'::jsonb),
(2, 'rep_settings', NULL, 11, NULL, NULL, NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "settings",'
    '"filter": {"type": "exists", "field": "h_ord"},'
    '"ordering": "h_ord",'
    '"columns": ['
      '{"caption": "Setting", "id": "name", "class": "table_obj_name"},'
      '{"caption": "Value", "id": "reset_val", "class": "table_obj_value"}'
    ']'
  '}]'::jsonb),
(2, 'stmt_cmt1', NULL, 100, NULL, NULL, 'stmt_cnt_range', NULL,
  '{"class": "warning", "text": "Report interval contains sample(s) with captured statements count more than 90% of pg_stat_statements.max. '
  'Consider increasing pg_stat_statements.max parameter."}',
  '[{'
    '"type": "row_table", '
    '"source": "stmt_cnt_range",'
    '"ordering": "ord",'
    '"columns": ['
        '{"id": "sample_id", "class": "table_obj_value", "caption": "Sample ID"}, '
        '{"id": "sample_time", "class": "table_obj_value", "caption": "Sample Time"}, '
        '{"id": "stmt_cnt", "class": "table_obj_value", "caption": "Stmts Captured"}, '
        '{"id": "max_cnt", "class": "table_obj_value", "caption": "pg_stat_statements.max"}'
    ']}]'::jsonb),
(2, 'srvstat', NULL, 300, 'Server statistics', 'Server statistics', NULL, NULL, NULL, NULL),
(2, 'actsesshdr', NULL, 350, 'Session states', 'Session states observed by subsamples', 'act_backend', NULL,
  '{"class": "notice", "text": "Statistics about session states exceeding capturing thresholds."}', NULL),
(2, 'sqlsthdr', NULL, 400, 'SQL query statistics', 'SQL query statistics', 'statstatements', NULL, NULL, NULL),
(2, 'objects', NULL, 500, 'Schema object statistics', 'Schema object statistics', NULL, NULL, NULL, NULL),
(2, 'funchdr', NULL, 600, 'User function statistics', 'User function statistics', 'function_stats', NULL, NULL, NULL),
(2, 'vachdr', NULL, 700, 'Vacuum-related statistics', 'Vacuum-related statistics', NULL, NULL, NULL, NULL),
(2, 'settings', NULL, 800, 'Cluster settings', 'Cluster settings during the report interval', NULL, NULL, NULL, NULL),
(2, 'extensions', NULL, 850, 'Extension versions', 'Extension versions during the report interval', NULL, NULL, NULL, NULL),
(2, 'stmt_warn', NULL, 900, NULL, 'Warning!', 'stmt_cnt_all', NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "stmt_cnt_all",'
    '"ordering": "sample_id",'
    '"columns": ['
        '{"id": "sample_id", "class": "table_obj_value", "caption": "Sample ID"}, '
        '{"id": "sample_time", "class": "table_obj_value", "caption": "Sample Time"}, '
        '{"id": "stmt_cnt", "class": "table_obj_value", "caption": "Stmts Captured"}, '
        '{"id": "max_cnt", "class": "table_obj_value", "caption": "pg_stat_statements.max"}'
    ']}]'::jsonb)
;


-- Server section of differential report
INSERT INTO report_struct (
  report_id, sect_id, parent_sect_id, s_ord, toc_cap, tbl_cap, feature, function_name, content,
  sect_struct)
VALUES
(2, 'dbstat', 'srvstat', 100, 'Database statistics', 'Database statistics', NULL, NULL, NULL, NULL),
(2, 'dbstatreset', 'dbstat', 200, NULL, NULL, 'dbstats_reset', NULL,
  '{"class": "warning", "text": "Database statistics reset detected during report interval! '
  'Statistics for listed databases and contained objects might be affected."}',
  '[{'
    '"type": "row_table", '
    '"source": "dbstats_reset", '
    '"ordering": "sample_id",'
    '"columns": ['
        '{"id": "interval_num", "class": "table_obj_value", "caption": "I"}, '
        '{"id": "dbname", "class": "table_obj_name", "caption": "Database"}, '
        '{"id": "sample_id", "class": "table_obj_value", "caption": "Sample"}, '
        '{"id": "stats_reset", "class": "table_obj_value", "caption": "Reset time"}'
    ']'
  '}]'::jsonb),
(2, 'dbstatmain', 'dbstat', 300, NULL, NULL, NULL, NULL, NULL,
'[{'
    '"type": "row_table", '
    '"source": "dbstat", '
    '"ordering": "ord_db",'
    '"highlight": ['
      '{"id": "dbname", "index": 0}'
    '],'
    '"columns": ['
        '{"id": "dbname", "class": "table_obj_name hdr", "caption": "Database", "rowspan": true}, '
        '{"id": ["1", "2"], "class": "interval", "title":["properties.timePeriod1", "properties.timePeriod2"], "caption": "I"}, '
        '{"caption": "Transactions", "columns": ['
            '{"id": ["xact_commit1", "xact_commit2"], "class": "table_obj_value", "title": "Number of transactions in this database that have been committed", "caption": "Commits"}, '
            '{"id": ["xact_rollback1", "xact_rollback2"], "class": "table_obj_value", "title": "Number of transactions in this database that have been rolled back", "caption": "Rollbacks"}, '
            '{"id": ["deadlocks1", "deadlocks2"], "class": "table_obj_value", "title": "Number of deadlocks detected in this database", "caption": "Deadlocks"}'
        ']}, '
        '{"caption": "Checksums", "condition": "checksum_fail_detected", "columns": ['
            '{"id": ["checksum_failures1", "checksum_failures2"], "class": "table_obj_value", "title": "Number of block checksum failures detected", "caption": "Failures"}, '
            '{"id": ["checksum_last_failure1", "checksum_last_failure2"], "class": "table_obj_value", "title": "Last checksum failure detected", "caption": "Last"}
            ]}, '
        '{"caption": "Block statistics", "columns": ['
            '{"id": ["blks_hit_pct1", "blks_hit_pct2"], "class": "table_obj_value", "title": "Buffer cache hit ratio", "caption": "Hit(%)"}, '
            '{"id": ["blks_read1", "blks_read2"], "class": "table_obj_value", "title": "Number of disk blocks read in this database", "caption": "Read"}, '
            '{"id": ["blks_hit1", "blks_hit2"], "class": "table_obj_value", "title": "Number of times disk blocks were found already in the buffer cache", "caption": "Hit"}'
        ']}, '
        '{"caption": "Block I/O times", "condition": "io_times", "columns": ['
            '{"id": ["blk_read_time1", "blk_read_time2"], "class": "table_obj_value", "title": "Time spent reading data file blocks by backends", "caption": "Read"}, '
            '{"id": ["blk_write_time1", "blk_write_time2"], "class": "table_obj_value", "title": "Time spent writing data file blocks by backends", "caption": "Write"} '
        ']}, '
        '{"caption": "Tuples", "columns": ['
            '{"id": ["tup_returned1", "tup_returned2"], "class": "table_obj_value", "title": "Number of rows returned by queries in this database", "caption": "Ret"}, '
            '{"id": ["tup_fetched1", "tup_fetched2"], "class": "table_obj_value", "title": "Number of rows fetched by queries in this database", "caption": "Fet"}, '
            '{"id": ["tup_inserted1", "tup_inserted2"], "class": "table_obj_value", "title": "Number of rows inserted by queries in this database", "caption": "Ins"}, '
            '{"id": ["tup_updated1", "tup_updated2"], "class": "table_obj_value", "title": "Number of rows updated by queries in this database", "caption": "Upd"}, '
            '{"id": ["tup_deleted1", "tup_deleted2"], "class": "table_obj_value", "title": "Number of rows deleted", "caption": "Del"}'
        ']},'
        '{"caption": "Parallel workers", "condition": "db_parallel_workers", "columns": ['
           '{"id": ["parallel_workers_to_launch1", "parallel_workers_to_launch2"], "class": "table_obj_value", "title": "Number of parallel workers planned to be launched by queries on this database", "caption": "Planned"},'
           '{"id": ["parallel_workers_launched1", "parallel_workers_launched2"], "class": "table_obj_value", "title": "Number of parallel workers launched by queries on this database", "caption": "Launched"}'
        ']}, '
        '{"caption": "Temp files", "columns": ['
            '{"id": ["temp_bytes1", "temp_bytes2"], "class": "table_obj_value", "title": "Total amount of data written to temporary files by queries in this database", "caption": "Size"}, '
            '{"id": ["temp_files1", "temp_files2"], "class": "table_obj_value", "title": "Number of temporary files created by queries in this database", "caption": "Files"}'
        ']}, '
        '{"id": ["datsize1", "datsize2"], "class": "table_obj_value", "title": "Database size as is was at the moment of last sample in report interval", "caption": "Size"}, '
        '{"id": ["datsize_delta1", "datsize_delta2"], "class": "table_obj_value", "title": "Database size increment during report interval", "caption": "Growth"} '
']}]'::jsonb),
(2, 'iostat', 'srvstat', 328, 'Cluster I/O statistics', 'Cluster I/O statistics', 'stat_io', NULL, NULL, NULL),
(2, 'iostatrst', 'srvstat', 329, NULL, NULL, 'stat_io_reset', NULL,
'{"class": "warning", "text": "IO stats reset was detected during report interval. Statistic values may be affected"}',
'[{'
    '"type": "row_table",'
    '"source": "stat_io_reset",'
    '"columns": ['
      '{"caption": "Sample ID", "id": "sample_id", "class": "table_obj_name", '
        '"title": "Sample identifier with detected reset"},'
      '{"caption": "Object", "id": "object", "class": "table_obj_name", '
        '"title": "Target object of an I/O operation"},'
      '{"caption": "Backend", "id": "backend_type", "class": "table_obj_name", '
        '"title": "Type of backend (see stat_activity)"},'
      '{"caption": "Context", "id": "context", "class": "table_obj_name", '
        '"title": "The context of an I/O operation"},'
      '{"caption": "Reset time", "id": "stats_reset", "class": "table_obj_value", '
        '"title": "Date and time of the last reset performed in sample"}'
    ']'
    '}]'::jsonb),
(2, 'iostatmain', 'srvstat', 330, NULL, NULL, 'stat_io', NULL, NULL,
'[{'
    '"type": "row_table",'
    '"source": "stat_io",'
    '"columns": ['
      '{"caption": "Object", "id": "object", "class": "table_obj_name hdr", "rowspan": true, '
        '"title": "Target object of an I/O operation"},'
      '{"caption": "Backend", "id": "backend_type", "class": "table_obj_name hdr", "rowspan": true, '
        '"title": "Type of backend (see stat_activity)"},'
      '{"caption": "Context", "id": "context", "class": "table_obj_name hdr", "rowspan": true, '
        '"title": "The context of an I/O operation"},'
      '{"id": ["1", "2"], "class": "interval", "title":["properties.timePeriod1", "properties.timePeriod2"], "caption": "I"},'
      '{"caption": "Reads", "columns": ['
        '{"caption": "Count", "id": ["reads1", "reads2"], "class": "table_obj_value", '
          '"title": "Number of read operations"},'
        '{"caption": "Bytes", "id": ["read_sz1", "read_sz2"], "class": "table_obj_value", '
          '"title": "Read data amount"},'
        '{"caption": "Time", "id": ["read_time1", "read_time2"], "class": "table_obj_value", '
          '"condition": "io_times", '
          '"title": "Time spent in reading operation (seconds)"}'
     ']},'
      '{"caption": "Writes", "columns": ['
        '{"caption": "Count", "id": ["writes1", "writes2"], "class": "table_obj_value", '
          '"title": "Number of write operations"},'
        '{"caption": "Bytes", "id": ["write_sz1", "write_sz2"], "class": "table_obj_value", '
          '"title": "Written data amount"},'
        '{"caption": "Time", "id": ["write_time1", "write_time2"], "class": "table_obj_value", '
          '"condition": "io_times", '
          '"title": "Time spent in writing operations (seconds)"}'
     ']},'
      '{"caption": "Writebacks", "columns": ['
        '{"caption": "Count", "id": ["writebacks1", "writebacks2"], "class": "table_obj_value", '
          '"title": "Number of blocks which the process requested the kernel write out to permanent storage"},'
        '{"caption": "Bytes", "id": ["writeback_sz1", "writeback_sz2"], "class": "table_obj_value", '
          '"title": "The amount of data requested for write out to permanent storage"},'
        '{"caption": "Time", "id": ["writeback_time1", "writeback_time2"], "class": "table_obj_value", '
          '"condition": "io_times", '
          '"title": "Time spent in writeback operations (seconds)"}'
     ']},'
      '{"caption": "Extends", "columns": ['
        '{"caption": "Count", "id": ["extends1", "extends2"], "class": "table_obj_value", '
          '"title": "Number of relation extend operations"},'
        '{"caption": "Bytes", "id": ["extend_sz1", "extend_sz2"], "class": "table_obj_value", '
          '"title": "The amount of space used by extend operations"},'
        '{"caption": "Time", "id": ["extend_time1", "extend_time2"], "class": "table_obj_value", '
          '"condition": "io_times", '
          '"title": "Time spent in extend operations (seconds)"}'
     ']},'
     '{"caption": "Hits", "id": ["hits1", "hits2"], "class": "table_obj_value", '
       '"title": "The number of times a desired block was found in a shared buffer"},'
     '{"caption": "Evictions", "id": ["evictions1", "evictions2"], "class": "table_obj_value", '
       '"title": "Number of times a block has been written out from a shared or local buffer in order to make it available for another use"},'
     '{"caption": "Reuses", "id": ["reuses1", "reuses2"], "class": "table_obj_value", '
       '"title": "The number of times an existing buffer in a size-limited ring buffer outside of shared buffers was reused as part of an I/O operation in the bulkread, bulkwrite, or vacuum contexts"},'
      '{"caption": "Fsyncs", "columns": ['
        '{"caption": "Count", "id": ["fsyncs1", "fsyncs2"], "class": "table_obj_value", '
          '"title": "Number of fsync calls. These are only tracked in context normal"},'
        '{"caption": "Time", "id": ["fsync_time1", "fsync_time2"], "class": "table_obj_value", '
          '"condition": "io_times", '
          '"title": "Time spent in fsync operations (seconds)"}'
     ']}'
    ']'
    '}]'::jsonb),
(2, 'slrustat', 'srvstat', 358, 'Cluster SLRU statistics', 'Cluster SLRU statistics', 'stat_slru', NULL, NULL, NULL),
(2, 'slrustatrst', 'slrustat', 359, NULL, NULL, 'stat_slru_reset', NULL,
'{"class": "warning", "text": "SLRU stats reset was detected during report interval. Statistic values may be affected"}',
'[{'
    '"type": "row_table",'
    '"source": "stat_slru_reset",'
    '"columns": ['
      '{"caption": "Sample ID", "id": "sample_id", "class": "table_obj_name", '
        '"title": "Sample identifier with detected reset"},'
      '{"caption": "Name", "id": "name", "class": "table_obj_name", '
        '"title": "Name of the SLRU"},'
      '{"caption": "Reset time", "id": "stats_reset", "class": "table_obj_value", '
        '"title": "Date and time of the last reset performed in sample"}'
    ']'
    '}]'::jsonb),
(2, 'slrustatmain', 'slrustat', 360, NULL, NULL, 'stat_slru', NULL, NULL,
'[{'
    '"type": "row_table",'
    '"source": "stat_slru",'
    '"columns": ['
      '{"caption": "Name", "id": "name", "class": "table_obj_name hdr", "rowspan": true, '
        '"title": "Name of the SLRU"},'
      '{"id": ["1", "2"], "class": "interval", "title":["properties.timePeriod1", "properties.timePeriod2"], "caption": "I"},'
      '{"caption": "Zeroed", "id": ["blks_zeroed1", "blks_zeroed2"], "class": "table_obj_value", '
        '"title": "Number of blocks zeroed during initializations"},'
      '{"caption": "Hits", "id": ["blks_hit1", "blks_hit2"], "class": "table_obj_value", '
        '"title": "Number of times disk blocks were found already in the SLRU, so that a '
        'read was not necessary (this only includes hits in the SLRU, not the operating '
        'system''s file system cache)"},'
      '{"caption": "Reads", "id": ["blks_read1", "blks_read2"], "class": "table_obj_value", '
        '"title": "Number of disk blocks read for this SLRU"},'
      '{"caption": "%Hit", "id": ["hit_pct1", "hit_pct2"], "class": "table_obj_value", '
        '"title": "Number of disk blocks hits for this SLRU as a percentage of reads + hits"},'
      '{"caption": "Writes", "id": ["blks_written1", "blks_written2"], "class": "table_obj_value", '
        '"title": "Number of disk blocks written for this SLRU"},'
      '{"caption": "Checked", "id": ["blks_exists1", "blks_exists2"], "class": "table_obj_value", '
        '"title": "Number of blocks checked for existence for this SLRU (blks_exists field)"},'
      '{"caption": "Flushes", "id": ["flushes1", "flushes2"], "class": "table_obj_value", '
        '"title": "Number of flushes of dirty data for this SLRU"},'
      '{"caption": "Truncates", "id": ["truncates1", "truncates2"], "class": "table_obj_value", '
        '"title": "Number of truncates for this SLRU"}'
    ']'
    '}]'::jsonb),
(2, 'sesstat', 'srvstat', 400, 'Session statistics by database', 'Session statistics by database', 'sess_stats', NULL, NULL,
'[{'
    '"type": "row_table",'
    '"source": "dbstat", '
    '"ordering": "ord_db",'
    '"highlight": ['
      '{"id": "dbname", "index": 0}'
    '],'
    '"columns": ['
        '{"id": "dbname", "class": "table_obj_name hdr", "caption": "Database", "rowspan": true},'
        '{"id": ["1", "2"], "class": "interval", "title":["properties.timePeriod1", "properties.timePeriod2"], "caption": "I"},'
        '{"caption": "Timings (s)", "columns": ['
          '{"id": ["session_time1", "session_time2"], "class": "table_obj_value", "title": "Time spent by database sessions in this database (note that statistics are only updated when the state of a session changes, so if sessions have been idle for a long time, this idle time wont be included)", "caption": "Total"},'
          '{"id": ["active_time1", "active_time2"], "class": "table_obj_value", "title": "Time spent executing SQL statements in this database (this corresponds to the states active and fastpath function call in pg_stat_activity)", "caption": "Active"},'
          '{"id": ["idle_in_transaction_time1", "idle_in_transaction_time2"], "class": "table_obj_value", "title": "Time spent idling while in a transaction in this database (this corresponds to the states idle in transaction and idle in transaction (aborted) in pg_stat_activity)", "caption": "Idle(T)"}'
        ']},'
        '{"caption": "Sessions", "columns": ['
          '{"id": ["sessions1", "sessions2"], "class": "table_obj_value", "title": "Total number of sessions established to this database", "caption": "Established"},'
          '{"id": ["sessions_abandoned1", "sessions_abandoned2"], "class": "table_obj_value", "title": "Number of database sessions to this database that were terminated because connection to the client was lost", "caption": "Abondoned"},'
          '{"id": ["sessions_fatal1", "sessions_fatal2"], "class": "table_obj_value", "title": "Number of database sessions to this database that were terminated by fatal errors", "caption": "Fatal"},'
          '{"id": ["sessions_killed1", "sessions_killed2"], "class": "table_obj_value", "title": "Number of database sessions to this database that were terminated by operator intervention", "caption": "Killed"}'
        ']}'
    ']}]'::jsonb),
(2, 'stmtstat', 'srvstat', 500, 'Statement statistics by database', 'Statement statistics by database', 'statstatements', NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "statements_dbstats",'
    '"ordering": "ord_db",'
    '"highlight": ['
      '{"id": "dbname", "index": 0}'
    '],'
    '"columns": ['
      '{"id": "dbname", "class": "table_obj_name hdr", "caption": "Database", "rowspan": "true"}, '
      '{"id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval", "caption": "I"}, '
      '{"id": ["calls1", "calls2"], "class": "table_obj_value", "title": "Number of query executions", "caption": "Calls"}, '
      '{"caption": "Time (s)", "columns": ['
        '{"id": ["total_plan_time1", "total_plan_time2"], "class": "table_obj_value", "title": "Time spent planning queries", "caption": "Plan", "condition": "planning_times"}, '
        '{"id": ["total_exec_time1", "total_exec_time2"], "class": "table_obj_value", "title": "Time spent executing queries", "caption": "Exec"}, '
        '{"id": ["shared_blk_read_time1", "shared_blk_read_time2"], "class": "table_obj_value", "title": "Time spent reading blocks", "caption": "Read"}, '
        '{"id": ["shared_blk_write_time1", "shared_blk_write_time2"], "class": "table_obj_value", "title": "Time spent writing blocks", "caption": "Write"}, '
        '{"id": ["trg_fn_total_time1", "trg_fn_total_time2"], "class": "table_obj_value", "title": "Time spent in trigger functions", "caption": "Trg"}'
        ']}, '
      '{"caption": "Temp I/O Time", "condition": "statements_temp_io_times", "columns": ['
        '{"id": ["temp_blk_read_time1", "temp_blk_read_time2"], "class": "table_obj_value", "title": "Time spent reading temporary file blocks, in seconds", "caption": "Read"}, '
        '{"id": ["temp_blk_write_time1", "temp_blk_write_time2"], "class": "table_obj_value", "title": "Time spent writing temporary file blocks, in seconds", "caption": "Write"} '
        ']}, '
      '{"title": "Number of blocks fetched (hit + read)", "caption": "Fetched (blk)", "columns": ['
        '{"id": ["shared_gets1", "shared_gets2"], "class": "table_obj_value", "caption": "Shared"}, '
        '{"id": ["local_gets1", "local_gets2"], "class": "table_obj_value", "caption": "Local"}'
        ']}, '
      '{"title": "Number of blocks read", "caption": "Read (blk)", "columns": ['
        '{"id": ["shared_reads1", "shared_reads2"], "class": "table_obj_value", "caption": "Shared"}, '
        '{"id": ["local_reads1", "local_reads2"], "class": "table_obj_value", "caption": "Local"}'
        ']}, '
      '{"title": "Number of blocks dirtied", "caption": "Dirtied (blk)", "columns": ['
        '{"id": ["shared_blks_dirtied1", "shared_blks_dirtied2"], "class": "table_obj_value", "caption": "Shared"}, '
        '{"id": ["local_blks_dirtied1", "local_blks_dirtied2"], "class": "table_obj_value", "caption": "Local"}'
        ']}, '
      '{"title": "Number of blocks, used in operations (like sorts and joins)", "caption": "Temp (blk)", "columns": ['
        '{"id": ["temp_blks_read1", "temp_blks_read2"], "class": "table_obj_value", "caption": "Read"}, '
        '{"id": ["temp_blks_written1", "temp_blks_written2"], "class": "table_obj_value", "caption": "Write"}'
        ']}, '
      '{"title": "Number of blocks, used for temporary tables", "caption": "Local (blk)", "columns": ['
        '{"id": ["local_blks_read1", "local_blks_read2"], "class": "table_obj_value", "caption": "Read"}, '
        '{"id": ["local_blks_written1", "local_blks_written2"], "class": "table_obj_value", "caption": "Write"}'
        ']}, '
      '{"id": ["statements1", "statements2"], "class": "table_obj_value", "caption": "Statements"}, '
      '{"id": ["wal_bytes1", "wal_bytes2"], "class": "table_obj_value", "caption": "WAL size", "condition": "statement_wal_bytes"},'
      '{"id": ["wal_buffers_full1", "wal_buffers_full2"], "class": "table_obj_value", "title": "Number of times the WAL buffers became full", "caption": "WAL buffers full", "condition": "wal_buffers_full"}'
    ']}]'::jsonb),
(2, 'stmtminmax', 'srvstat', 520, 'Statement average min/max timings', 'Statement average min/max timings', 'mean_mm_times', NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "statements_dbstats",'
    '"ordering": "ord_db",'
    '"highlight": ['
      '{"id": "dbname", "index": 0}'
    '],'
    '"columns": ['
      '{"id": "dbname", "class": "table_obj_name hdr", "caption": "Database", "rowspan": "true"}, '
      '{"id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval", "caption": "I"},'
      '{"caption": "Average planning times (ms)", "condition": "planning_times", "columns": ['
          '{"id": ["mean_min_plan_time1", "mean_min_plan_time2"], "class": "table_obj_value", "title": "The average value of min_plan_time for all statements", "caption": "Min (ms.)"}, '
          '{"id": ["mean_max_plan_time1", "mean_max_plan_time2"], "class": "table_obj_value", "title": "The average value of max_plan_time for all statements", "caption": "Max (ms.)"}, '
          '{"id": ["min_max_plan_delta1", "min_max_plan_delta2"], "class": "table_obj_value", "title": "Mean max planning time to mean min planning time delta as a percentage of mean min planning time", "caption": "Delta%"} '
      ']}, '
      '{"caption": "Average execution times (ms)", "columns": ['
          '{"id": ["mean_min_exec_time1", "mean_min_exec_time2"], "class": "table_obj_value", "title": "The average value of min_exec_time for all statements", "caption": "Min (ms.)"}, '
          '{"id": ["mean_max_exec_time1", "mean_max_exec_time2"], "class": "table_obj_value", "title": "The average value of max_exec_time for all statements", "caption": "Max (ms.)"}, '
          '{"id": ["min_max_exec_delta1", "min_max_exec_delta2"], "class": "table_obj_value", "title": "Mean max exec time to mean min exec time delta as a percentage of mean min exec time", "caption": "Delta%"} '
      ']}, '
      '{"id": ["statements1", "statements2"], "class": "table_obj_value", "caption": "Statements"} '
    ']}]'::jsonb),
(2, 'dbjitstat', 'srvstat', 550, 'JIT statistics by database', 'JIT statistics by database', 'statements_jit_stats', NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "statements_dbstats",'
    '"ordering": "ord_db",'
    '"highlight": ['
      '{"id": "dbname", "index": 0}'
    '],'
    '"columns": ['
      '{"id": "dbname", "class": "table_obj_name hdr", "caption": "Database", "rowspan": "true"},'
      '{"id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval", "caption": "I"},'
      '{"id": ["calls1", "calls2"], "class": "table_obj_value", "title": "Number of query executions", "caption": "Calls"},'
      '{"caption": "Time (s)", "columns": ['
          '{"id": ["total_plan_time1", "total_plan_time2"], "class": "table_obj_value", "title": "Time spent planning queries", "caption": "Plan", "condition": "planning_times"},'
          '{"id": ["total_exec_time1", "total_exec_time2"], "class": "table_obj_value", "title": "Time spent planning queries", "caption": "Exec"}'
          ']},'
      '{"caption": "Generation", "columns": ['
          '{"id": ["jit_functions1", "jit_functions2"], "class": "table_obj_value", "title": "Total number of functions JIT-compiled by the statements", "caption": "Count"},'
          '{"id": ["jit_generation_time1", "jit_generation_time2"], "class": "table_obj_value", "title": "Time spent by the statements on generating JIT code", "caption": "Time"}'
          ']},'
      '{"caption": "Inlining", "columns": ['
          '{"id": ["jit_inlining_count1", "jit_inlining_count2"], "class": "table_obj_value", "title": "Number of times functions have been inlined", "caption": "Count"},'
          '{"id": ["jit_inlining_time1", "jit_inlining_time2"], "class": "table_obj_value", "title": "Time spent by statements on inlining functions", "caption": "Time"}'
          ']},'
      '{"caption": "Optimization", "columns": ['
          '{"id": ["jit_optimization_count1", "jit_optimization_count2"], "class": "table_obj_value", "title": "Number of times statements hasbeen optimized", "caption": "Count"},'
          '{"id": ["jit_optimization_time1", "jit_optimization_time2"], "class": "table_obj_value", "title": "Time spent by statements on optimizing", "caption": "Time"}'
          ']},'
      '{"caption": "Emission", "columns": ['
          '{"id": ["jit_emission_count1", "jit_emission_count2"], "class": "table_obj_value", "title": "Number of times code has been emitted", "caption": "Count"},'
          '{"id": ["jit_emission_time1", "jit_emission_time2"], "class": "table_obj_value", "title": "Time spent by the statement on emitting code", "caption": "Exec"} '
          ']},'
      '{"caption": "Deform", "condition": "statements_jit_deform", "columns": ['
          '{"id": ["jit_deform_count1", "jit_deform_count2"], "class": "table_obj_value", "caption": "Count", "title": "Number of tuple deform functions JIT-compiled by the statement of the database."}, '
          '{"id": ["jit_deform_time1", "jit_deform_time2"], "class": "table_obj_value", "caption": "Time", "title": "Total time spent by the statements of the databse on JIT-compiling tuple deform functions, in seconds."}'
          ']}'
      ']}]'::jsonb),
(2, 'clusthdr', 'srvstat', 700, 'Cluster statistics', 'Cluster statistics', NULL, NULL, NULL, NULL),
(2, 'clustrst', 'srvstat', 800, NULL, NULL, 'cluster_stats_reset', NULL,
  '{"class": "warning", "text": "Cluster statistics reset detected during report interval! Cluster statistics might be affected"}',
  '[{'
    '"type": "row_table",'
    '"source": "cluster_stats_reset",'
    '"columns": ['
      '{"id": "interval_num", "class": "table_obj_value", "caption": "I"},'
      '{"id": "sample_id", "class": "table_obj_value", "caption": "Sample"},'
      '{"id": "bgwriter_stats_reset", "class": "table_obj_value", "caption": "BGWriter reset time"},'
      '{"id": "checkpoint_stats_reset", "class": "table_obj_value", "caption": "Checkpointer reset time"},'
      '{"id": "archiver_stats_reset", "class": "table_obj_value", "caption": "Archiver reset time"}'
    ']}]'::jsonb),
(2, 'clust', 'srvstat', 900, NULL, NULL, NULL, NULL, NULL,
  '[{'
    '"type": "column_table", '
    '"source": "cluster_stats",'
    '"columns": ['
        '{"caption": "Metric", "class": "table_obj_name"},'
        '{"caption": "Value (1)", "title": "properties.timePeriod1", "class": "table_obj_value int1"},'
        '{"caption": "Value (2)", "title": "properties.timePeriod2", "class": "table_obj_value int2"}'
    '],'
    '"rows": ['
        '{"caption": "Scheduled checkpoints", "cells": ['
            '{"id": "checkpoints_timed1"},'
            '{"id": "checkpoints_timed2"}'
        ']}, '
        '{"caption": "Requested checkpoints", "cells": ['
            '{"id": "checkpoints_req1"},'
            '{"id": "checkpoints_req2"}'
        ']}, '
        '{"caption": "Checkpoints done", "condition": "checkpoints_done_and_slru", "cells": ['
            '{"id": "checkpoints_done1"},'
            '{"id": "checkpoints_done2"}'
        ']}, '
        '{"caption": "Checkpoint write time (s)", "cells": ['
            '{"id": "checkpoint_write_time1"},'
            '{"id": "checkpoint_write_time2"}'
        ']}, '
        '{"caption": "Checkpoint sync time (s)", "cells": ['
            '{"id": "checkpoint_sync_time1"},'
            '{"id": "checkpoint_sync_time2"}'
        ']}, '
        '{"caption": "Checkpoint buffers written", "cells": ['
            '{"id": "buffers_checkpoint1"},'
            '{"id": "buffers_checkpoint2"}'
        ']}, '
        '{"caption": "SLRU buffers written by checkpoint", "condition": "checkpoints_done_and_slru", "cells": ['
            '{"id": "slru_checkpoint1"},'
            '{"id": "slru_checkpoint2"}'
        ']}, '
        '{"caption": "Background buffers written", "cells": ['
            '{"id": "buffers_clean1"},'
            '{"id": "buffers_clean2"}'
        ']}, '
        '{"caption": "Backend buffers written", "condition": "buffers_backend", "cells": ['
            '{"id": "buffers_backend1"},'
            '{"id": "buffers_backend2"}'
        ']}, '
        '{"caption": "Backend fsync count", "condition": "buffers_backend", "cells": ['
            '{"id": "buffers_backend_fsync1"},'
            '{"id": "buffers_backend_fsync2"}'
        ']}, '
        '{"caption": "Bgwriter interrupts (too many buffers)", "cells": ['
            '{"id": "maxwritten_clean1"},'
            '{"id": "maxwritten_clean2"}'
        ']}, '
        '{"caption": "Number of buffers allocated", "cells": ['
            '{"id": "buffers_alloc1"},'
            '{"id": "buffers_alloc2"}'
        ']}, '
        '{"caption": "WAL generated", "cells": ['
            '{"id": "wal_size_pretty1"},'
            '{"id": "wal_size_pretty2"}'
        ']}, '
        '{"caption": "Start LSN", "cells": ['
            '{"id": "start_lsn1"},'
            '{"id": "start_lsn2"}'
        ']}, '
        '{"caption": "End LSN", "cells": ['
            '{"id": "end_lsn1"},'
            '{"id": "end_lsn2"}'
        ']}, '
        '{"caption": "WAL segments archived", "cells": ['
            '{"id": "archived_count1"},'
            '{"id": "archived_count2"}'
        ']}, '
        '{"caption": "WAL segments archive failed", "cells": ['
            '{"id": "failed_count1"},'
            '{"id": "failed_count2"}'
        ']}'
    ']'
    '}]'::jsonb),
(2, 'walsthdr', 'srvstat', 1000, 'WAL statistics', 'WAL statistics', 'wal_stats', NULL, NULL, NULL),
(2, 'walstrst', 'srvstat', 1100, NULL, NULL, 'wal_stats_reset', NULL,
  '{"class": "warning", "text": "WAL statistics reset detected during report interval! WAL statistics might be affected"}',
  '[{'
    '"type": "row_table",'
    '"source": "wal_stats_reset",'
    '"columns": ['
      '{"id": "interval_num", "class": "table_obj_value", "caption": "I"},'
      '{"id": "sample_id", "class": "table_obj_value", "caption": "Sample"},'
      '{"id": "wal_stats_reset", "class": "table_obj_value", "caption": "WAL stats reset time"}'
    ']}]'::jsonb),
(2, 'walst', 'srvstat', 1200, NULL, NULL, 'wal_stats', NULL, NULL,
  '[{'
    '"type": "column_table",'
    '"source": "wal_stats",'
    '"columns": ['
        '{"caption": "Metric", "class": "table_obj_name"},'
        '{"caption": "Value (1)", "title": "properties.timePeriod1", "class": "table_obj_value int1"},'
        '{"caption": "Value (2)", "title": "properties.timePeriod2", "class": "table_obj_value int2"}'
    '],'
    '"rows": ['
      '{"caption": "WAL generated", "title": "Total amount of WAL generated", "cells": ['
          '{"id": "wal_bytes1"},'
          '{"id": "wal_bytes2"}'
      ']},'
      '{"caption": "WAL per second", "title": "Average amount of WAL generated per second", "cells": ['
          '{"id": "wal_bytes_per_sec1"}, '
          '{"id": "wal_bytes_per_sec2"}'
      ']},'
      '{"caption": "WAL records", "title": "Total number of WAL records generated", "cells": ['
          '{"id": "wal_records1"},'
          '{"id": "wal_records2"}'
      ']},'
      '{"caption": "WAL FPI", "title": "Total number of WAL full page images generated", "cells": ['
          '{"id": "wal_fpi1"},'
          '{"id": "wal_fpi2"}'
      ']},'
      '{"caption": "WAL buffers full", "title": "Number of times WAL data was written to disk because WAL buffers became full", "cells": ['
          '{"id": "wal_buffers_full1"},'
          '{"id": "wal_buffers_full2"}'
      ']},'
      '{"caption": "WAL writes", "title": "Number of times WAL buffers were written out to disk via XLogWrite request", "cells": ['
          '{"id": "wal_write1"}, '
          '{"id": "wal_write2"}'
      ']},'
      '{"caption": "WAL writes per second", "title": "Average number of times WAL buffers were written out to disk via XLogWrite request per .second", "cells": ['
          '{"id": "wal_write_per_sec1"}, '
          '{"id": "wal_write_per_sec2"}'
      ']},'
      '{"caption": "WAL sync", "title": "Number of times WAL files were synced to disk via issue_xlog_fsync request (if fsync is on and wal_sync_method is either fdatasync, fsync or fsync_writethrough, otherwise zero)", "cells": ['
          '{"id": "wal_sync1"}, '
          '{"id": "wal_sync2"}'
      ']},'
      '{"caption": "WAL syncs per second", "title": "Average number of times WAL files were synced to disk via issue_xlog_fsync request per second", "cells": ['
          '{"id": "wal_sync_per_sec1"},'
          '{"id": "wal_sync_per_sec2"}'
      ']},'
      '{"caption": "WAL write time (s)", "title": "Total amount of time spent writing WAL buffers to disk via XLogWrite request, in seconds (if track_wal_io_timing is enabled, otherwise zero). This includes the sync time when wal_sync_method is either open_datasync or open_sync", "cells": ['
          '{"id": "wal_write_time1"}, '
          '{"id": "wal_write_time2"}'
      ']},'
      '{"title": "WAL write time as a percentage of the report duration time", "caption": "WAL write duty", "cells": ['
          '{"id": "wal_write_time_per_sec1"},'
          '{"id": "wal_write_time_per_sec2"}'
      ']},'
      '{"caption": "WAL sync time (s)", "title": "Total amount of time spent syncing WAL files to disk via issue_xlog_fsync request, in seconds (if track_wal_io_timing is enabled, fsync is on, and wal_sync_method is either fdatasync, fsync or fsync_writethrough, otherwise zero)", "cells": ['
          '{"id": "wal_sync_time1"},'
          '{"id": "wal_sync_time2"}'
      ']},'
      '{"caption": "WAL sync duty", "title": "WAL sync time as a percentage of the report duration time", "cells": ['
          '{"id": "wal_sync_time_per_sec1"},'
          '{"id": "wal_sync_time_per_sec2"}'
      ']}'
    ']'
  '}]'::jsonb),
(2, 'tbspst', 'srvstat', 1400, 'Tablespace statistics', 'Tablespace statistics', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "tablespace_stats",'
    '"ordering": "tablespacename",'
    '"columns": ['
      '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name hdr", "rowspan": true},'
      '{"caption": "Path", "id": "tablespacepath", "class": "table_obj_name hdr", "rowspan": true},'
      '{"caption": "I", "id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval"}, '
      '{"caption": "Size", "id": ["size1", "size2"], "class": "table_obj_value", '
      '"title": "Tablespace size as it was at the moment of last sample in report interval"},'
      '{"caption": "Growth", "id": ["size_delta1", "size_delta2"], "class": "table_obj_value", '
      '"title": "Tablespace size increment during report interval"}'
    ']'
  '}]'::jsonb),
(2, 'wait_sampling_srvstats', 'srvstat', 1500, 'Wait sampling', 'Wait sampling', 'wait_sampling_tot', NULL, NULL, NULL),
(2, 'wait_sampling_total', 'wait_sampling_srvstats', 100, 'Wait events types', 'Wait events types', 'wait_sampling_tot', NULL, NULL,
  '[{'
      '"type": "row_table", '
      '"source": "wait_sampling_total_stats",'
      '"ordering": "event_type_order",'
      '"columns": ['
          '{"id": "event_type", "class": "table_obj_name hdr", "caption": "Wait event type", "rowspan": true}, '
          '{"id": ["1", "2"], "class": "interval", "title":["properties.timePeriod1", "properties.timePeriod2"], "caption": "I"}, '
          '{"id": ["stmt_waited1", "stmt_waited2"], "class": "table_obj_value", "title": "Time, waited in events of wait event type executing statements in seconds", "caption": "Statements Waited (s)"}, '
          '{"id": ["stmt_waited_pct1", "stmt_waited_pct2"], "class": "table_obj_value", "title": "Time, waited in events of wait event type as a percentage of total time waited in a cluster executing statements", "caption": "%Total"}, '
          '{"id": ["tot_waited1", "tot_waited2"], "class": "table_obj_value", "title": "Time, waited in events of wait event type by all backends (including background activity) in seconds", "caption": "All Waited (s)"}, '
          '{"id": ["tot_waited_pct1", "tot_waited_pct2"], "class": "table_obj_value", "title": "Time, waited in events of wait event type as a percentage of total time waited in a cluster by all backends (including background activity)", "caption": "%Total"}'
      ']}]'::jsonb),
(2, 'wait_sampling_statements', 'wait_sampling_srvstats', 200, 'Top wait events (statements)', 'Top wait events (statements)', 'wait_sampling_tot', NULL, '{"class": "notice", "text": "Top wait events detected in statements execution"}',
  '[{'
    '"type": "row_table", '
    '"source": "wait_sampling_events",'
    '"filter": {"type": "exists", "field": "stmt_filter"},'
    '"ordering": "stmt_ord",'
    '"limit": "topn",'
    '"columns": ['
        '{"id": "event_type", "class": "table_obj_name hdr", "caption": "Wait event type", "rowspan": true}, '
        '{"id": "event", "class": "table_obj_name hdr", "caption": "Wait event", "rowspan": true}, '
        '{"id": ["1", "2"], "class": "interval", "title":["properties.timePeriod1", "properties.timePeriod2"], "caption": "I"}, '
        '{"id": ["stmt_waited1", "stmt_waited2"], "class": "table_obj_value", "title": "Time, waited in event executing statements in seconds", "caption": "Waited (s)"}, '
        '{"id": ["stmt_waited_pct1", "stmt_waited_pct2"], "class": "table_obj_value", "title": "Time, waited in event as a percentage of total time waited in a cluster executing statements", "caption": "%Total"}'
    ']}]'::jsonb),
(2, 'wait_sampling_all', 'wait_sampling_srvstats', 300, 'Top wait events (All)', 'Top wait events (All)', 'wait_sampling_tot', NULL, '{"class": "notice", "text": "Top wait events detected in all backends"}',
  '[{'
    '"type": "row_table", '
    '"source": "wait_sampling_events",'
    '"filter": {"type": "exists", "field": "total_filter"},'
    '"ordering": "tot_ord",'
    '"limit": "topn",'
    '"columns": ['
        '{"id": "event_type", "class": "table_obj_name hdr", "caption": "Wait event type", "rowspan": true}, '
        '{"id": "event", "class": "table_obj_name hdr", "caption": "Wait event", "rowspan": true}, '
        '{"id": ["1", "2"], "class": "interval", "title":["properties.timePeriod1", "properties.timePeriod2"], "caption": "I"}, '
        '{"id": ["tot_waited1", "tot_waited2"], "class": "table_obj_value", "title": "Time, waited in event by all backends (including background activity) in seconds", "caption": "Waited (s)"}, '
        '{"id": ["tot_waited_pct1", "tot_waited_pct2"], "class": "table_obj_value", "title": "Time, waited in event by all backends as a percentage of total time waited in a cluster by all backends (including background activity)", "caption": "%Total"}'
    ']}]'::jsonb)
;

-- Subsamples-based section of regular reports
INSERT INTO report_struct (
  report_id, sect_id, parent_sect_id, s_ord, toc_cap, tbl_cap, feature, function_name,
  content, sect_struct)
VALUES
(2, 'act_chart', 'actsesshdr', 50, 'Chart with session state', 'Chart with session state', 'act_backend', NULL,
  NULL,
'[{'
    '"type": "chart",'
    '"source": "act_top_states",'
    '"class": "act_chart"'
    '}]'::jsonb),
(2, 'db_activity_agg', 'actsesshdr', 100, 'Session state statistics by database', 'Session state statistics by database', 'act_backend', NULL,
  NULL,
'[{'
    '"type": "row_table",'
    '"source": "db_activity_agg",'
    '"ordering": "ord_db",'
    '"highlight": ['
      '{"id": "dbname", "index": 0}'
    '],'
    '"columns": ['
      '{"caption": "Database", "id": "dbname", "class": "table_obj_name hdr", "rowspan": "true"},'
      '{"id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval", "caption": "I"}, '
      '{"caption": "Summary", "columns": ['
        '{"caption": "Active", "id": ["active_dur1", "active_dur2"], "class": "table_obj_value", '
          '"title": "Summary time in ''active'' state"},'
        '{"caption": "Idle in xact", "id": ["idle_xact_dur1", "idle_xact_dur2"], "class": "table_obj_value", '
          '"title": "Summary time in ''idle in transaction'' state"},'
        '{"caption": "Idle in xact (A)", "id": ["idle_xact_a_dur1", "idle_xact_a_dur2"], "class": "table_obj_value", '
          '"title": "Summary time in ''idle in transaction (aborted)'' state"}'
     ']},'
      '{"caption": "Maximal", "columns": ['
        '{"caption": "Active", "id": ["max_active_dur1", "max_active_dur2"], "class": "table_obj_value", '
          '"title": "Longest detected ''active'' state"},'
        '{"caption": "Idle in xact", "id": ["max_idle_xact_d1", "max_idle_xact_d2"], "class": "table_obj_value", '
          '"title": "Longest detected ''idle in xact'' state"},'
        '{"caption": "Idle in xact (A)", "id": ["max_idle_xact_a_d1", "max_idle_xact_a_d2"], "class": "table_obj_value", '
          '"title": "Longest detected ''idle in transaction (aborted)'' state"},'
        '{"caption": "xact age", "id": ["max_xact_age1", "max_xact_age2"], "class": "table_obj_value", '
          '"title": "Maximal detected backend_xid age"}'
     ']}'
    ']'
    '}]'::jsonb),
(2, 'act_ix', 'actsesshdr', 200, 'Top ''idle in transaction'' states', 'Top ''idle in transaction'' session states by duration', 'act_ix', NULL,
  NULL,
'[{'
    '"type": "row_table",'
    '"source": "act_top_states",'
    '"ordering": "ord_dur",'
    '"limit": "topn",'
    '"highlight": ['
      '{"id": "pid", "index": 0},'
      '{"id": "state_change", "index": 0}'
    '],'
    '"preview": ['
      '{"id": "act_query_md5", "dataset": "act_queries"}'
    '],'
    '"scroll": ['
      '"pid", "xact_start_ut", "state_change_ut"'
    '],'
    '"filter": {"type": "equal", "field": "flt_state_code", "value": 1},'
    '"columns": ['
      '{"caption": "Database", "id": "dbname", "class": "table_obj_name"},'
      '{"caption": "User", "id": "username", "class": "table_obj_name"},'
      '{"caption": "App", "id": "application_name", "class": "table_obj_name", '
        '"title": "application_name"},'
      '{"caption": "Addr", "id": "client_addr", "class": "table_obj_name", '
        '"title": "client_addr"},'
      '{"caption": "Pid", "id": "pid", "class": "table_obj_name"},'
      '{"caption": "Xact start", "id": "xact_start_format", "class": "table_obj_value"},'
      '{"caption": "State change", "id": "state_change_format", "class": "table_obj_value"},'
      '{"caption": "State duration", "id": "state_duration_format", "class": "table_obj_value"}'
    ']}]'::jsonb),
(2, 'act_ixa', 'actsesshdr', 300, 'Top ''idle in transaction (aborted)'' states', 'Top ''idle in transaction (aborted)'' session states by duration', 'act_ixa', NULL,
  NULL,
'[{'
    '"type": "row_table",'
    '"source": "act_top_states",'
    '"ordering": "ord_dur",'
    '"limit": "topn",'
    '"highlight": ['
      '{"id": "pid", "index": 0},'
      '{"id": "state_change", "index": 0}'
    '],'
    '"preview": ['
      '{"id": "act_query_md5", "dataset": "act_queries"}'
    '],'
    '"scroll": ['
      '"pid", "xact_start_ut", "state_change_ut"'
    '],'
    '"filter": {"type": "equal", "field": "flt_state_code", "value": 2},'
    '"columns": ['
      '{"caption": "Database", "id": "dbname", "class": "table_obj_name"},'
      '{"caption": "User", "id": "username", "class": "table_obj_name"},'
      '{"caption": "App", "id": "application_name", "class": "table_obj_name", '
        '"title": "application_name"},'
      '{"caption": "Addr", "id": "client_addr", "class": "table_obj_name", '
        '"title": "client_addr"},'
      '{"caption": "Pid", "id": "pid", "class": "table_obj_name"},'
      '{"caption": "State change", "id": "state_change_format", "class": "table_obj_value"},'
      '{"caption": "State duration", "id": "state_duration_format", "class": "table_obj_value"}'
    ']}]'::jsonb),
(2, 'act_active', 'actsesshdr', 400, 'Top ''active'' states', 'Top ''active'' session states by duration', 'act_active', NULL,
  NULL,
'[{'
    '"type": "row_table",'
    '"source": "act_top_states",'
    '"ordering": "ord_dur",'
    '"limit": "topn",'
    '"highlight": ['
      '{"id": "pid", "index": 0},'
      '{"id": "state_change", "index": 0}'
    '],'
    '"preview": ['
      '{"id": "act_query_md5", "dataset": "act_queries"}'
    '],'
    '"scroll": ['
      '"pid", "xact_start_ut", "state_change_ut"'
    '],'
    '"filter": {"type": "equal", "field": "flt_state_code", "value": 3},'
    '"columns": ['
      '{"caption": "Database", "id": "dbname", "class": "table_obj_name"},'
      '{"caption": "User", "id": "username", "class": "table_obj_name"},'
      '{"caption": "App", "id": "application_name", "class": "table_obj_name", '
        '"title": "application_name"},'
      '{"caption": "Addr", "id": "client_addr", "class": "table_obj_name", '
        '"title": "client_addr"},'
      '{"caption": "Pid", "id": "pid", "class": "table_obj_name"},'
      '{"caption": "Xact start", "id": "xact_start_format", "class": "table_obj_value"},'
      '{"caption": "State change", "id": "state_change_format", "class": "table_obj_value"},'
      '{"caption": "State duration", "id": "state_duration_format", "class": "table_obj_value"}'
    ']}]'::jsonb),
(2, 'act_age', 'actsesshdr', 500, 'Top states by transaction age', 'Top states by transaction age', 'act_backend', NULL,
  NULL,
'[{'
    '"type": "row_table",'
    '"source": "act_top_states",'
    '"ordering": "ord_age",'
    '"limit": "topn",'
    '"highlight": ['
      '{"id": "pid", "index": 0},'
      '{"id": "state_change", "index": 0}'
    '],'
    '"preview": ['
      '{"id": "act_query_md5", "dataset": "act_queries"}'
    '],'
    '"scroll": ['
      '"pid", "xact_start_ut", "state_change_ut"'
    '],'
    '"filter": {"type": "equal", "field": "flt_age", "value": true},'
    '"columns": ['
      '{"caption": "Database", "id": "dbname", "class": "table_obj_name"},'
      '{"caption": "User", "id": "username", "class": "table_obj_name"},'
      '{"caption": "App", "id": "application_name", "class": "table_obj_name", '
        '"title": "application_name"},'
      '{"caption": "Addr", "id": "client_addr", "class": "table_obj_name", '
        '"title": "client_addr"},'
      '{"caption": "Pid", "id": "pid", "class": "table_obj_name"},'
      '{"caption": "Xact start", "id": "xact_start_format", "class": "table_obj_value"},'
      '{"caption": "Xact duration", "id": "xact_duration_format", "class": "table_obj_value"},'
      '{"caption": "Age", "id": "xmin_age", "class": "table_obj_value", '
        '"title": "Last detected age of backend_xmin"},'
      '{"caption": "State", "id": "state", "class": "table_obj_value"},'
      '{"caption": "State change", "id": "state_change_format", "class": "table_obj_value"},'
      '{"caption": "State duration", "id": "state_duration_format", "class": "table_obj_value"}'
    ']}]'::jsonb),
(2, 'act_xact_dur', 'actsesshdr', 600, 'Top states by transaction duration', 'Top states by transaction duration', 'act_backend', NULL,
  NULL,
'[{'
    '"type": "row_table",'
    '"source": "act_top_states",'
    '"ordering": "ord_xact",'
    '"limit": "topn",'
    '"highlight": ['
      '{"id": "pid", "index": 0},'
      '{"id": "state_change", "index": 0}'
    '],'
    '"preview": ['
      '{"id": "act_query_md5", "dataset": "act_queries"}'
    '],'
    '"scroll": ['
      '"pid", "xact_start_ut", "state_change_ut"'
    '],'
    '"filter": {"type": "equal", "field": "flt_age", "value": true},'
    '"columns": ['
      '{"caption": "Database", "id": "dbname", "class": "table_obj_name"},'
      '{"caption": "User", "id": "username", "class": "table_obj_name"},'
      '{"caption": "App", "id": "application_name", "class": "table_obj_name", '
        '"title": "application_name"},'
      '{"caption": "Addr", "id": "client_addr", "class": "table_obj_name", '
        '"title": "client_addr"},'
      '{"caption": "Pid", "id": "pid", "class": "table_obj_name"},'
      '{"caption": "Xact start", "id": "xact_start_format", "class": "table_obj_value"},'
      '{"caption": "Xact duration", "id": "xact_duration_format", "class": "table_obj_value"},'
      '{"caption": "Age", "id": "xmin_age", "class": "table_obj_value", '
        '"title": "Last detected age of backend_xmin"},'
      '{"caption": "State", "id": "state", "class": "table_obj_value"},'
      '{"caption": "State change", "id": "state_change_format", "class": "table_obj_value"},'
      '{"caption": "State duration", "id": "state_duration_format", "class": "table_obj_value"}'
    ']}]'::jsonb)
;

-- Query section of differential report
INSERT INTO report_struct (
  report_id, sect_id, parent_sect_id, s_ord, toc_cap, tbl_cap, feature, function_name,
  content, sect_struct)
VALUES
(2, 'sqlela', 'sqlsthdr', 100, 'Top SQL by elapsed time', 'Top SQL by elapsed time', 'planning_times', NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"ordering": "ord_total_time",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"filter": {"type": "exists", "field": "ord_total_time"},'
    '"limit": "topn",'
    '"columns": ['
        '{"id": "hexqueryid", "class": "hdr table_obj_name queryId", "caption": "Query ID", "rowspan": true}, '
        '{"id": "dbname", "class": "table_obj_name hdr", "caption": "Database", "rowspan": true}, '
        '{"id": "username", "class": "table_obj_name hdr", "caption": "User", "rowspan": true}, '
        '{"id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval", "caption": "I"}, '
        '{"id": ["total_time_pct1", "total_time_pct2"], "class": "table_obj_value", "title": "Elapsed time as a percentage of total cluster elapsed time", "caption": "%Total"}, '
        '{"caption": "Time (s)", "columns": ['
            '{"id": ["total_time1", "total_time2"], "class": "table_obj_value", "title": "Time spent by the statement", "caption": "Elapsed"}, '
            '{"id": ["total_plan_time1", "total_plan_time2"], "class": "table_obj_value", "title": "Time spent planning statement", "caption": "Plan"}, '
            '{"id": ["total_exec_time1", "total_exec_time2"], "class": "table_obj_value", "title": "Time spent executing statement", "caption": "Exec"}'
            ']}, '
        '{"id": ["jit_total_time1", "jit_total_time2"], "class": "jitTimeCell", "caption": "JIT, time (s)", "condition": "statements_jit_stats"}, '
        '{"class": "table_obj_name", "caption": "I/O time (s)", "condition": "io_times", "columns": ['
            '{"id": ["shared_blk_read_time1", "shared_blk_read_time2"], "class": "table_obj_value", "title": "Time spent reading blocks by statement", "caption": "Read"}, '
            '{"id": ["shared_blk_write_time1", "shared_blk_write_time2"], "class": "table_obj_value", "title": "Time spent writing blocks by statement", "caption": "Write"}'
            ']}, '
        '{"class": "table_obj_name", "caption": "CPU time (s)", "condition": "kcachestatements", "columns": ['
            '{"id": ["user_time1", "user_time2"], "class": "table_obj_value", "caption": "Usr"}, '
            '{"id": ["system_time1", "system_time2"], "class": "table_obj_value", "caption": "Sys"}'
            ']}, '
        '{"id": ["plans1", "plans2"], "class": "table_obj_value", "caption": "Plans", "title": "Number of times the statement was planned"}, '
        '{"id": ["calls1", "calls2"], "class": "table_obj_value", "caption": "Executions", "title": "Number of times the statement was executed"}, '
        '{"id": ["stmt_cover1", "stmt_cover2"], "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']'
  '}]'::jsonb),
(2, 'sqlplan', 'sqlsthdr', 200, 'Top SQL by planning time', 'Top SQL by planning time', 'planning_times', NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"ordering": "ord_plan_time",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"filter": {"type": "exists", "field": "ord_plan_time"},'
    '"limit": "topn",'
    '"columns": ['
        '{"id": "hexqueryid", "class": "hdr table_obj_name queryId", "caption": "Query ID", "rowspan": true}, '
        '{"id": "dbname", "class": "table_obj_name hdr", "caption": "Database", "rowspan": true}, '
        '{"id": "username", "class": "table_obj_name hdr", "caption": "User", "rowspan": true}, '
        '{"id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval", "caption": "I"}, '
        '{"id": ["total_plan_time1", "total_plan_time2"], "class": "table_obj_value", "title": "Time spent planning statement", "caption": "Plan elapsed (s)"}, '
        '{"id": ["plan_time_pct1", "plan_time_pct2"], "class": "table_obj_value", "title": "Plan elapsed as a percentage of statement elapsed time", "caption": "%Elapsed"}, '
        '{"title": "Planning time statistics", "caption": "Plan times (ms)", "columns": ['
            '{"id": ["mean_plan_time1", "mean_plan_time2"], "class": "table_obj_value", "caption": "Mean"}, '
            '{"id": ["min_plan_time1", "min_plan_time2"], "class": "table_obj_value", "caption": "Min"}, '
            '{"id": ["max_plan_time1", "max_plan_time2"], "class": "table_obj_value", "caption": "Max"}, '
            '{"id": ["stddev_plan_time1", "stddev_plan_time2"], "class": "table_obj_value", "caption": "StdErr"}'
        ']}, '
        '{"id": ["plans1", "plans2"], "class": "table_obj_value", "title": "Number of times the statement was planned", "caption": "Plans"}, '
        '{"id": ["calls1", "calls2"], "class": "table_obj_value", "title": "Number of times the statement was executed", "caption": "Executions"}, '
        '{"id": ["stmt_cover1", "stmt_cover2"], "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']'
  '}]'::jsonb),
(2, 'sqlexec', 'sqlsthdr', 300, 'Top SQL by execution time', 'Top SQL by execution time', NULL, NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"ordering": "ord_exec_time",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"filter": {"type": "exists", "field": "ord_exec_time"},'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "caption": "Query ID", "class": "hdr table_obj_name queryId", "rowspan": true}, '
      '{"id": "dbname", "class": "table_obj_name hdr", "caption": "Database", "rowspan": true}, '
      '{"id": "username", "class": "table_obj_name hdr", "caption": "User", "rowspan": true}, '
      '{"id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval", "caption": "I"}, '
      '{"id": ["total_exec_time1", "total_exec_time2"], "class": "table_obj_value", "title": "Time spent executing statement", "caption": "Exec (s)"}, '
      '{"id": ["exec_time_pct1", "exec_time_pct2"], "class": "table_obj_value", "title": "Exec time as a percentage of statement elapsed time", "caption": "%Elapsed", "condition": "planning_times"}, '
      '{"id": ["total_exec_time_pct1", "total_exec_time_pct2"], "class": "table_obj_value", "title": "Exec time as a percentage of total cluster elapsed time", "caption": "%Total"}, '
      '{"id": ["jit_total_time1", "jit_total_time2"], "class": "jitTimeCell", "title": "Exec time as a percentage of statement elapsed time", "caption": "JIT time (s)", "condition": "statements_jit_stats"}, '
      '{"caption": "I/O time (s)", "condition": "io_times", "columns": ['
          '{"id": ["shared_blk_read_time1", "shared_blk_read_time2"], "class": "table_obj_value", "caption": "Read"}, '
          '{"id": ["shared_blk_write_time1", "shared_blk_write_time2"], "class": "table_obj_value", "caption": "Write"}'
      ']}, '
      '{"caption": "CPU time (s)", "condition": "kcachestatements", "columns": ['
          '{"id": ["user_time1", "user_time2"], "class": "table_obj_value", "caption": "Usr"}, '
          '{"id": ["system_time1", "system_time2"], "class": "table_obj_value", "caption": "Sys"}'
      ']}, '
      '{"id": ["rows1", "rows2"], "class": "table_obj_value", "caption": "Rows"}, '
      '{"title": "Execution time statistics", "caption": "Execution times (ms)", "columns": ['
          '{"id": ["mean_exec_time1", "mean_exec_time2"], "class": "table_obj_value", "caption": "Mean"}, '
          '{"id": ["min_exec_time1", "min_exec_time2"], "class": "table_obj_value", "caption": "Min"}, '
          '{"id": ["max_exec_time1", "max_exec_time2"], "class": "table_obj_value", "caption": "Max"}, '
          '{"id": ["stddev_exec_time1", "stddev_exec_time2"], "class": "table_obj_value", "caption": "StdErr"}'
      ']}, '
      '{"id": ["calls1", "calls2"], "title": "Number of times the statement was executed", "caption": "Executions", "class": "table_obj_value"}, '
      '{"id": ["stmt_cover1", "stmt_cover2"], "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']'
  '}]'::jsonb),
(2, 'sqlmeanexec', 'sqlsthdr', 350, 'Top SQL by mean time', 'Top SQL by mean execution time', NULL, NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"ordering": "ord_mean_exec_time",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"filter": {"type": "exists", "field": "ord_exec_time"},'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "caption": "Query ID", "class": "hdr table_obj_name queryId", "rowspan": true}, '
      '{"id": "dbname", "class": "table_obj_name hdr", "caption": "Database", "rowspan": true}, '
      '{"id": "username", "class": "table_obj_name hdr", "caption": "User", "rowspan": true}, '
      '{"id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval", "caption": "I"}, '
      '{"title": "Execution time statistics", "caption": "Execution times (ms)", "columns": ['
          '{"id": ["mean_exec_time1", "mean_exec_time2"], "class": "table_obj_value", "caption": "Mean"}, '
          '{"id": ["min_exec_time1", "min_exec_time2"], "class": "table_obj_value", "caption": "Min"}, '
          '{"id": ["max_exec_time1", "max_exec_time2"], "class": "table_obj_value", "caption": "Max"}, '
          '{"id": ["stddev_exec_time1", "stddev_exec_time2"], "class": "table_obj_value", "caption": "StdErr"}'
      ']}, '
      '{"id": ["total_exec_time1", "total_exec_time2"], "class": "table_obj_value", "title": "Time spent executing statement", "caption": "Exec (s)"}, '
      '{"id": ["exec_time_pct1", "exec_time_pct2"], "class": "table_obj_value", "title": "Exec time as a percentage of statement elapsed time", "caption": "%Elapsed", "condition": "planning_times"}, '
      '{"id": ["total_exec_time_pct1", "total_exec_time_pct2"], "class": "table_obj_value", "title": "Exec time as a percentage of total cluster elapsed time", "caption": "%Total"}, '
      '{"id": ["jit_total_time1", "jit_total_time2"], "class": "jitTimeCell", "title": "Exec time as a percentage of statement elapsed time", "caption": "JIT time (s)", "condition": "statements_jit_stats"}, '
      '{"caption": "I/O time (s)", "condition": "io_times", "columns": ['
          '{"id": ["shared_blk_read_time1", "shared_blk_read_time2"], "class": "table_obj_value", "caption": "Read"}, '
          '{"id": ["shared_blk_write_time1", "shared_blk_write_time2"], "class": "table_obj_value", "caption": "Write"}'
      ']}, '
      '{"caption": "CPU time (s)", "condition": "kcachestatements", "columns": ['
          '{"id": ["user_time1", "user_time2"], "class": "table_obj_value", "caption": "Usr"}, '
          '{"id": ["system_time1", "system_time2"], "class": "table_obj_value", "caption": "Sys"}'
      ']}, '
      '{"id": ["rows1", "rows2"], "class": "table_obj_value", "caption": "Rows"}, '
      '{"id": ["calls1", "calls2"], "title": "Number of times the statement was executed", "caption": "Executions", "class": "table_obj_value"}, '
      '{"id": ["stmt_cover1", "stmt_cover2"], "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']'
  '}]'::jsonb),
(2, 'sqlcalls', 'sqlsthdr', 400, 'Top SQL by executions', 'Top SQL by executions', NULL, NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"ordering": "ord_calls",'
    '"filter": {"type": "exists", "field": "ord_calls"},'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "hdr table_obj_name queryId", "caption": "Query ID", "rowspan": true}, '
      '{"id": "dbname", "class": "table_obj_name hdr", "caption": "Database", "rowspan": true}, '
      '{"id": "username", "class": "table_obj_name hdr", "caption": "User", "rowspan": true}, '
      '{"id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval", "caption": "I"}, '
      '{"id": ["calls1", "calls2"], "class": "table_obj_value", "title": "Number of times the statement was executed", "caption": "Executions"}, '
      '{"id": ["calls_pct1", "calls_pct2"], "class": "table_obj_value", "title": "Executions of this statement as a percentage of total executions of all statements in a cluster", "caption": "%Total"}, '
      '{"id": ["rows1", "rows2"], "class": "table_obj_value", "title": "Total number of rows retrieved or affected by the statement", "caption": "Rows"}, '
      '{"id": ["mean_exec_time1", "mean_exec_time2"], "class": "table_obj_value", "caption": "Mean(ms)"}, '
      '{"id": ["min_exec_time1", "min_exec_time2"], "class": "table_obj_value", "caption": "Min(ms)"}, '
      '{"id": ["max_exec_time1", "max_exec_time2"], "class": "table_obj_value", "caption": "Max(ms)"}, '
      '{"id": ["stddev_exec_time1", "stddev_exec_time2"], "class": "table_obj_value", "caption": "StdErr(ms)"}, '
      '{"id": ["total_exec_time1", "total_exec_time2"], "class": "table_obj_value", "title": "Time spent by the statement", "caption": "Elapsed(s)"}, '
      '{"id": ["stmt_cover1", "stmt_cover2"], "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']'
  '}]'::jsonb),
(2, 'sqlio', 'sqlsthdr', 500, 'Top SQL by I/O wait time', 'Top SQL by I/O wait time', 'io_times', NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"ordering": "ord_io_time",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"filter": {"type": "exists", "field": "ord_io_time"},'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "hdr table_obj_name queryId", "caption": "Query ID", "rowspan": true}, '
      '{"id": "dbname", "class": "table_obj_name hdr", "caption": "Database", "rowspan": true}, '
      '{"id": "username", "class": "table_obj_name hdr", "caption": "User", "rowspan": true}, '
      '{"id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval", "caption": "I"}, '
      '{"id": ["io_time1", "io_time2"], "class": "table_obj_value", "title": "Time spent by the statement reading and writing blocks", "caption": "IO(s)"}, '
      '{"id": ["shared_blk_read_time1", "shared_blk_read_time2"], "class": "table_obj_value", "title": "Time spent by the statement reading blocks", "caption": "R(s)"}, '
      '{"id": ["shared_blk_write_time1", "shared_blk_write_time2"], "class": "table_obj_value", "title": "Time spent by the statement writing blocks", "caption": "W(s)"}, '
      '{"id": ["io_time_pct1", "io_time_pct2"], "class": "table_obj_value", "title": "I/O time of this statement as a percentage of total I/O time for all statements in a cluster", "caption": "%Total"}, '
      '{"title": "Number of blocks read by the statement", "caption": "Reads", "columns": ['
          '{"id": ["shared_blks_read1", "shared_blks_read2"], "title": "Number of shared blocks read by the statement", "caption": "Shr", "class": "table_obj_value"}, '
          '{"id": ["local_blks_read1", "local_blks_read2"], "title": "Number of local blocks read by the statement (usually used for temporary tables)", "caption": "Loc", "class": "table_obj_value"}, '
          '{"id": ["temp_blks_read1", "temp_blks_read2"], "title": "Number of temp blocks read by the statement (usually used for operations like sorts and joins)", "caption": "Tmp", "class": "table_obj_value"}'
      ']}, '
      '{"title": "Number of blocks written by the statement", "caption": "Writes", "columns": ['
          '{"id": ["shared_blks_written1", "shared_blks_written2"], "title": "Number of shared blocks written by the statement", "caption": "Shr", "class": "table_obj_value"}, '
          '{"id": ["local_blks_written1", "local_blks_written2"], "title": "Number of local blocks written by the statement (usually used for temporary tables)", "caption": "Loc", "class": "table_obj_value"}, '
          '{"id": ["temp_blks_written1", "temp_blks_written2"], "title": "Number of temp blocks written by the statement (usually used for operations like sorts and joins)", "caption": "Tmp", "class": "table_obj_value"}'
      ']}, '
      '{"id": ["total_time1", "total_time2"], "class": "table_obj_value", "title": "Time spent by the statement", "caption": "Elapsed(s)"}, '
      '{"id": ["calls1", "calls2"], "class": "table_obj_value", "title": "Number of blocks written by the statement", "caption": "Executions"}, '
      '{"id": ["stmt_cover1", "stmt_cover2"], "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']'
  '}]'::jsonb),
(2, 'sqlfetch', 'sqlsthdr', 600, 'Top SQL by shared blocks fetched', 'Top SQL by shared blocks fetched', NULL, NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"ordering": "ord_shared_blocks_fetched",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"filter": {"type": "exists", "field": "ord_shared_blocks_fetched"},'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "hdr table_obj_name queryId", "caption": "Query ID", "rowspan": true}, '
      '{"id": "dbname", "class": "table_obj_name hdr", "caption": "Database", "rowspan": true}, '
      '{"id": "username", "class": "table_obj_name hdr", "caption": "User", "rowspan": true}, '
      '{"id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval", "caption": "I"}, '
      '{"id": ["shared_blks_fetched1", "shared_blks_fetched2"], "class": "table_obj_value", "title": "Shared blocks fetched (read and hit) by the statement", "caption": "blks fetched"}, '
      '{"id": ["shared_blks_fetched_pct1", "shared_blks_fetched_pct2"], "class": "table_obj_value", "title": "Shared blocks fetched by this statement as a percentage of all shared blocks fetched in a cluster", "caption": "%Total"}, '
      '{"id": ["shared_hit_pct1", "shared_hit_pct2"], "class": "table_obj_value", "title": "Shared blocks hits as a percentage of shared blocks fetched (read + hit)", "caption": "Hits(%)"}, '
      '{"id": ["total_time1", "total_time2"], "class": "table_obj_value", "title": "Time spent by the statement", "caption": "Elapsed(s)"}, '
      '{"id": ["rows1", "rows2"], "class": "table_obj_value", "title": "Total number of rows retrieved or affected by the statement", "caption": "Rows"}, '
      '{"id": ["calls1", "calls2"], "class": "table_obj_value", "title": "Number of times the statement was executed", "caption": "Executions"}, '
      '{"id": ["stmt_cover1", "stmt_cover2"], "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']}]'::jsonb),
(2, 'sqlshrd', 'sqlsthdr', 700, 'Top SQL by shared blocks read', 'Top SQL by shared blocks read', NULL, NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"filter": {"type": "exists", "field": "ord_shared_blocks_read"},'
    '"ordering": "ord_shared_blocks_read",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "hdr table_obj_name queryId", "caption": "Query ID", "rowspan": true}, '
      '{"id": "dbname", "class": "table_obj_name hdr", "caption": "Database", "rowspan": true}, '
      '{"id": "username", "class": "table_obj_name hdr", "caption": "User", "rowspan": true}, '
      '{"id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval", "caption": "I"}, '
      '{"id": ["shared_blks_read1", "shared_blks_read2"], "class": "table_obj_value", "title": "Total number of shared blocks read by the statement", "caption": "Reads"}, '
      '{"id": ["read_pct1", "read_pct2"], "class": "table_obj_value", "title": "Shared blocks read by this statement as a percentage of all shared blocks read in a cluster", "caption": "%Total"}, '
      '{"id": ["shared_hit_pct1", "shared_hit_pct2"], "class": "table_obj_value", "title": "Shared blocks hits as a percentage of shared blocks fetched (read + hit)", "caption": "Hits(%)"}, '
      '{"id": ["total_time1", "total_time2"], "class": "table_obj_value", "title": "Time spent by the statement", "caption": "Elapsed(s)"}, '
      '{"id": ["rows1", "rows2"], "class": "table_obj_value", "title": "Total number of rows retrieved or affected by the statement", "caption": "Rows"}, '
      '{"id": ["calls1", "calls2"], "class": "table_obj_value", "title": "Number of times the statement was executed", "caption": "Executions"}, '
      '{"id": ["stmt_cover1", "stmt_cover2"], "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']'
  '}]'::jsonb),
(2, 'sqlshdir', 'sqlsthdr', 800, 'Top SQL by shared blocks dirtied', 'Top SQL by shared blocks dirtied', NULL, NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"filter": {"type": "exists", "field": "ord_shared_blocks_dirt"},'
    '"ordering": "ord_shared_blocks_dirt",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "hdr table_obj_name queryId", "caption": "Query ID", "rowspan": true}, '
      '{"id": "dbname", "class": "table_obj_name hdr", "caption": "Database", "rowspan": true}, '
      '{"id": "username", "class": "table_obj_name hdr", "caption": "User", "rowspan": true}, '
      '{"id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"],  "class": "interval", "caption": "I"}, '
      '{"id": ["shared_blks_dirtied1", "shared_blks_dirtied2"], "class": "table_obj_value", "title": "Total number of shared blocks dirtied by the statement", "caption": "Dirtied"}, '
      '{"id": ["dirtied_pct1", "dirtied_pct2"], "class": "table_obj_value", "title": "Shared blocks dirtied by this statement as a percentage of all shared blocks dirtied in a cluster", "caption": "%Total"}, '
      '{"id": ["shared_blks_hit1", "shared_blks_hit2"], "class": "table_obj_value", "title": "Total number of shared blocks dirtied by the statement", "caption": "Hits"}, '
      '{"id": ["shared_hit_pct1", "shared_hit_pct2"], "class": "table_obj_value", "title": "Shared blocks hits as a percentage of shared blocks fetched (read + hit)", "caption": "%Total"}, '
      '{"id": ["wal_bytes1", "wal_bytes2"], "class": "table_obj_value", "title": "Total amount of WAL bytes generated by the statement", "caption": "WAL", "condition": "statement_wal_bytes"}, '
      '{"id": ["wal_bytes_pct1", "wal_bytes_pct2"], "class": "table_obj_value", "title": "WAL bytes of this statement as a percentage of total WAL bytes generated by a cluster", "caption": "%Total", "condition": "statement_wal_bytes"}, '
      '{"id": ["total_time1", "total_time2"], "class": "table_obj_value", "title": "Time spent by the statement", "caption": "Elapsed(s)"}, '
      '{"id": ["rows1", "rows2"], "class": "table_obj_value", "title": "Total number of rows retrieved or affected by the statement", "caption": "Rows"}, '
      '{"id": ["calls1", "calls2"], "class": "table_obj_value", "title": "Number of times the statement was executed", "caption": "Executions"}, '
      '{"id": ["stmt_cover1", "stmt_cover2"], "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']'
  '}]'::jsonb),
(2, 'sqlshwr', 'sqlsthdr', 900, 'Top SQL by shared blocks written', 'Top SQL by shared blocks written', NULL, NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"filter": {"type": "exists", "field": "ord_shared_blocks_written"},'
    '"ordering": "ord_shared_blocks_written",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "hdr table_obj_name queryId", "caption": "Query ID", "rowspan": true}, '
      '{"id": "dbname", "class": "table_obj_name hdr", "caption": "Database", "rowspan": true}, '
      '{"id": "username", "class": "table_obj_name hdr", "caption": "User", "rowspan": true}, '
      '{"id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"],  "class": "interval", "caption": "I"}, '
      '{"id": ["shared_blks_written1", "shared_blks_written2"], "class": "table_obj_value", "title": "Total number of shared blocks written by the statement", "caption": "Written"}, '
      '{"id": ["tot_written_pct1", "tot_written_pct2"], "class": "table_obj_value", "title": "Shared blocks written by this statement as a percentage of all shared blocks written in a cluster (sum of pg_stat_bgwriter fields buffers_checkpoint, buffers_clean and buffers_backend)", "caption": "%Total"}, '
      '{"id": ["backend_written_pct1", "backend_written_pct2"], "class": "table_obj_value", "title": "Shared blocks written by this statement as a percentage total buffers written directly by a backends (buffers_backend of pg_stat_bgwriter view)", "caption": "%BackendW"}, '
      '{"id": ["shared_hit_pct1", "shared_hit_pct2"], "class": "table_obj_value", "title": "Shared blocks hits as a percentage of shared blocks fetched (read + hit)", "caption": "Hits(%)"}, '
      '{"id": ["total_time1", "total_time2"], "class": "table_obj_value", "title": "Time spent by the statement", "caption": "Elapsed(s)"}, '
      '{"id": ["rows1", "rows2"], "class": "table_obj_value", "title": "Total number of rows retrieved or affected by the statement", "caption": "Rows"}, '
      '{"id": ["calls1", "calls2"], "class": "table_obj_value", "title": "Number of times the statement was executed", "caption": "Executions"}, '
      '{"id": ["stmt_cover1", "stmt_cover2"], "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']'
  '}]'::jsonb),
(2, 'sqlwalsz', 'sqlsthdr', 1000, 'Top SQL by WAL size', 'Top SQL by WAL size', 'statement_wal_bytes', NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"filter": {"type": "exists", "field": "ord_wal"},'
    '"ordering": "ord_wal",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "hdr table_obj_name queryId", "caption": "Query ID", "rowspan": true}, '
      '{"id": "dbname", "class": "table_obj_name hdr", "caption": "Database", "rowspan": true}, '
      '{"id": "username", "class": "table_obj_name hdr", "caption": "User", "rowspan": true}, '
      '{"id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"],  "class": "interval", "caption": "I"}, '
      '{"id": ["wal_bytes1", "wal_bytes2"], "class": "table_obj_value", "title": "Total amount of WAL bytes generated by the statement", "caption": "WAL"}, '
      '{"id": ["wal_bytes_pct1", "wal_bytes_pct2"], "class": "table_obj_value", "title": "WAL bytes of this statement as a percentage of total WAL bytes generated by a cluster", "caption": "%Total"}, '
      '{"id": ["wal_buffers_full1", "wal_buffers_full2"], "class": "table_obj_value", "title": "Number of times the WAL buffers became full", "caption": "WAL buffers full", "condition": "wal_buffers_full"}, '
      '{"id": ["shared_blks_dirtied1", "shared_blks_dirtied2"], "class": "table_obj_value", "title": "Total number of shared blocks dirtied by the statement", "caption": "Dirtied"}, '
      '{"id": ["wal_fpi1", "wal_fpi2"], "class": "table_obj_value", "title": "Total number of WAL full page images generated by the statement", "caption": "WAL FPI"}, '
      '{"id": ["wal_records1", "wal_records2"], "class": "table_obj_value", "title": "Total number of WAL records generated by the statement", "caption": "WAL records"}, '
      '{"id": ["stmt_cover1", "stmt_cover2"], "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']'
  '}]'::jsonb),
(2, 'sqltmp', 'sqlsthdr', 1100, 'Top SQL by temp usage', 'Top SQL by temp usage', 'statements_top_temp', NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"filter": {"type": "exists", "field": "ord_temp"},'
    '"ordering": "ord_temp",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "hdr table_obj_name queryId", "caption": "Query ID", "rowspan": true}, '
      '{"id": "dbname", "class": "table_obj_name hdr", "caption": "Database", "rowspan": true}, '
      '{"id": "username", "class": "table_obj_name hdr", "caption": "User", "rowspan": true}, '
      '{"id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"],  "class": "interval", "caption": "I"}, '
      '{"id": ["local_blks_fetched1", "local_blks_fetched2"], "class": "table_obj_value", "title": "Number of local blocks fetched (hit + read)", "caption": "Local fetched"}, '
      '{"id": ["local_hit_pct1", "local_hit_pct2"], "class": "table_obj_value", "title": "Local blocks hit percentage", "caption": "Hits(%)"}, '
      '{"title": "Number of blocks, used for temporary tables", "caption": "Local (blk)", "columns": ['
          '{"id": ["local_blks_written1", "local_blks_written2"], "class": "table_obj_value", "title": "Number of written local blocks", "caption": "Write"}, '
          '{"id": ["local_write_total_pct1", "local_write_total_pct2"], "class": "table_obj_value", "title": "Percentage of all local blocks written", "caption": "%Total"}, '
          '{"id": ["local_blks_read1", "local_blks_read2"], "class": "table_obj_value", "title": "Number of read local blocks", "caption": "Read"}, '
          '{"id": ["local_read_total_pct1", "local_read_total_pct2"], "class": "table_obj_value", "title": "Percentage of all local blocks read", "caption": "%Total"}'
      ']}, '
      '{"title": "Number of blocks, used in operations (like sorts and joins)", "caption": "Temp (blk)", "columns": ['
          '{"id": ["temp_blks_written1", "temp_blks_written2"], "class": "table_obj_value", "title": "Number of written temp blocks", "caption": "Write"}, '
          '{"id": ["temp_write_total_pct1", "temp_write_total_pct2"], "class": "table_obj_value", "title": "Percentage of all temp blocks written", "caption": "%Total"}, '
          '{"id": ["temp_blks_read1", "temp_blks_read2"], "class": "table_obj_value", "title": "Number of read temp blocks", "caption": "Read"}, '
          '{"id": ["temp_read_total_pct1", "temp_read_total_pct2"], "class": "table_obj_value", "title": "Percentage of all temp blocks read", "caption": "%Total"}'
      ']}, '
      '{"id": ["total_time1", "total_time2"], "class": "table_obj_value", "title": "Time spent by the statement", "caption": "Elapsed(s)"}, '
      '{"id": ["rows1", "rows2"], "class": "table_obj_value", "title": "Total number of rows retrieved or affected by the statement", "caption": "Rows"}, '
      '{"id": ["calls1", "calls2"], "class": "table_obj_value", "title": "Number of times the statement was executed", "caption": "Executions"}, '
      '{"id": ["stmt_cover1", "stmt_cover2"], "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']'
  '}]'::jsonb),
(2, 'sqltmpiotime', 'sqlsthdr', 1125, 'Top SQL by temp I/O time', 'Top SQL by temp I/O time', 'statements_temp_io_times', NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"filter": {"type": "exists", "field": "ord_temp_io_time"},'
    '"ordering": "ord_temp_io_time",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "hdr table_obj_name queryId", "caption": "Query ID", "rowspan": true}, '
      '{"id": "dbname", "class": "table_obj_name hdr", "caption": "Database", "rowspan": true}, '
      '{"id": "username", "class": "table_obj_name hdr", "caption": "User", "rowspan": true}, '
      '{"id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"],  "class": "interval", "caption": "I"}, '
      '{"title": "Time the statement spent on temporary file blocks I/O", "caption": "Temp I/O time (s)", "columns": ['
          '{"id": ["temp_blk_read_time1", "temp_blk_read_time2"], "class": "table_obj_value", "title": "Time the statement spent reading temporary file blocks, in seconds", "caption": "Read"}, '
          '{"id": ["temp_blk_write_time1", "temp_blk_write_time2"], "class": "table_obj_value", "title": "Time the statement spent reading temporary file blocks, in seconds", "caption": "Write"}, '
          '{"id": ["temp_io_time_pct1", "temp_io_time_pct2"], "class": "table_obj_value", "title": "Time spent on temporary file blocks I/O of this statement as a percentage of total time spent on temporary file blocks I/O by all statements", "caption": "%Total"} '
      ']}, '
      '{"title": "Number of blocks, used in operations (like sorts and joins)", "caption": "Temp (blk)", "columns": ['
          '{"id": ["temp_blks_written1", "temp_blks_written2"], "class": "table_obj_value", "title": "Number of written temp blocks", "caption": "Write"}, '
          '{"id": ["temp_write_total_pct1", "temp_write_total_pct2"], "class": "table_obj_value", "title": "Percentage of all temp blocks written", "caption": "%Total"}, '
          '{"id": ["temp_blks_read1", "temp_blks_read2"], "class": "table_obj_value", "title": "Number of read temp blocks", "caption": "Read"}, '
          '{"id": ["temp_read_total_pct1", "temp_read_total_pct2"], "class": "table_obj_value", "title": "Percentage of all temp blocks read", "caption": "%Total"}'
      ']}, '
      '{"id": ["total_time1", "total_time2"], "class": "table_obj_value", "title": "Time spent by the statement", "caption": "Elapsed(s)"}, '
      '{"id": ["rows1", "rows2"], "class": "table_obj_value", "title": "Total number of rows retrieved or affected by the statement", "caption": "Rows"}, '
      '{"id": ["calls1", "calls2"], "class": "table_obj_value", "title": "Number of times the statement was executed", "caption": "Executions"}, '
      '{"id": ["stmt_cover1", "stmt_cover2"], "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']'
  '}]'::jsonb),
(2, 'sqljit', 'sqlsthdr', 1150, 'Top SQL by JIT elapsed time', 'Top SQL by JIT elapsed time', 'statements_jit_stats', NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"filter": {"type": "exists", "field": "ord_jit"},'
    '"ordering": "ord_jit",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "hdr table_obj_name jitCellId", "caption": "Query ID", "rowspan": true}, '
      '{"id": "dbname", "class": "table_obj_name hdr", "caption": "Database", "rowspan": true}, '
      '{"id": "username", "class": "table_obj_name hdr", "caption": "User", "rowspan": true}, '
      '{"id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval", "caption": "I"}, '
      '{"id": ["jit_total_time1", "jit_total_time2"], "class": "table_obj_value", "title": "Time spent on JIT in seconds", "caption": "JIT total (s)"}, '
      '{"caption": "Generation", "columns": ['
          '{"id": ["jit_functions1", "jit_functions2"], "class": "table_obj_value", "title": "Total number of functions JIT-compiled by the statement.", "caption": "Count"}, '
          '{"id": ["jit_generation_time1", "jit_generation_time2"], "class": "table_obj_value", "title": "Time spent by the statement on generating JIT code, in seconds.", "caption": "Time (s)"}'
          ']}, '
      '{"class": "table_obj_name", "caption": "Inlining", "columns": ['
          '{"id": ["jit_inlining_count1", "jit_inlining_count2"], "class": "table_obj_value", "title": "Number of times functions have been inlined.", "caption": "Count"}, '
          '{"id": ["jit_inlining_time1", "jit_inlining_time2"], "class": "table_obj_value", "title": "Time spent by the statement on inlining functions, in seconds.", "caption": "Time (s)"}'
          ']}, '
      '{"class": "table_obj_name", "caption": "Optimization", "columns": ['
          '{"id": ["jit_optimization_count1", "jit_optimization_count2"], "class": "table_obj_value", "title": "Number of times the statement has been optimized.", "caption": "Count"}, '
          '{"id": ["jit_optimization_time1", "jit_optimization_time2"], "class": "table_obj_value", "title": "Time spent by the statement on optimizing, in seconds.", "caption": "Time (s)"}'
      ']}, '
      '{"class": "table_obj_name", "caption": "Emission", "columns": ['
          '{"id": ["jit_emission_count1", "jit_emission_count2"], "class": "table_obj_value", "title": "Number of times code has been emitted.", "caption": "Count"}, '
          '{"id": ["jit_emission_time1", "jit_emission_time2"], "class": "table_obj_value", "title": "Time spent by the statement on emitting code, in seconds.", "caption": "Time (s)"}'
      ']}, '
      '{"class": "table_obj_name", "caption": "Deform", "condition": "statements_jit_deform", "columns": ['
        '{"id": ["jit_deform_count1", "jit_deform_count2"], "class": "table_obj_value", "title": "Number of tuple deform functions JIT-compiled by the statement.", "caption": "Count"}, '
        '{"id": ["jit_deform_time1", "jit_deform_time2"], "class": "table_obj_value", "title": "Total time spent by the statement on JIT-compiling tuple deform functions, in seconds.", "caption": "Time (s)"}'
      ']}, '
      '{"class": "table_obj_name", "caption": "Time (s)", "columns": ['
          '{"id": ["total_plan_time1", "total_plan_time2"], "class": "table_obj_value", "title": "Time spent planning statement", "condition": "planning_times", "caption": "Plan"}, '
          '{"id": ["total_exec_time1", "total_exec_time2"], "class": "table_obj_value", "title": "Time spent executing statement", "caption": "Exec"}'
      ']}, '
      '{"class": "table_obj_name", "caption": "I/O time (s)", "condition": "io_times", "columns": ['
          '{"id": ["shared_blk_read_time1", "shared_blk_read_time2"], "class": "table_obj_value", "title": "Time spent reading blocks by statement", "caption": "Read"}, '
          '{"id": ["shared_blk_write_time1", "shared_blk_write_time2"], "class": "table_obj_value", "title": "Time spent writing blocks by statement", "caption": "Write"}'
      ']},'
      '{"id": ["stmt_cover1", "stmt_cover2"], "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']}]'::jsonb),
(2, 'sqlworkers', 'sqlsthdr', 1175, 'Top SQL by parallel workers usage', 'Top SQL by parallel workers usage', 'statements_workers_stats', NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_statements",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"filter": {"type": "exists", "field": "ord_wrkrs_cnt"},'
    '"ordering": "ord_wrkrs_cnt",'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "hdr table_obj_name queryId", "caption": "Query ID", "rowspan": true}, '
      '{"id": "dbname", "class": "table_obj_name hdr", "caption": "Database", "rowspan": true}, '
      '{"id": "username", "class": "table_obj_name hdr", "caption": "User", "rowspan": true}, '
      '{"id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"],  "class": "interval", "caption": "I"}, '
      '{"caption": "Parallel workers", "columns": ['
        '{"id": ["parallel_workers_to_launch1", "parallel_workers_to_launch2"], "class": "table_obj_value", "caption": "Planned", "title": "Number of parallel workers planned to be launched by queries on this database"},'
        '{"id": ["parallel_workers_launched1", "parallel_workers_launched2"], "class": "table_obj_value", "caption": "Launched", "title": "Number of parallel workers launched by queries on this database"}'
      ']},'
      '{"id": ["total_exec_time1", "total_exec_time2"], "class": "table_obj_value", "title": "Time spent executing statement", "caption": "Exec (s)"}, '
      '{"id": ["shared_blks_fetched1", "shared_blks_fetched2"], "class": "table_obj_value", "title": "Shared blocks fetched (read and hit) by the statement", "caption": "blks fetched"}, '
      '{"title": "Number of blocks read by the statement", "caption": "Reads", "columns": ['
        '{"id": ["shared_blks_read1", "shared_blks_read2"], "title": "Number of shared blocks read by the statement", "caption": "Shr", "class": "table_obj_value"}, '
        '{"id": ["local_blks_read1", "local_blks_read2"], "title": "Number of local blocks read by the statement (usually used for temporary tables)", "caption": "Loc", "class": "table_obj_value"}, '
        '{"id": ["temp_blks_read1", "temp_blks_read2"], "title": "Number of temp blocks read by the statement (usually used for operations like sorts and joins)", "caption": "Tmp", "class": "table_obj_value"}'
      ']}, '
      '{"caption": "I/O time (s)", "condition": "io_times", "columns": ['
        '{"id": ["shared_blk_read_time1", "shared_blk_read_time2"], "class": "table_obj_value", "caption": "Read"}, '
        '{"id": ["shared_blk_write_time1", "shared_blk_write_time2"], "class": "table_obj_value", "caption": "Write"}'
      ']}'
    ']}]'::jsonb),
(2, 'sqlkcachehdr', 'sqlsthdr', 1200, 'Rusage statistics', 'Rusage statistics', 'kcachestatements', NULL, NULL, NULL),
(2, 'sqlrusgcpu', 'sqlkcachehdr', 100, 'Top SQL by system and user time', 'Top SQL by system and user time', NULL, NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "top_rusage_statements",'
    '"filter": {"type": "exists", "field": "ord_cpu_time"},'
    '"ordering": "ord_cpu_time",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
        '{"id": "hexqueryid", "class": "hdr table_obj_name queryId", "caption": "Query ID", "rowspan": true}, '
        '{"id": "dbname", "class": "table_obj_name hdr", "caption": "Database", "rowspan": true}, '
        '{"id": "username", "class": "table_obj_name hdr", "caption": "User", "rowspan": true}, '
        '{"id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval", "caption": "I"}, '
        '{"title": "Userspace CPU", "caption": "User Time", "columns": ['
            '{"id": ["plan_user_time1", "plan_user_time2"], "class": "table_obj_value", "title": "User CPU time elapsed during planning", "caption": "Plan (s)", "condition": "rusage_planstats"}, '
            '{"id": ["exec_user_time1", "exec_user_time2"], "class": "table_obj_value", "title": "User CPU time elapsed during execution", "caption": "Exec (s)"}, '
            '{"id": ["user_time_pct1", "user_time_pct2"], "class": "table_obj_value", "title": "User CPU time elapsed by this statement as a percentage of total user CPU time", "caption": "%Total"}'
            ']}, '
        '{"title": "Kernelspace CPU", "caption": "System Time", "columns": ['
            '{"id": ["plan_system_time1", "plan_system_time2"], "class": "table_obj_value", "title": "System CPU time elapsed during planning", "caption": "Plan (s)", "condition": "rusage_planstats"}, '
            '{"id": ["exec_system_time1", "exec_system_time2"], "class": "table_obj_value", "title": "System CPU time elapsed during execution", "caption":"Exec (s)"}, '
            '{"id": ["system_time_pct1", "system_time_pct2"], "class": "table_obj_value", "title": "System CPU time elapsed by this statement as a percentage of total system CPU time", "caption": "%Total"}'
            ']}, '
        '{"id": ["rusage_cover1", "rusage_cover2"], "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
        ']'
    '}]'::jsonb),
(2, 'sqlrusgio', 'sqlkcachehdr', 200, 'Top SQL by reads/writes done by filesystem layer', 'Top SQL by reads/writes done by filesystem layer', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_rusage_statements",'
    '"filter": {"type": "exists", "field": "ord_io_bytes"},'
    '"ordering": "ord_io_bytes",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0},'
      '{"id": "queryid", "index": 1},'
      '{"id": "dbname", "index": 1},'
      '{"id": "username", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "hexqueryid", "dataset": "queries"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
      '{"id": "hexqueryid", "class": "hdr table_obj_name queryId", "caption": "Query ID", "rowspan": true},'
      '{"id": "dbname", "class": "table_obj_name hdr", "caption": "Database", "rowspan": true},'
      '{"id": "username", "class": "table_obj_name hdr", "caption": "User", "rowspan": true},'
      '{"id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval", "caption": "I"},'
      '{"title": "Filesystem reads", "caption": "Read Bytes", "columns": ['
          '{"id": ["plan_reads1", "plan_reads2"], "class": "table_obj_value", "title": "Filesystem read amount during planning", "caption": "Plan", "condition": "rusage_planstats"},'
          '{"id": ["exec_reads1", "exec_reads2"], "class": "table_obj_value", "title": "Filesystem read amount during execution", "caption": "Bytes"},'
          '{"id": ["reads_total_pct1", "reads_total_pct2"], "class": "table_obj_value", "title": "Filesystem read amount of this statement as a percentage of all statements FS read amount", "caption": "%Total"}'
      ']},'
      '{"title": "Filesystem writes", "caption": "Write Bytes", "columns": ['
          '{"id": ["plan_writes1", "plan_writes2"], "class": "table_obj_value", "title": "Filesystem write amount during planning", "caption": "Plan", "condition": "rusage_planstats"},'
         '{"id": ["exec_writes1", "exec_writes2"], "class": "table_obj_value", "title": "Filesystem write amount during execution", "caption": "Bytes"},'
         '{"id": ["writes_total_pct1", "writes_total_pct2"], "class": "table_obj_value", "title": "Filesystem write amount of this statement as a percentage of all statements FS read amount", "caption": "%Total"}'
      ']}, '
      '{"id": ["rusage_cover1", "rusage_cover2"], "class": "table_obj_value", "condition": "statements_coverage", "caption": "%Cvr", "title": "Coverage: statement stats collection duration as a percentage of the report duration"} '
    ']'
  '}]'::jsonb),
(2, 'sqllist', 'sqlsthdr', 1300, 'Complete list of SQL texts', 'Complete list of SQL texts', NULL, NULL, NULL,
  '[{'
    '"type": "row_table", '
    '"source": "queries",'
    '"highlight": ['
      '{"id": "hexqueryid", "index": 0}'
    '],'
    '"columns": ['
        '{"id": "hexqueryid", "class": "table_obj_name queryTextId", "caption": "Query ID", "rowspan": true}, '
        '{"id": "query_texts", "class": "table_obj_name queryText", "caption": "Query Text"}'
    ']'
  '}]'::jsonb)
;

-- Schema objects section of a differential report
INSERT INTO report_struct (
  report_id, sect_id, parent_sect_id, s_ord, toc_cap, tbl_cap, feature, function_name,
  content, sect_struct)
VALUES
(2, 'tblscan', 'objects', 100, 'Top tables by estimated sequentially scanned volume', 'Top tables by estimated sequentially scanned volume', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_tables",'
    '"filter": {"type": "exists", "field": "ord_seq_scan"},'
    '"ordering": "ord_seq_scan",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Table", "id": "relname", "rowspan":true, "class": "table_obj_name hdr"},'
     '{"caption": "I", "id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval"},'
     '{"caption": "Table", "columns": ['
       '{"caption": "~SeqBytes", "id": ["seqscan_bytes_pretty1", "seqscan_bytes_pretty2"], '
         '"class": "table_obj_value", '
         '"title": "Estimated number of bytes, fetched by sequential scans on this table"}, '
       '{"caption": "SeqScan", "id": ["seq_scan1", "seq_scan2"], '
         '"class": "table_obj_value", '
         '"title": "Number of sequential scans initiated on this table"}, '
       '{"caption": "IxScan", "id": ["idx_scan1", "idx_scan2"], '
         '"class": "table_obj_value", '
         '"title": "Number of index scans initiated on this table"}, '
       '{"caption": "IxFet", "id": ["idx_tup_fetch1", "idx_tup_fetch2"], '
         '"class": "table_obj_value", '
         '"title": "Number of live rows fetched by index scans from this table"} '
     ']},'
     '{"caption": "TOAST", "columns": ['
       '{"caption": "~SeqBytes", "id": ["t_seqscan_bytes_pretty1", "t_seqscan_bytes_pretty2"], '
         '"class": "table_obj_value", '
         '"title": "Estimated number of bytes, fetched by sequential scans on TOAST table"}, '
       '{"caption": "SeqScan", "id": ["toastseq_scan1", "toastseq_scan2"], '
         '"class": "table_obj_value", '
         '"title": "Number of sequential scans initiated on TOAST table"}, '
       '{"caption": "IxScan", "id": ["toastidx_scan1", "toastidx_scan2"], '
         '"class": "table_obj_value", '
         '"title": "Number of index scans initiated on TOAST table"}, '
       '{"caption": "IxFet", "id": ["toastidx_tup_fetch1", "toastidx_tup_fetch2"], '
         '"class": "table_obj_value", '
         '"title": "Number of live rows fetched by index scans from TOAST table"} '
     ']}'
    ']'
  '}]'::jsonb),
(2, 'tblfetch', 'objects', 200, 'Top tables by blocks fetched', 'Top tables by blocks fetched', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_io_tables",'
    '"filter": {"type": "exists", "field": "ord_fetch"},'
    '"ordering": "ord_fetch",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "I", "id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval"},'
     '{"caption": "Heap", "columns": ['
          '{"caption": "Blks", "id": ["heap_blks_fetch1", "heap_blks_fetch2"], "title": "Number of blocks fetched (read+hit) from this table", "class": "table_obj_value"},'
          '{"caption": "%Total", "id": ["heap_blks_proc_pct1", "heap_blks_proc_pct2"], "title": "Heap blocks fetched for this table as a percentage of all blocks fetched in a cluster", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Ix", "columns": ['
          '{"caption": "Blks", "id": ["idx_blks_fetch1", "idx_blks_fetch2"], "title": "Number of blocks fetched (read+hit) from all indexes on this table", "class": "table_obj_value"},'
          '{"caption": "%Total", "id": ["idx_blks_fetch_pct1", "idx_blks_fetch_pct2"], "title": "Indexes of blocks fetched for this table as a percentage of all blocks fetched in a cluster", "class": "table_obj_value"}'
     ']},'
     '{"caption": "TOAST", "columns": ['
          '{"caption": "Blks", "id": ["toast_blks_fetch1", "toast_blks_fetch2"], "title": "Number of blocks fetched (read+hit) from this table''s TOAST table (if any)", "class": "table_obj_value"},'
          '{"caption": "%Total", "id": ["toast_blks_fetch_pct1", "toast_blks_fetch_pct2"], "title": "TOAST blocks fetched for this table as a percentage of all blocks fetched in a cluster", "class": "table_obj_value"}'
     ']},'
     '{"caption": "TOAST-Ix", "columns": ['
          '{"caption": "Blks", "id": ["tidx_blks_fetch1", "tidx_blks_fetch2"], "title": "Number of blocks fetched (read+hit) from this table''s TOAST table indexes (if any)", "class": "table_obj_value"},'
          '{"caption": "%Total", "id": ["tidx_blks_fetch_pct1", "tidx_blks_fetch_pct2"], "title": "TOAST table index blocks fetched for this table as a percentage of all blocks fetched in a cluster", "class": "table_obj_value"}'
     ']}'
    ']'
  '}]'::jsonb),
(2, 'tblrd', 'objects', 300, 'Top tables by blocks read', 'Top tables by blocks read', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_io_tables",'
    '"filter": {"type": "exists", "field": "ord_read"},'
    '"ordering": "ord_read",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "I", "id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval"},'
     '{"caption": "Heap", "columns": ['
          '{"caption": "Blks", "id": ["heap_blks_read1", "heap_blks_read2"], "title": "Number of blocks read from this table", "class": "table_obj_value"},'
          '{"caption": "%Total", "id": ["heap_blks_read_pct1", "heap_blks_read_pct2"], "title": "Heap blocks read for this table as a percentage of all blocks fetched in a cluster", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Ix", "columns": ['
          '{"caption": "Blks", "id": ["idx_blks_read1", "idx_blks_read2"], "title": "Number of blocks read from all indexes on this table", "class": "table_obj_value"},'
          '{"caption": "%Total", "id": ["idx_blks_read_pct1", "idx_blks_read_pct2"], "title": "Indexes of blocks read for this table as a percentage of all blocks fetched in a cluster", "class": "table_obj_value"}'
     ']},'
     '{"caption": "TOAST", "columns": ['
          '{"caption": "Blks", "id": ["toast_blks_read1", "toast_blks_read2"], "title": "Number of blocks read from this table''s TOAST table (if any)", "class": "table_obj_value"},'
          '{"caption": "%Total", "id": ["toast_blks_read_pct1", "toast_blks_read_pct2"], "title": "TOAST blocks read for this table as a percentage of all blocks fetched in a cluster", "class": "table_obj_value"}'
     ']},'
     '{"caption": "TOAST-Ix", "columns": ['
          '{"caption": "Blks", "id": ["tidx_blks_read1", "tidx_blks_read2"], "title": "Number of blocks read from this table''s TOAST table indexes (if any)", "class": "table_obj_value"},'
          '{"caption": "%Total", "id": ["tidx_blks_read_pct1", "tidx_blks_read_pct2"], "title": "TOAST table index blocks read for this table as a percentage of all blocks fetched in a cluster", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Hit(%)", "id": ["hit_pct1", "hit_pct2"], "class": "table_obj_value", "title": "Number of heap, indexes, toast and toast index blocks fetched from shared buffers as a percentage of all their blocks fetched from shared buffers and file system"}'
    ']'
  '}]'::jsonb),
(2, 'tbldml', 'objects', 400, 'Top DML tables', 'Top DML tables', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_tables",'
    '"filter": {"type": "exists", "field": "ord_dml"},'
    '"ordering": "ord_dml",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "I", "id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval"},'
     '{"caption": "Table", "columns": ['
          '{"caption": "Ins", "id": ["n_tup_ins1", "n_tup_ins2"], "title": "Number of rows inserted", "class": "table_obj_value"},'
          '{"caption": "Upd", "id": ["n_tup_upd1", "n_tup_upd2"], "title": "Number of rows updated (includes HOT updated rows)", "class": "table_obj_value"},'
          '{"caption": "Del", "id": ["n_tup_del1", "n_tup_del2"], "title": "Number of rows deleted", "class": "table_obj_value"},'
          '{"caption": "Upd(HOT)", "id": ["n_tup_hot_upd1", "n_tup_hot_upd2"], "title": "Number of rows HOT updated (i.e., with no separate index update required)", "class": "table_obj_value"}'
     ']},'
     '{"caption": "TOAST", "columns": ['
          '{"caption": "Ins", "id": ["toastn_tup_ins1", "toastn_tup_ins2"], "title": "Number of rows inserted", "class": "table_obj_value"},'
          '{"caption": "Upd", "id": ["toastn_tup_upd1", "toastn_tup_upd2"], "title": "Number of rows updated (includes HOT updated rows)", "class": "table_obj_value"},'
          '{"caption": "Del", "id": ["toastn_tup_del1", "toastn_tup_del2"], "title": "Number of rows deleted", "class": "table_obj_value"},'
          '{"caption": "Upd(HOT)", "id": ["toastn_tup_hot_upd1", "toastn_tup_hot_upd2"], "title": "Number of rows HOT updated (i.e., with no separate index update required)", "class": "table_obj_value"}'
     ']}'
    ']'
  '}]'::jsonb),
(2, 'tblud', 'objects', 500, 'Top tables by updated/deleted tuples', 'Top tables by updated/deleted tuples', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_tables",'
    '"filter": {"type": "exists", "field": "ord_upd"},'
    '"ordering": "ord_upd",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "I", "id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval"},'
     '{"caption": "Upd", "id": ["n_tup_upd1", "n_tup_upd2"], "title": "Number of rows updated (includes HOT updated rows)", "class": "table_obj_value"},'
     '{"caption": "Upd(HOT)", "id": ["n_tup_hot_upd1", "n_tup_hot_upd2"], "title": "Number of rows HOT updated (i.e., with no separate index update required)", "class": "table_obj_value"},'
     '{"caption": "Del", "id": ["n_tup_del1", "n_tup_del2"], "title": "Number of rows deleted", "class": "table_obj_value"},'
     '{"caption": "Vacuum count", "title": "Number of times vacuum operation was performed on the underlying table", "columns": ['
          '{"caption": "Vacuum", "id": ["vacuum_count1", "vacuum_count2"], "title": "Number of times this table has been manually vacuumed (not counting VACUUM FULL)", "class": "table_obj_value"},'
          '{"caption": "AutoVacuum", "id": ["autovacuum_count1", "autovacuum_count2"], "title": "Number of times this table has been vacuumed by the autovacuum daemon", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Analyze count", "title": "Number of times vacuum operation was performed on the underlying table", "columns": ['
          '{"caption": "Analyze", "id": ["analyze_count1", "analyze_count2"], "title": "Number of times this table has been manually analyzed", "class": "table_obj_value"},'
          '{"caption": "AutoAnalyze", "id": ["autoanalyze_count1", "autoanalyze_count2"], "title": "Number of times this table has been analyzed by the autovacuum daemon", "class": "table_obj_value"}'
     ']}'
    ']'
  '}]'::jsonb),
(2, 'tblupd_np', 'objects', 550, 'Top tables by new-page updated tuples', 'Top tables by new-page updated tuples', 'table_new_page_updates', NULL,
  '{"class": "notice", "text": "Top tables by number of rows updated where the successor version goes onto a new heap page, '
  'leaving behind an original version with a t_ctid field that points to a different heap page. '
  'These are always non-HOT updates."}',
  '[{'
    '"type": "row_table",'
    '"source": "top_tables",'
    '"filter": {"type": "exists", "field": "ord_upd_np"},'
    '"ordering": "ord_upd_np",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "I", "id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval"},'
     '{"caption": "NP Upd", "id": ["n_tup_newpage_upd1", "n_tup_newpage_upd2"], "title": "Number of rows updated to a new heap page", "class": "table_obj_value"},'
     '{"caption": "%Upd", "id": ["np_upd_pct1", "np_upd_pct2"], "title": "Number of new-page updated rows as a percentage of all rows updated", "class": "table_obj_value"},'
     '{"caption": "Upd", "id": ["n_tup_upd1", "n_tup_upd2"], "title": "Number of rows updated (includes HOT updated rows)", "class": "table_obj_value"},'
     '{"caption": "Upd(HOT)", "id": ["n_tup_hot_upd1", "n_tup_hot_upd2"], "title": "Number of rows HOT updated (i.e., with no separate index update required)", "class": "table_obj_value"}'
    ']'
  '}]'::jsonb),
(2, 'tblgrw', 'objects', 600, 'Top growing tables', 'Top growing tables', NULL, NULL,
  '{"class": "notice", "text": "Sizes in square brackets are based on pg_class.relpages data instead of pg_relation_size() function"}',
  '[{'
    '"type": "row_table",'
    '"source": "top_tables",'
    '"filter": {"type": "exists", "field": "ord_growth"},'
    '"ordering": "ord_growth",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "I", "id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval"},'
     '{"caption": "Table", "columns": ['
          '{"caption": "Size", "id": ["relsize_pretty1", "relsize_pretty2"], "title": "Table size, as it was at the moment of last sample in report interval", "class": "table_obj_value"},'
          '{"caption": "Growth", "id": ["growth_pretty1", "growth_pretty2"], "title": "Table size increment during report interval", "class": "table_obj_value"},'
          '{"caption": "Ins", "id": ["n_tup_ins1", "n_tup_ins2"], "title": "Number of rows inserted", "class": "table_obj_value"},'
          '{"caption": "Upd", "id": ["n_tup_upd1", "n_tup_upd2"], "title": "Number of rows updated (includes HOT updated rows)", "class": "table_obj_value"},'
          '{"caption": "Del", "id": ["n_tup_del1", "n_tup_del2"], "title": "Number of rows deleted", "class": "table_obj_value"},'
          '{"caption": "Upd(HOT)", "id": ["n_tup_hot_upd1", "n_tup_hot_upd2"], "title": "Number of rows HOT updated (i.e., with no separate index update required)", "class": "table_obj_value"}'
     ']},'
     '{"caption": "TOAST", "columns": ['
          '{"caption": "Size", "id": ["t_relsize_pretty1", "t_relsize_pretty2"], "title": "Table size, as it was at the moment of last sample in report interval", "class": "table_obj_value"},'
          '{"caption": "Growth", "id": ["toastgrowth_pretty1", "toastgrowth_pretty2"], "title": "Table size increment during report interval", "class": "table_obj_value"},'
          '{"caption": "Ins", "id": ["toastn_tup_ins1", "toastn_tup_ins2"], "title": "Number of rows inserted", "class": "table_obj_value"},'
          '{"caption": "Upd", "id": ["toastn_tup_upd1", "toastn_tup_upd2"], "title": "Number of rows updated (includes HOT updated rows)", "class": "table_obj_value"},'
          '{"caption": "Del", "id": ["toastn_tup_del1", "toastn_tup_del2"], "title": "Number of rows deleted", "class": "table_obj_value"},'
          '{"caption": "Upd(HOT)", "id": ["toastn_tup_hot_upd1", "toastn_tup_hot_upd2"], "title": "Number of rows HOT updated (i.e., with no separate index update required)", "class": "table_obj_value"}'
     ']}'
    ']'
  '}]'::jsonb),
(2, 'ixfetch', 'objects', 700, 'Top indexes by blocks fetched', 'Top indexes by blocks fetched', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_io_indexes",'
    '"filter": {"type": "exists", "field": "ord_fetch"},'
    '"ordering": "ord_fetch",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1},'
      '{"id": "indexrelname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "indexrelid", "dataset": "index_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Index", "id": "indexrelname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "I", "id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval"},'
     '{"caption": "Scans", "id": ["idx_scan1", "idx_scan2"], "title": "Number of scans performed on index", "class": "table_obj_value"},'
     '{"caption": "Blks", "id": ["idx_blks_fetch1", "idx_blks_fetch2"], "title": "Number of blocks fetched (read+hit) from this index", "class": "table_obj_value"},'
     '{"caption": "%Total", "id": ["idx_blks_fetch_pct1", "idx_blks_fetch_pct2"], "title": "Blocks fetched from this index as a percentage of all blocks fetched in a cluster", "class": "table_obj_value"}'
    ']'
  '}]'::jsonb),
(2, 'ixrd', 'objects', 800, 'Top indexes by blocks read', 'Top indexes by blocks read', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_io_indexes",'
    '"filter": {"type": "exists", "field": "ord_read"},'
    '"ordering": "ord_read",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1},'
      '{"id": "indexrelname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "indexrelid", "dataset": "index_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Index", "id": "indexrelname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "I", "id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval"},'
     '{"caption": "Scans", "id": ["idx_scan1", "idx_scan2"], "title": "Number of scans performed on index", "class": "table_obj_value"},'
     '{"caption": "Blks Reads", "id": ["idx_blks_read1", "idx_blks_read2"], "title": "Number of disk blocks read from this index", "class": "table_obj_value"},'
     '{"caption": "%Total", "id": ["idx_blks_read_pct1", "idx_blks_read_pct2"], "title": "Blocks fetched from this index as a percentage of all blocks read in a cluster", "class": "table_obj_value"}, '
     '{"caption": "Hits(%)", "id": ["idx_blks_hit_pct1", "idx_blks_hit_pct2"], "title": "Index blocks buffer cache hit percentage", "class": "table_obj_value"}'
    ']'
  '}]'::jsonb),
(2, 'ixgrw', 'objects', 900, 'Top growing indexes', 'Top growing indexes', NULL, NULL,
  '{"class": "notice", "text": "Sizes in square brackets are based on pg_class.relpages data instead of pg_relation_size() function"}',
  '[{'
    '"type": "row_table",'
    '"source": "top_indexes",'
    '"filter": {"type": "exists", "field": "ord_growth"},'
    '"ordering": "ord_growth",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1},'
      '{"id": "indexrelname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "indexrelid", "dataset": "index_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Index", "id": "indexrelname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "I", "id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval"},'
     '{"caption": "Index", "columns": ['
          '{"id": ["indexrelsize_pretty1", "indexrelsize_pretty2"], "caption": "Size", "title": "Index size, as it was at the moment of last sample in report interval", "class": "table_obj_value"},'
          '{"id": ["growth_pretty1", "growth_pretty2"], "caption": "Growth", "title": "Index size increment during report interval", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Table", "columns": ['
          '{"id": ["tbl_n_tup_ins1", "tbl_n_tup_ins2"], "caption": "Ins", "title": "Number of rows inserted", "class": "table_obj_value"},'
          '{"id": ["tbl_n_tup_upd1", "tbl_n_tup_upd2"], "caption": "Upd", "title": "Number of rows updated (without HOT updated rows)", "class": "table_obj_value"},'
          '{"id": ["tbl_n_tup_del1", "tbl_n_tup_del2"], "caption": "Del", "title": "Number of rows deleted", "class": "table_obj_value"}'
     ']}'
    ']'
  '}]'::jsonb)
;

-- Functions section of a differential report
INSERT INTO report_struct (
  report_id, sect_id, parent_sect_id, s_ord, toc_cap, tbl_cap, feature, function_name,
  content, sect_struct)
VALUES
(2, 'func_time', 'funchdr', 100, 'Top functions by total time', 'Top functions by total time', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_functions",'
    '"filter": {"type": "exists", "field": "ord_time"},'
    '"ordering": "ord_time",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "funcname", "index": 1}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Function", "id": "funcname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "I", "id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval"},'
     '{"caption": "Executions", "id": ["calls1", "calls2"], "title": "Number of times this function has been called", "class": "table_obj_value"},'
     '{"caption": "Time (s)", "title": "Function execution timing statistics", "columns": ['
          '{"caption": "Total", "id": ["total_time1", "total_time2"], "class": "table_obj_value", "title": "Time spent in this function and all other functions called by it"},'
          '{"caption": "Self", "id": ["self_time1", "self_time2"], "class": "table_obj_value", "title": "Time spent in this function itself, not including other functions called by it"},'
          '{"caption": "Mean", "id": ["m_time1", "m_time2"], "class": "table_obj_value", "title": "Mean total time per execution"},'
          '{"caption": "Mean self", "id": ["m_stime1", "m_stime2"], "class": "table_obj_value", "title": "Mean self time per execution"}'
     ']}'
    ']'
  '}]'::jsonb),
(2, 'func_calls', 'funchdr', 200, 'Top functions by executions', 'Top functions by executions', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_functions",'
    '"filter": {"type": "exists", "field": "ord_calls"},'
    '"ordering": "ord_calls",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "funcname", "index": 1}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Function", "id": "funcname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "I", "id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval"},'
     '{"caption": "Executions", "id": ["calls1", "calls2"], "title": "Number of times this function has been called", "class": "table_obj_value"},'
     '{"caption": "Time (s)", "title": "Function execution timing statistics", "columns": ['
          '{"caption": "Total", "id": ["total_time1", "total_time2"], "class": "table_obj_value", "title": "Time spent in this function and all other functions called by it"},'
          '{"caption": "Self", "id": ["self_time1", "self_time2"], "class": "table_obj_value", "title": "Time spent in this function itself, not including other functions called by it"},'
          '{"caption": "Mean", "id": ["m_time1", "m_time2"], "class": "table_obj_value", "title": "Mean total time per execution"},'
          '{"caption": "Mean self", "id": ["m_stime1", "m_stime2"], "class": "table_obj_value", "title": "Mean self time per execution"}'
     ']}'
    ']'
  '}]'::jsonb),
(2, 'func_trg', 'funchdr', 300, 'Top trigger functions by total time', 'Top trigger functions by total time', 'trigger_function_stats', NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_functions",'
    '"filter": {"type": "exists", "field": "ord_trgtime"},'
    '"ordering": "ord_trgtime",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "funcname", "index": 1}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Function", "id": "funcname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "I", "id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval"},'
     '{"caption": "Executions", "id": ["calls1", "calls2"], "title": "Number of times this function has been called", "class": "table_obj_value"},'
     '{"caption": "Time (s)", "title": "Function execution timing statistics", "columns": ['
          '{"caption": "Total", "id": ["total_time1", "total_time2"], "class": "table_obj_value", "title": "Time spent in this function and all other functions called by it"},'
          '{"caption": "Self", "id": ["self_time1", "self_time2"], "class": "table_obj_value", "title": "Time spent in this function itself, not including other functions called by it"},'
          '{"caption": "Mean", "id": ["m_time1", "m_time2"], "class": "table_obj_value", "title": "Mean total time per execution"},'
          '{"caption": "Mean self", "id": ["m_stime1", "m_stime2"], "class": "table_obj_value", "title": "Mean self time per execution"}'
     ']}'
    ']'
  '}]'::jsonb)
;

-- Vacuum section of a regular report
INSERT INTO report_struct (
  report_id, sect_id, parent_sect_id, s_ord, toc_cap, tbl_cap, feature, function_name,
  content, sect_struct)
VALUES
(2, 'vacops', 'vachdr', 100, 'Top tables by vacuum operations', 'Top tables by vacuum operations', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_tables",'
    '"filter": {"type": "exists", "field": "ord_vac_cnt"},'
    '"ordering": "ord_vac_cnt",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "I", "id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval"},'
     '{"caption": "Vacuum count", "title": "Number of times vacuum operation was performed on the underlying table", "columns": ['
          '{"caption": "Vacuum", "id": ["vacuum_count1", "vacuum_count2"], "title": "Number of times this table has been manually vacuumed (not counting VACUUM FULL)", "class": "table_obj_value"},'
          '{"caption": "AutoVacuum", "id": ["autovacuum_count1", "autovacuum_count2"], "title": "Number of times this table has been vacuumed by the autovacuum daemon", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Vacuum time (s)", "title": "Time spent by vacuum operations on a table", "condition": "vacuum_time", "columns": ['
          '{"caption": "Vacuum", "id": ["total_vacuum_time1", "total_vacuum_time2"], "title": "Total time this table has been manually vacuumed, in seconds. (This includes the time spent sleeping due to cost-based delays.)", "class": "table_obj_value"},'
          '{"caption": "AutoVacuum", "id": ["atotal_autovacuum_time1", "total_autovacuum_time2"], "title": "Total time this table has been vacuumed by the autovacuum daemon, in seconds. (This includes the time spent sleeping due to cost-based delays.)", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Ins", "id": ["n_tup_ins1", "n_tup_ins2"], "class": "table_obj_value", "title": "Number of rows inserted"},'
     '{"caption": "Upd", "id": ["n_tup_upd1", "n_tup_upd2"], "class": "table_obj_value", "title": "Number of rows updated (includes HOT updated rows)"},'
     '{"caption": "Del", "id": ["n_tup_del1", "n_tup_del2"], "class": "table_obj_value", "title": "Number of rows deleted"},'
     '{"caption": "Upd(HOT)", "id": ["n_tup_hot_upd1", "n_tup_hot_upd2"], "class": "table_obj_value", "title": "Number of rows HOT updated (i.e., with no separate index update required)"}'
    ']'
  '}]'::jsonb),
(2, 'anops', 'vachdr', 150, 'Top tables by analyze operations', 'Top tables by analyze operations', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_tables",'
    '"filter": {"type": "exists", "field": "ord_anl_cnt"},'
    '"ordering": "ord_anl_cnt",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "I", "id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval"},'
     '{"caption": "Analyze count", "title": "Number of times vacuum operation was performed on the underlying table", "columns": ['
          '{"caption": "Analyze", "id": ["analyze_count1", "analyze_count2"], "title": "Number of times this table has been manually analyzed", "class": "table_obj_value"},'
          '{"caption": "AutoAnalyze", "id": ["autoanalyze_count1", "autoanalyze_count2"], "title": "Number of times this table has been analyzed by the autovacuum daemon", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Analyze time (s)", "title": "Time spent by analyze operations on a table", "condition": "analyze_time", "columns": ['
          '{"caption": "Analyze", "id": ["total_analyze_time1", "total_analyze_time2"], "title": "Total time this table has been manually analyzed, in seconds. (This includes the time spent sleeping due to cost-based delays.)", "class": "table_obj_value"},'
          '{"caption": "AutoAnalyze", "id": ["total_autoanalyze_time1", "total_autoanalyze_time2"], "title": "Total time this table has been analyzed by the autovacuum daemon, in seconds. (This includes the time spent sleeping due to cost-based delays.)", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Ins", "id": ["n_tup_ins1", "n_tup_ins2"], "class": "table_obj_value", "title": "Number of rows inserted"},'
     '{"caption": "Upd", "id": ["n_tup_upd1", "n_tup_upd2"], "class": "table_obj_value", "title": "Number of rows updated (includes HOT updated rows)"},'
     '{"caption": "Del", "id": ["n_tup_del1", "n_tup_del2"], "class": "table_obj_value", "title": "Number of rows deleted"},'
     '{"caption": "Upd(HOT)", "id": ["n_tup_hot_upd1", "n_tup_hot_upd2"], "class": "table_obj_value", "title": "Number of rows HOT updated (i.e., with no separate index update required)"}'
    ']'
  '}]'::jsonb),
(2, 'vactime', 'vachdr', 200, 'Top tables by vacuum time spent', 'Top tables by vacuum time spent', 'vacuum_time', NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_tables",'
    '"filter": {"type": "exists", "field": "ord_vac_time"},'
    '"ordering": "ord_vac_time",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "I", "id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval"},'
     '{"caption": "Vacuum time (s)", "title": "Time spent by vacuum operations on a table", "columns": ['
          '{"caption": "Vacuum", "id": ["total_vacuum_time1", "total_vacuum_time2"], "title": "Total time this table has been manually vacuumed, in seconds. (This includes the time spent sleeping due to cost-based delays.)", "class": "table_obj_value"},'
          '{"caption": "AutoVacuum", "id": ["total_autovacuum_time1", "total_autovacuum_time2"], "title": "Total time this table has been vacuumed by the autovacuum daemon, in seconds. (This includes the time spent sleeping due to cost-based delays.)", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Vacuum count", "title": "Number of times vacuum operation was performed on the underlying table", "columns": ['
          '{"caption": "Vacuum", "id": ["vacuum_count1", "vacuum_count2"], "title": "Number of times this table has been manually vacuumed (not counting VACUUM FULL)", "class": "table_obj_value"},'
          '{"caption": "AutoVacuum", "id": ["autovacuum_count1", "autovacuum_count2"], "title": "Number of times this table has been vacuumed by the autovacuum daemon", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Ins", "id": ["n_tup_ins1", "n_tup_ins2"], "class": "table_obj_value", "title": "Number of rows inserted"},'
     '{"caption": "Upd", "id": ["n_tup_upd1", "n_tup_upd2"], "class": "table_obj_value", "title": "Number of rows updated (includes HOT updated rows)"},'
     '{"caption": "Del", "id": ["n_tup_del1", "n_tup_del2"], "class": "table_obj_value", "title": "Number of rows deleted"},'
     '{"caption": "Upd(HOT)", "id": ["n_tup_hot_upd1", "n_tup_hot_upd2"], "class": "table_obj_value", "title": "Number of rows HOT updated (i.e., with no separate index update required)"}'
    ']'
  '}]'::jsonb),
(2, 'antime', 'vachdr', 250, 'Top tables by analyze time spent', 'Top tables by analyze time spent', 'analyze_time', NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_tables",'
    '"filter": {"type": "exists", "field": "ord_anl_time"},'
    '"ordering": "ord_anl_time",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "relid", "dataset": "table_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "I", "id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "class": "interval"},'
     '{"caption": "Analyze time (s)", "title": "Time spent by analyze operations on a table", "columns": ['
          '{"caption": "Analyze", "id": ["total_analyze_time1", "total_analyze_time2"], "title": "Total time this table has been manually analyzed, in seconds. (This includes the time spent sleeping due to cost-based delays.)", "class": "table_obj_value"},'
          '{"caption": "AutoAnalyze", "id": ["total_autoanalyze_time1", "total_autoanalyze_time2"], "title": "Total time this table has been analyzed by the autovacuum daemon, in seconds. (This includes the time spent sleeping due to cost-based delays.)", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Analyze count", "title": "Number of times vacuum operation was performed on the underlying table", "columns": ['
          '{"caption": "Analyze", "id": ["analyze_count1", "analyze_count2"], "title": "Number of times this table has been manually analyzed", "class": "table_obj_value"},'
          '{"caption": "AutoAnalyze", "id": ["autoanalyze_count1", "autoanalyze_count2"], "title": "Number of times this table has been analyzed by the autovacuum daemon", "class": "table_obj_value"}'
     ']},'
     '{"caption": "Ins", "id": ["n_tup_ins1", "n_tup_ins2"], "class": "table_obj_value", "title": "Number of rows inserted"},'
     '{"caption": "Upd", "id": ["n_tup_upd1", "n_tup_upd2"], "class": "table_obj_value", "title": "Number of rows updated (includes HOT updated rows)"},'
     '{"caption": "Del", "id": ["n_tup_del1", "n_tup_del2"], "class": "table_obj_value", "title": "Number of rows deleted"},'
     '{"caption": "Upd(HOT)", "id": ["n_tup_hot_upd1", "n_tup_hot_upd2"], "class": "table_obj_value", "title": "Number of rows HOT updated (i.e., with no separate index update required)"}'
    ']'
  '}]'::jsonb),
(2, 'ixvacest', 'vachdr', 300, 'Top indexes by estimated vacuum load', 'Top indexes by estimated vacuum load', NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "top_indexes",'
    '"filter": {"type": "exists", "field": "ord_vac"},'
    '"ordering": "ord_vac",'
    '"highlight": ['
      '{"id": "dbname", "index": 0},'
      '{"id": "tablespacename", "index": 1},'
      '{"id": "schemaname", "index": 1},'
      '{"id": "relname", "index": 1},'
      '{"id": "indexrelname", "index": 1}'
    '],'
    '"preview": ['
      '{"id": "indexrelid", "dataset": "index_storage_parameters"}'
    '],'
    '"limit": "topn",'
    '"columns": ['
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Tablespace", "id": "tablespacename", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Schema", "id": "schemaname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Table", "id": "relname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"caption": "Index", "id": "indexrelname", "class": "table_obj_name hdr", "rowspan": true},'
     '{"id": ["1", "2"], "title":["properties.timePeriod1", "properties.timePeriod2"], "caption": "I", "class": "interval"},'
     '{"id": ["vacuum_bytes_pretty1", "vacuum_bytes_pretty2"], "caption": "Vacuum bytes", "class": "table_obj_value", "title": "Estimated implicit vacuum load caused by table indexes"},'
     '{"caption": "Vacuum count", "title": "Number of times vacuum operation was performed on the underlying table", "columns": ['
          '{"caption": "Vacuum", "id": ["vacuum_count1", "vacuum_count2"], "title": "Number of times this table has been manually vacuumed (not counting VACUUM FULL)", "class": "table_obj_value"},'
          '{"caption": "AutoVacuum", "id": ["autovacuum_count1", "autovacuum_count2"], "title": "Number of times this table has been vacuumed by the autovacuum daemon", "class": "table_obj_value"}'
     ']},'
     '{"id": ["avg_indexrelsize_pretty1", "avg_indexrelsize_pretty2"], "caption": "IX size", "class": "table_obj_value", "title": "Average index size during report interval"},'
     '{"id": ["avg_relsize_pretty1", "avg_relsize_pretty2"], "caption": "Relsize", "class": "table_obj_value", "title": "Average relation size during report interval"}'
    ']'
  '}]'::jsonb)
;

-- Settings sections
INSERT INTO report_struct(
    report_id, sect_id, parent_sect_id, s_ord, toc_cap, tbl_cap, feature, function_name,
    content, sect_struct)
VALUES
(2, 'definedset', 'settings', 800, NULL, NULL, NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "settings",'
    '"filter": {"type": "exists", "field": "defined_val"},'
    '"columns": ['
     '{"caption": "Defined settings", "columns": ['
          '{"caption": "Setting", "id": "name", "class": "table_obj_value"},'
          '{"caption": "reset_val", "id": "reset_val", "class": "table_obj_value switch_bold"},'
          '{"caption": "Unit", "id": "unit", "class": "table_obj_value"},'
          '{"caption": "Source", "id": "source", "class": "table_obj_value"},'
          '{"caption": "Notes", "id": "notes", "class": "table_obj_value switch_bold"}'
     ']}'
    ']'
  '},'
  '{'
    '"type": "row_table",'
    '"source": "settings",'
    '"filter": {"type": "exists", "field": "default_val"},'
    '"columns": ['
     '{"caption": "Default settings", "columns": ['
          '{"caption": "Setting", "id": "name", "class": "table_obj_value"},'
          '{"caption": "reset_val", "id": "reset_val", "class": "table_obj_value switch_bold"},'
          '{"caption": "Unit", "id": "unit", "class": "table_obj_value"},'
          '{"caption": "Source", "id": "source", "class": "table_obj_value"},'
          '{"caption": "Notes", "id": "notes", "class": "table_obj_value switch_bold"}'
     ']}'
    ']'
  '}]'::jsonb)
;
-- Extension sections
INSERT INTO report_struct(
    report_id, sect_id, parent_sect_id, s_ord, toc_cap, tbl_cap, feature, function_name,
    content, sect_struct)
VALUES
(2, 'extension_versions', 'extensions', 900, NULL, NULL, NULL, NULL, NULL,
  '[{'
    '"type": "row_table",'
    '"source": "extension_versions",'
    '"ordering": "ord_ext",'
    '"columns": ['
     '{"caption": "Name", "id": "extname", "class": "table_obj_name", "title": "Name of the extension"},'
     '{"caption": "DB", "id": "dbname", "class": "table_obj_name", "title": "Name of the database"},'
     '{"caption": "First seen", "condition": "extension_versions_show_date_columns", "id": "first_seen", "class": "table_obj_value", "title": " The first appearance this extension version"},'
     '{"caption": "Last seen", "condition": "extension_versions_show_date_columns", "id": "last_seen", "class": "table_obj_value", "title": "The last appearance of the extension version"},'
     '{"caption": "Version", "id": "extversion", "class": "table_obj_value", "title": "Version name for the extension"}'
    ']'
  '}]'::jsonb)
;
