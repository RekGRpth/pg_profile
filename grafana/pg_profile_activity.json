{
  "annotations": {
    "list": [
      {
        "datasource": {
          "type": "postgres",
          "uid": "${ProfileDB}"
        },
        "enable": true,
        "iconColor": "semi-dark-green",
        "name": "Server starts",
        "target": {
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\n  setting::timestamptz as time,\n  'postmaster started' as text\nFROM sample_settings \nWHERE \n  server_id = $profile_servers AND\n  name = 'pg_postmaster_start_time' AND \n  setting::timestamptz BETWEEN $__timeFrom() AND $__timeTo() \nORDER BY time ASC",
          "refId": "Anno",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${ProfileDB}"
        },
        "enable": true,
        "iconColor": "semi-dark-yellow",
        "name": "Configuration loads",
        "target": {
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\n  setting::timestamptz as time,\n  'configuration loaded' as text\nFROM sample_settings \nWHERE \n  server_id = $profile_servers AND\n  name = 'pg_conf_load_time' AND \n  setting::timestamptz BETWEEN $__timeFrom() AND $__timeTo() \nORDER BY time ASC",
          "refId": "Anno",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      },
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "Dashboard based on subsample data",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 7,
  "links": [
    {
      "asDropdown": false,
      "icon": "dashboard",
      "includeVars": false,
      "keepTime": false,
      "tags": [],
      "targetBlank": false,
      "title": "Reset filters",
      "tooltip": "",
      "type": "link",
      "url": "/d/${__dashboard.uid}﻿?var-ProfileDB=${ProfileDB}&var-profile_servers=${profile_servers}&from=${__from}&to=${__to}"
    },
    {
      "asDropdown": false,
      "icon": "dashboard",
      "includeVars": false,
      "keepTime": false,
      "tags": [],
      "targetBlank": false,
      "title": "Interval",
      "tooltip": "",
      "type": "link",
      "url": "/d/${__dashboard.uid}﻿?var-ProfileDB=${ProfileDB}&var-profile_servers=${profile_servers}&from=${min_from}&to=${max_to}"
    },
    {
      "asDropdown": true,
      "icon": "external link",
      "includeVars": true,
      "keepTime": true,
      "tags": [
        "pg_profile"
      ],
      "targetBlank": false,
      "title": "pg_profile dashboards",
      "tooltip": "",
      "type": "dashboards",
      "url": ""
    }
  ],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 64,
      "panels": [],
      "title": "Info",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${ProfileDB}"
      },
      "description": "Use provided pg_profile function call to get report of observable interval",
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 0,
        "y": 1
      },
      "id": 30,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "get_report(${profile_servers},${startid},${endid})\n",
        "mode": "markdown"
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${ProfileDB}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT COALESCE(\n  (SELECT sample_id\n  FROM samples\n  WHERE\n    server_id = $profile_servers AND\n    sample_time < '${__from:date:iso}'\n  ORDER BY sample_id DESC\n  LIMIT 1),\n  (SELECT sample_id\n  FROM samples\n  WHERE\n    server_id = $profile_servers AND\n    sample_time > '${__from:date:iso}'\n  ORDER BY sample_id ASC\n  LIMIT 1)\n) as StartID",
          "refId": "StartID",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${ProfileDB}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "SELECT COALESCE(\n  (SELECT sample_id\n  FROM samples\n  WHERE\n    server_id = $profile_servers AND\n    sample_time < '${__to:date:iso}'\n  ORDER BY sample_id DESC\n  LIMIT 1),\n  (SELECT sample_id\n  FROM samples\n  WHERE\n    server_id = $profile_servers AND\n    sample_time > '${__to:date:iso}'\n  ORDER BY sample_id ASC\n  LIMIT 1)\n) as StartID",
          "refId": "EndID",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Report generation",
      "type": "text"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${ProfileDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 9,
        "x": 3,
        "y": 1
      },
      "id": 47,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": false
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${ProfileDB}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\n  reset_val\nFROM settings_and_changes($profile_servers, $startid, $endid)\nWHERE name = 'version'\nORDER BY first_seen ASC",
          "refId": "Version",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Version",
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 4
      },
      "id": 39,
      "panels": [],
      "title": "Sessions",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${ProfileDB}"
      },
      "description": "Sessions by states observed in subsamples.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 76,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Active"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Idle"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Idle in xact"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Idle in xact (aborted)"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "orange",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Null"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Total"
            },
            "properties": [
              {
                "id": "custom.stacking",
                "value": {
                  "group": "A",
                  "mode": "none"
                }
              },
              {
                "id": "custom.fillOpacity",
                "value": 0
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "#5bffea",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 5
      },
      "id": 81,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${ProfileDB}"
          },
          "editorMode": "code",
          "format": "time_series",
          "rawQuery": true,
          "rawSql": "SELECT\n  subsample_ts as time,\n  sum(state_null) as \"Null\",\n  sum(active) as \"Active\",\n  sum(idle) as \"Idle\",\n  sum(idle_t) as \"Idle in xact\",\n  sum(idle_ta) as \"Idle in xact (aborted)\"\nFROM\n  sample_stat_activity_cnt sd\n  NATURAL JOIN session_attr sa\nWHERE\n  sd.server_id = ${profile_servers}\n  AND sd.sample_id BETWEEN $startid + 1 AND $endid\n  AND (datname = '${database}' OR '${database}' = '' OR ('${database}' = 'N/A' AND nullif(datname,'') IS NULL))\n  AND (usename = '${usename}' OR '${usename}' = '' OR ('${usename}' = 'N/A' AND nullif(usename,'') IS NULL))\n  AND (application_name = '${app}' OR '${app}' = '' OR ('${app}' = 'N/A' AND nullif(application_name,'') IS NULL))\n  AND (client_addr::text = '${host}' OR '${host}' = '' OR ('${host}' = 'N/A' AND nullif(client_addr::text,'') IS NULL))\nGROUP BY subsample_ts\nUNION\nSELECT\n  subsample_ts as time,\n  sum(state_null) as \"Null\",\n  sum(active) as \"Active\",\n  sum(idle) as \"Idle\",\n  sum(idle_t) as \"Idle in xact\",\n  sum(idle_ta) as \"Idle in xact (aborted)\"\nFROM\n  last_stat_activity_count sd\nWHERE\n  sd.server_id = ${profile_servers}\n  AND sd.sample_id = $endid\n  AND (datname = '${database}' OR '${database}' = '' OR ('${database}' = 'N/A' AND nullif(datname,'') IS NULL))\n  AND (usename = '${usename}' OR '${usename}' = '' OR ('${usename}' = 'N/A' AND nullif(usename,'') IS NULL))\n  AND (application_name = '${app}' OR '${app}' = '' OR ('${app}' = 'N/A' AND nullif(application_name,'') IS NULL))\n  AND (client_addr::text = '${host}' OR '${host}' = '' OR ('${host}' = 'N/A' AND nullif(client_addr::text,'') IS NULL))\nGROUP BY subsample_ts\nORDER BY time\n",
          "refId": "states",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${ProfileDB}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "SELECT\n  subsample_ts as time,\n  sum(total) as \"Total\"\nFROM\n  sample_stat_activity_cnt sd\n  NATURAL JOIN session_attr sa\nWHERE\n  sd.server_id = ${profile_servers}\n  AND sd.sample_id BETWEEN $startid + 1 AND $endid\nGROUP BY subsample_ts\nUNION\nSELECT\n  subsample_ts as time,\n  sum(total) as \"Total\"\nFROM\n  last_stat_activity_count sd\nWHERE\n  sd.server_id = ${profile_servers}\n  AND sd.sample_id = $endid\nGROUP BY subsample_ts\nORDER BY time\n",
          "refId": "Total",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Sessions by states",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${ProfileDB}"
      },
      "description": "Sessions by wait_event_types observed in subsamples.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 76,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "LWLock"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#c48c2d",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Lock"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "BufferPin"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#49f841",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Activity"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "purple",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Extension"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#00af4a",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Client"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "IPC"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Timeout"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#3400e6",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "IO"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#ffaa4d",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Total"
            },
            "properties": [
              {
                "id": "custom.stacking",
                "value": {
                  "group": "A",
                  "mode": "none"
                }
              },
              {
                "id": "custom.fillOpacity",
                "value": 0
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "#5bffea",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.lineStyle",
                "value": {
                  "dash": [
                    10,
                    10
                  ],
                  "fill": "dash"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 5
      },
      "id": 82,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${ProfileDB}"
          },
          "editorMode": "code",
          "format": "time_series",
          "rawQuery": true,
          "rawSql": "SELECT\n  subsample_ts as time,\n  sum(activity) as \"Activity\",\n  sum(lwlock) as \"LWLock\",\n  sum(lock) as \"Lock\",\n  sum(bufferpin) as \"BufferPin\",\n  sum(extension) as \"Extension\",\n  sum(client) as \"Client\",\n  sum(ipc) as \"IPC\",\n  sum(timeout) as \"Timeout\",\n  sum(io) as \"IO\"\nFROM\n  sample_stat_activity_cnt sd\n  NATURAL JOIN session_attr sa\nWHERE\n  sd.server_id = ${profile_servers}\n  AND sd.sample_id BETWEEN $startid + 1 AND $endid\n  AND (datname = '${database}' OR '${database}' = '' OR ('${database}' = 'N/A' AND nullif(datname,'') IS NULL))\n  AND (usename = '${usename}' OR '${usename}' = '' OR ('${usename}' = 'N/A' AND nullif(usename,'') IS NULL))\n  AND (application_name = '${app}' OR '${app}' = '' OR ('${app}' = 'N/A' AND nullif(application_name,'') IS NULL))\n  AND (client_addr::text = '${host}' OR '${host}' = '' OR ('${host}' = 'N/A' AND nullif(client_addr::text,'') IS NULL))\nGROUP BY subsample_ts\nUNION\nSELECT\n  subsample_ts as time,\n  sum(activity) as \"Activity\",\n  sum(lwlock) as \"LWLock\",\n  sum(lock) as \"Lock\",\n  sum(bufferpin) as \"BufferPin\",\n  sum(extension) as \"Extension\",\n  sum(client) as \"Client\",\n  sum(ipc) as \"IPC\",\n  sum(timeout) as \"Timeout\",\n  sum(io) as \"IO\"\nFROM\n  last_stat_activity_count sd\nWHERE\n  sd.server_id = ${profile_servers}\n  AND sd.sample_id = $endid\n  AND (datname = '${database}' OR '${database}' = '' OR ('${database}' = 'N/A' AND nullif(datname,'') IS NULL))\n  AND (usename = '${usename}' OR '${usename}' = '' OR ('${usename}' = 'N/A' AND nullif(usename,'') IS NULL))\n  AND (application_name = '${app}' OR '${app}' = '' OR ('${app}' = 'N/A' AND nullif(application_name,'') IS NULL))\n  AND (client_addr::text = '${host}' OR '${host}' = '' OR ('${host}' = 'N/A' AND nullif(client_addr::text,'') IS NULL))\nGROUP BY subsample_ts\nORDER BY time\n",
          "refId": "waits",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "${ProfileDB}"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "SELECT\n  subsample_ts as time,\n  sum(total) as \"Total\"\nFROM\n  sample_stat_activity_cnt sd\n  NATURAL JOIN session_attr sa\nWHERE\n  sd.server_id = ${profile_servers}\n  AND sd.sample_id BETWEEN $startid + 1 AND $endid\nGROUP BY subsample_ts\nUNION\nSELECT\n  subsample_ts as time,\n  sum(total) as \"Total\"\nFROM\n  last_stat_activity_count sd\nWHERE\n  sd.server_id = ${profile_servers}\n  AND sd.sample_id = $endid\nGROUP BY subsample_ts\nORDER BY time\n",
          "refId": "Total",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Sessions by waits",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${ProfileDB}"
      },
      "description": "Distribution of sessions observed in subsamples over the value of application_name attribute.\nClick on a segment will filter out other sessions.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "links": [],
          "mappings": []
        },
        "overrides": [
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "sessions",
                  "N/A"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/.*/"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "",
                    "url": "/d/${__dashboard.uid}﻿?var-ProfileDB=${ProfileDB}&var-profile_servers=${profile_servers}&from=${__from}&to=${__to}&var-app=${__data.fields.application_name}&var-database=${database}&var-host=${host}&var-usename=${usename}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 6,
        "x": 0,
        "y": 13
      },
      "id": 85,
      "links": [
        {
          "title": "Reset Application filter",
          "url": "/d/${__dashboard.uid}﻿?var-ProfileDB=${ProfileDB}&var-profile_servers=${profile_servers}&from=${__from}&to=${__to}&var-app=&var-database=${database}&var-host=${host}&var-usename=${usename}"
        }
      ],
      "options": {
        "displayLabels": [
          "name"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "right",
          "showLegend": true,
          "values": [
            "percent"
          ]
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "adgt8urmy251cc"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\n  application_name,\n  sample_data.sessions + coalesce(last_data.sessions, 0) AS sessions\nFROM (\n  SELECT\n    COALESCE(nullif(application_name, ''), 'N/A') AS application_name,\n    sum(total) AS sessions\n  FROM\n    sample_stat_activity_cnt sd\n    NATURAL JOIN session_attr sa\n  WHERE\n    sd.server_id = ${profile_servers}\n    AND sd.sample_id BETWEEN $startid + 1 AND $endid\n    AND (datname = '${database}' OR '${database}' = '' OR ('${database}' = 'N/A' AND nullif(datname,'') IS NULL))\n    AND (usename = '${usename}' OR '${usename}' = '' OR ('${usename}' = 'N/A' AND nullif(usename,'') IS NULL))\n    AND (application_name = '${app}' OR '${app}' = '' OR ('${app}' = 'N/A' AND nullif(application_name,'') IS NULL))\n    AND (client_addr::text = '${host}' OR '${host}' = '' OR ('${host}' = 'N/A' AND nullif(client_addr::text,'') IS NULL))\n  GROUP BY application_name\n  ) sample_data\n  LEFT JOIN (\n  SELECT\n    COALESCE(nullif(application_name, ''), 'N/A') AS application_name,\n    sum(total) AS sessions\n  FROM\n    last_stat_activity_count lsa\n  WHERE\n    lsa.server_id = ${profile_servers}\n    AND lsa.sample_id = $endid\n    AND (datname = '${database}' OR '${database}' = '' OR ('${database}' = 'N/A' AND nullif(datname,'') IS NULL))\n    AND (usename = '${usename}' OR '${usename}' = '' OR ('${usename}' = 'N/A' AND nullif(usename,'') IS NULL))\n    AND (application_name = '${app}' OR '${app}' = '' OR ('${app}' = 'N/A' AND nullif(application_name,'') IS NULL))\n    AND (client_addr::text = '${host}' OR '${host}' = '' OR ('${host}' = 'N/A' AND nullif(client_addr::text,'') IS NULL))\n  GROUP BY application_name\n  ) last_data\n  USING (application_name)\nORDER BY application_name",
          "refId": "Pie",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Sessions by applications",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${ProfileDB}"
      },
      "description": "Distribution of sessions observed in subsamples over the value of datname attribute.\nClick on a segment will filter out other sessions.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "links": [],
          "mappings": []
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/.*/"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "",
                    "url": "/d/${__dashboard.uid}﻿?var-ProfileDB=${ProfileDB}&var-profile_servers=${profile_servers}&from=${__from}&to=${__to}&var-app=${app}&var-database=${__data.fields.Database}&var-host=${host}&var-usename=${usename}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 6,
        "x": 6,
        "y": 13
      },
      "id": 86,
      "links": [
        {
          "title": "Reset DB filter",
          "url": "/d/${__dashboard.uid}﻿?var-ProfileDB=${ProfileDB}&var-profile_servers=${profile_servers}&from=${__from}&to=${__to}&var-app=${app}&var-database=&var-host=${host}&var-usename=${usename}"
        }
      ],
      "options": {
        "displayLabels": [
          "name"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "right",
          "showLegend": true,
          "values": [
            "percent"
          ]
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "adgt8urmy251cc"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\n  datname AS \"Database\",\n  sample_data.sessions + coalesce(last_data.sessions, 0) AS sessions\nFROM (\n  SELECT\n    COALESCE(nullif(datname, ''), 'N/A') AS datname,\n    sum(total) AS sessions\n  FROM\n    sample_stat_activity_cnt sd\n    NATURAL JOIN session_attr sa\n  WHERE\n    sd.server_id = ${profile_servers}\n    AND sd.sample_id BETWEEN $startid + 1 AND $endid\n    AND (datname = '${database}' OR '${database}' = '' OR ('${database}' = 'N/A' AND nullif(datname,'') IS NULL))\n    AND (usename = '${usename}' OR '${usename}' = '' OR ('${usename}' = 'N/A' AND nullif(usename,'') IS NULL))\n    AND (application_name = '${app}' OR '${app}' = '' OR ('${app}' = 'N/A' AND nullif(application_name,'') IS NULL))\n    AND (client_addr::text = '${host}' OR '${host}' = '' OR ('${host}' = 'N/A' AND nullif(client_addr::text,'') IS NULL))\n  GROUP BY datname\n  ) sample_data\n  LEFT JOIN (\n  SELECT\n    COALESCE(nullif(datname, ''), 'N/A') AS datname,\n    sum(total) AS sessions\n  FROM\n    last_stat_activity_count lsa\n  WHERE\n    lsa.server_id = ${profile_servers}\n    AND lsa.sample_id = $endid\n    AND (datname = '${database}' OR '${database}' = '' OR ('${database}' = 'N/A' AND nullif(datname,'') IS NULL))\n    AND (usename = '${usename}' OR '${usename}' = '' OR ('${usename}' = 'N/A' AND nullif(usename,'') IS NULL))\n    AND (application_name = '${app}' OR '${app}' = '' OR ('${app}' = 'N/A' AND nullif(application_name,'') IS NULL))\n    AND (client_addr::text = '${host}' OR '${host}' = '' OR ('${host}' = 'N/A' AND nullif(client_addr::text,'') IS NULL))\n  GROUP BY datname\n  ) last_data\n  USING (datname)\nORDER BY datname",
          "refId": "Pie",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Sessions by databases",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${ProfileDB}"
      },
      "description": "Distribution of sessions observed in subsamples over the value of usename attribute.\nClick on a segment will filter out other sessions.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": []
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/.*/"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "",
                    "url": "/d/${__dashboard.uid}﻿?var-ProfileDB=${ProfileDB}&var-profile_servers=${profile_servers}&from=${__from}&to=${__to}&var-app=${app}&var-database=${database}&var-host=${host}&var-usename=${__data.fields.User}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 6,
        "x": 12,
        "y": 13
      },
      "id": 87,
      "links": [
        {
          "title": "Reset User filter",
          "url": "/d/${__dashboard.uid}﻿?var-ProfileDB=${ProfileDB}&var-profile_servers=${profile_servers}&from=${__from}&to=${__to}&var-app=${app}&var-database=${database}&var-host=${host}&var-usename="
        }
      ],
      "options": {
        "displayLabels": [
          "name"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "right",
          "showLegend": true,
          "values": [
            "percent"
          ]
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "adgt8urmy251cc"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\n  usename AS \"User\",\n  sample_data.sessions + coalesce(last_data.sessions, 0) AS sessions\nFROM (\n  SELECT\n    COALESCE(nullif(usename, ''), 'N/A') AS usename,\n    sum(total) AS sessions\n  FROM\n    sample_stat_activity_cnt sd\n    NATURAL JOIN session_attr sa\n  WHERE\n    sd.server_id = ${profile_servers}\n    AND sd.sample_id BETWEEN $startid + 1 AND $endid\n    AND (datname = '${database}' OR '${database}' = '' OR ('${database}' = 'N/A' AND nullif(datname,'') IS NULL))\n    AND (usename = '${usename}' OR '${usename}' = '' OR ('${usename}' = 'N/A' AND nullif(usename,'') IS NULL))\n    AND (application_name = '${app}' OR '${app}' = '' OR ('${app}' = 'N/A' AND nullif(application_name,'') IS NULL))\n    AND (client_addr::text = '${host}' OR '${host}' = '' OR ('${host}' = 'N/A' AND nullif(client_addr::text,'') IS NULL))\n  GROUP BY usename\n  ) sample_data\n  LEFT JOIN (\n  SELECT\n    COALESCE(nullif(usename, ''), 'N/A') AS usename,\n    sum(total) AS sessions\n  FROM\n    last_stat_activity_count lsa\n  WHERE\n    lsa.server_id = ${profile_servers}\n    AND lsa.sample_id = $endid\n    AND (datname = '${database}' OR '${database}' = '' OR ('${database}' = 'N/A' AND nullif(datname,'') IS NULL))\n    AND (usename = '${usename}' OR '${usename}' = '' OR ('${usename}' = 'N/A' AND nullif(usename,'') IS NULL))\n    AND (application_name = '${app}' OR '${app}' = '' OR ('${app}' = 'N/A' AND nullif(application_name,'') IS NULL))\n    AND (client_addr::text = '${host}' OR '${host}' = '' OR ('${host}' = 'N/A' AND nullif(client_addr::text,'') IS NULL))\n  GROUP BY usename\n  ) last_data\n  USING (usename)\nORDER BY usename",
          "refId": "Pie",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Sessions by users",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "${ProfileDB}"
      },
      "description": "Distribution of sessions observed in subsamples over the value of client_addr attribute.\nClick on a segment will filter out other sessions.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": []
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/.*/"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "",
                    "url": "/d/${__dashboard.uid}﻿?var-ProfileDB=${ProfileDB}&var-profile_servers=${profile_servers}&from=${__from}&to=${__to}&var-app=${app}&var-database=${database}&var-host=${__data.fields.Client}&var-usename=${usename}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 6,
        "x": 18,
        "y": 13
      },
      "id": 88,
      "links": [
        {
          "title": "Reset Client filter",
          "url": "/d/${__dashboard.uid}﻿?var-ProfileDB=${ProfileDB}&var-profile_servers=${profile_servers}&from=${__from}&to=${__to}&var-app=${app}&var-database=${database}&var-host=&var-usename=${usename}"
        }
      ],
      "options": {
        "displayLabels": [
          "name"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "right",
          "showLegend": true,
          "values": [
            "percent"
          ]
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "adgt8urmy251cc"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT\n  client_addr AS \"Client\",\n  sample_data.sessions + coalesce(last_data.sessions, 0) AS sessions\nFROM (\n  SELECT\n    COALESCE(nullif(client_addr::text, ''), 'N/A') AS client_addr,\n    sum(total) AS sessions\n  FROM\n    sample_stat_activity_cnt sd\n    NATURAL JOIN session_attr sa\n  WHERE\n    sd.server_id = ${profile_servers}\n    AND sd.sample_id BETWEEN $startid + 1 AND $endid\n    AND (datname = '${database}' OR '${database}' = '' OR ('${database}' = 'N/A' AND nullif(datname,'') IS NULL))\n    AND (usename = '${usename}' OR '${usename}' = '' OR ('${usename}' = 'N/A' AND nullif(usename,'') IS NULL))\n    AND (application_name = '${app}' OR '${app}' = '' OR ('${app}' = 'N/A' AND nullif(application_name,'') IS NULL))\n    AND (client_addr::text = '${host}' OR '${host}' = '' OR ('${host}' = 'N/A' AND nullif(client_addr::text,'') IS NULL))\n  GROUP BY client_addr\n  ) sample_data\n  LEFT JOIN (\n  SELECT\n    COALESCE(nullif(client_addr::text, ''), 'N/A') AS client_addr,\n    sum(total) AS sessions\n  FROM\n    last_stat_activity_count lsa\n  WHERE\n    lsa.server_id = ${profile_servers}\n    AND lsa.sample_id = $endid\n    AND (datname = '${database}' OR '${database}' = '' OR ('${database}' = 'N/A' AND nullif(datname,'') IS NULL))\n    AND (usename = '${usename}' OR '${usename}' = '' OR ('${usename}' = 'N/A' AND nullif(usename,'') IS NULL))\n    AND (application_name = '${app}' OR '${app}' = '' OR ('${app}' = 'N/A' AND nullif(application_name,'') IS NULL))\n    AND (client_addr::text = '${host}' OR '${host}' = '' OR ('${host}' = 'N/A' AND nullif(client_addr::text,'') IS NULL))\n  GROUP BY client_addr\n  ) last_data\n  USING (client_addr)\nORDER BY client_addr",
          "refId": "Pie",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Sessions by hosts",
      "type": "piechart"
    }
  ],
  "refresh": "",
  "schemaVersion": 39,
  "tags": [
    "pg_profile"
  ],
  "templating": {
    "list": [
      {
        "hide": 0,
        "includeAll": false,
        "label": "Database with pg_profile extension",
        "multi": false,
        "name": "ProfileDB",
        "options": [],
        "query": "postgres",
        "queryValue": "",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${ProfileDB}"
        },
        "definition": "select server_id as __value, server_name as __text FROM servers",
        "hide": 0,
        "includeAll": false,
        "label": "Server",
        "multi": false,
        "name": "profile_servers",
        "options": [],
        "query": "select server_id as __value, server_name as __text FROM servers",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${ProfileDB}"
        },
        "definition": "SELECT COALESCE(\n  (SELECT sample_id\n  FROM samples\n  WHERE\n    server_id = $profile_servers AND\n    sample_time < '${__from:date:iso}'\n  ORDER BY sample_id DESC\n  LIMIT 1),\n  (SELECT sample_id\n  FROM samples\n  WHERE\n    server_id = $profile_servers AND\n    sample_time > '${__from:date:iso}'\n  ORDER BY sample_id ASC\n  LIMIT 1)\n) as StartID",
        "description": "Sample identifier of range start",
        "hide": 2,
        "includeAll": false,
        "label": "StartID",
        "multi": false,
        "name": "startid",
        "options": [],
        "query": "SELECT COALESCE(\n  (SELECT sample_id\n  FROM samples\n  WHERE\n    server_id = $profile_servers AND\n    sample_time < '${__from:date:iso}'\n  ORDER BY sample_id DESC\n  LIMIT 1),\n  (SELECT sample_id\n  FROM samples\n  WHERE\n    server_id = $profile_servers AND\n    sample_time > '${__from:date:iso}'\n  ORDER BY sample_id ASC\n  LIMIT 1)\n) as StartID",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${ProfileDB}"
        },
        "definition": "SELECT COALESCE(\n  (SELECT sample_id\n  FROM samples\n  WHERE\n    server_id = $profile_servers AND\n    sample_time < '${__to:date:iso}'\n  ORDER BY sample_id DESC\n  LIMIT 1),\n  (SELECT sample_id\n  FROM samples\n  WHERE\n    server_id = $profile_servers AND\n    sample_time > '${__to:date:iso}'\n  ORDER BY sample_id ASC\n  LIMIT 1)\n) as StartID",
        "description": "Sample identifier of the current range end",
        "hide": 2,
        "includeAll": false,
        "label": "EndID",
        "multi": false,
        "name": "endid",
        "options": [],
        "query": "SELECT COALESCE(\n  (SELECT sample_id\n  FROM samples\n  WHERE\n    server_id = $profile_servers AND\n    sample_time < '${__to:date:iso}'\n  ORDER BY sample_id DESC\n  LIMIT 1),\n  (SELECT sample_id\n  FROM samples\n  WHERE\n    server_id = $profile_servers AND\n    sample_time > '${__to:date:iso}'\n  ORDER BY sample_id ASC\n  LIMIT 1)\n) as StartID",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${ProfileDB}"
        },
        "definition": "SELECT extract(epoch from min(sample_time))*1000 + 1 as min_from\nFROM samples\nWHERE\n  server_id = $profile_servers",
        "description": "Minimal time for the current server",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "min_from",
        "options": [],
        "query": "SELECT extract(epoch from min(sample_time))*1000 + 1 as min_from\nFROM samples\nWHERE\n  server_id = $profile_servers",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "datasource": {
          "type": "postgres",
          "uid": "${ProfileDB}"
        },
        "definition": "SELECT extract(epoch from max(sample_time))*1000 + 1 as max_to\nFROM samples\nWHERE\n  server_id = $profile_servers",
        "description": "Maximum time for the current server",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "max_to",
        "options": [],
        "query": "SELECT extract(epoch from max(sample_time))*1000 + 1 as max_to\nFROM samples\nWHERE\n  server_id = $profile_servers",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "hide": 2,
        "includeAll": false,
        "label": "Database name",
        "multi": false,
        "name": "database",
        "options": [],
        "query": "",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "hide": 2,
        "includeAll": false,
        "label": "Application",
        "multi": false,
        "name": "app",
        "options": [],
        "query": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "host",
        "options": [],
        "query": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "usename",
        "options": [],
        "query": "",
        "skipUrlSync": false,
        "type": "custom"
      }
    ]
  },
  "timepicker": {
    "refresh_intervals": [
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "",
  "title": "pg_profile activity",
  "uid": "adgt9pe8gjhmoc",
  "weekStart": ""
}
